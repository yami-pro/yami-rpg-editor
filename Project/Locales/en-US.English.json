{
  "properties": {
    "common": {
      "none": "none",
      "null": "null",
      "empty": "empty",
      "money": "Money",
      "directory": "Directory",
      "create": "Create",
      "edit": "Edit",
      "insert": "Insert",
      "toggle": "Toggle",
      "cut": "Cut",
      "copy": "Copy",
      "paste": "Paste",
      "duplicate": "Duplicate",
      "delete": "Delete",
      "selectAll": "Select All",
      "undo": "Undo",
      "redo": "Redo",
      "rename": "Rename",
      "copy-id": "Copy ID",
      "find-references": "Find References",
      "find-invalid-references": "Find Invalid References",
      "find-unused-references": "Find Unused References",
      "showInExplorer": "Show in Explorer",
      "showInFinder": "Show in Finder"
    },
    "stats": {
      "data": "Data",
      "script": "Script",
      "image": "Images",
      "media": "Media",
      "other": "Others",
      "total": "Total"
    },
    "languages": {
      "auto": "Auto",
      "en": "English",
      "fr": "French",
      "it": "Italian",
      "de": "German",
      "bg": "Bulgarian",
      "cs": "Czech",
      "da": "Danish",
      "nl": "Dutch",
      "fi": "Finnish",
      "el": "Greek",
      "hu": "Hungarian",
      "ja": "Japanese",
      "ko": "Korean",
      "no": "Norwegian",
      "pl": "Polish",
      "pt": "Portuguese",
      "ro": "Romanian",
      "ru": "Russian",
      "es": "Spanish",
      "sv": "Swedish",
      "th": "Thai",
      "tr": "Turkish",
      "ua": "Ukrainian",
      "vi": "Vietnamese",
      "zh-CN": "Simplified Chinese",
      "zh-TW": "Traditional Chinese"
    },
    "plugin": {
      "author": "Author",
      "boolean": "Boolean",
      "number": "Number",
      "variable-number": "Variable Number",
      "string": "String",
      "number[]": "Number List",
      "string[]": "String List",
      "keycode": "Keycode",
      "color": "Color",
      "option": "Option",
      "easing": "Easing",
      "team": "Team",
      "variable": "Variable",
      "id": "ID",
      "key": "Key",
      "value": "Value",
      "actor": "Actor",
      "region": "Region",
      "light": "Light",
      "animation": "Animation",
      "particle": "Particle",
      "parallax": "Parallax",
      "tilemap": "Tilemap",
      "element": "Element",
      "attribute": "Attribute",
      "attribute.group": "Attribute Group",
      "attribute.actor": "Actor Attribute",
      "attribute.skill": "Skill Attribute",
      "attribute.state": "State Attribute",
      "attribute.item": "Item Attribute",
      "attribute.equipment": "Equipment Attribute",
      "attribute.element": "Element Attribute",
      "enum": "Enum String",
      "enum.group": "Enum Group",
      "enum.shortcut-key": "Shortcut Key",
      "enum.cooldown-key": "Cooldown Key",
      "enum.equipment-slot": "Equipment Slot",
      "enum.global-event": "Custom Global Event",
      "enum.scene-event": "Custom Scene Event",
      "enum.actor-event": "Custom Actor Event",
      "enum.skill-event": "Custom Skill Event",
      "enum.state-event": "Custom State Event",
      "enum.equipment-event": "Custom Equip Event",
      "enum.item-event": "Custom Item Event",
      "enum.region-event": "Custom Region Event",
      "enum.light-event": "Custom Light Event",
      "enum.animation-event": "Custom Anim Event",
      "enum.particle-event": "Custom Particle Event",
      "enum.parallax-event": "Custom Parallax Event",
      "enum.tilemap-event": "Custom Tilemap Event",
      "enum.element-event": "Custom Element Event",
      "file": "File",
      "file.actor": "Actor File",
      "file.skill": "Skill File",
      "file.trigger": "Trigger File",
      "file.item": "Item File",
      "file.equipment": "Equipment File",
      "file.state": "State File",
      "file.event": "Event File",
      "file.scene": "Scene File",
      "file.tileset": "Tileset File",
      "file.ui": "UI File",
      "file.animation": "Animation File",
      "file.particle": "Particle File",
      "file.image": "Image File",
      "file.audio": "Audio File",
      "file.video": "Video File",
      "file.script": "Script File",
      "file.font": "Font File",
      "file.other": "Other File",
      "variable-getter": "Variable Getter",
      "variable-setter": "Variable Setter",
      "actor-getter": "Actor Getter",
      "skill-getter": "Skill Getter",
      "state-getter": "State Getter",
      "equipment-getter": "Equipment Getter",
      "item-getter": "Item Getter",
      "element-getter": "Element Getter",
      "position-getter": "Position Getter"
    },
    "reference": {
      "ui": "UI",
      "scene": "Scenes",
      "actor": "Actors",
      "skill": "Skills",
      "trigger": "Triggers",
      "item": "Items",
      "equipment": "Equipments",
      "state": "States",
      "event": "Events",
      "animation": "Animations",
      "motion": "Motions",
      "sprite": "Sprites",
      "particle": "Particles",
      "tileset": "Tilesets",
      "variable": "Variables",
      "attribute": "Attributes",
      "enumeration": "Enumerations",
      "localization": "Localization",
      "script": "Scripts",
      "plugin": "Plugins",
      "command": "Commands",
      "config": "Project Settings",
      "image": "Images",
      "audio": "Audio",
      "video": "Videos",
      "font": "Fonts",
      "other": "Other Files",
      "no-related-found": "No related references found.",
      "no-invalid-found": "No invalid references found.",
      "no-unused-found": "No unused references found."
    },
    "eventTypes": {
      "common": "Common",
      "create": "Create",
      "autorun": "Autorun",
      "hittrigger": "Hit Trigger",
      "hitactor": "Hit Actor",
      "collision": "Collision",
      "destroy": "Destroy",
      "playerenter": "Player Enter",
      "playerleave": "Player Leave",
      "actorenter": "Actor Enter",
      "actorleave": "Actor Leave",
      "skillcast": "Cast Skill",
      "skilladd": "Add Skill",
      "skillremove": "Remove Skill",
      "stateadd": "Add State",
      "stateremove": "Remove State",
      "equipmentadd": "Add Equipment",
      "equipmentremove": "Remove Equipment",
      "equipmentgain": "Gain Equipment",
      "itemuse": "Use Item",
      "itemgain": "Gain Item",
      "moneygain": "Gain Money",
      "startup": "Startup",
      "createscene": "Create Scene",
      "loadscene": "Load Scene",
      "loadsave": "Load Save",
      "showtext": "Show Text",
      "showchoices": "Show Choices",
      "preload": "Preload",
      "keydown": "Key Down",
      "keyup": "Key Up",
      "mousedown": "Mouse Down",
      "mousedownLB": "Mouse Down LB",
      "mousedownRB": "Mouse Down RB",
      "mouseup": "Mouse Up",
      "mouseupLB": "Mouse Up LB",
      "mouseupRB": "Mouse Up RB",
      "mousemove": "Mouse Move",
      "mouseenter": "Mouse Enter",
      "mouseleave": "Mouse Leave",
      "click": "Click",
      "doubleclick": "Double Click",
      "wheel": "Wheel",
      "touchstart": "Touch Start",
      "touchmove": "Touch Move",
      "touchend": "Touch End",
      "select": "Select Button",
      "deselect": "Deselect Button",
      "input": "Input",
      "focus": "Focus",
      "blur": "Blur",
      "ended": "Play Ended",
      "gamepadbuttonpress": "Gamepad Button Press",
      "gamepadbuttonrelease": "Gamepad Button Release",
      "gamepadleftstickchange": "Left Stick Change",
      "gamepadrightstickchange": "Right Stick Change"
    },
    "eventParameterTypes": {
      "boolean": "Boolean",
      "number": "Number",
      "string": "String",
      "object": "Object",
      "actor": "Actor",
      "skill": "Skill",
      "state": "State",
      "equipment": "Equipment",
      "item": "Item",
      "trigger": "Trigger",
      "light": "Light",
      "element": "Element"
    },
    "[comment]": "~~~~~~~~",
    "eventTips": {
      "common": "Will not execute automatically",
      "create": "Event triggered when the object is initialized",
      "autorun": "Automatically triggered event",
      "hittrigger": "Event triggered when the actor is hit by a trigger",
      "hitactor": "Event triggered when colliding with the target actor",
      "collision": "Event triggered when the actor collides with another actor",
      "destroy": "Event triggered before the object is destroyed",
      "playerenter": "Event triggered when the player actor enters the area",
      "playerleave": "Event triggered when the player actor leaves the area",
      "actorenter": "Event triggered when any actor enters the area",
      "actorleave": "Event triggered when any actor leaves the area",
      "skillcast": "Event triggered by the 'Cast Skill' command",
      "skilladd": "Event triggered when a skill is added to the actor",
      "skillremove": "Event triggered when a skill is removed from the actor",
      "stateadd": "Event triggered when a state is added to the actor",
      "stateremove": "Event triggered when a state is removed from the actor",
      "equipmentadd": "Event triggered when equipment is added to the actor",
      "equipmentremove": "Event triggered when equipment is removed from the actor",
      "equipmentgain": "Event triggered when the actor gains equipment",
      "itemuse": "Event triggered by the 'Use Item' command",
      "itemgain": "Event triggered when the actor gains an item",
      "moneygain": "Event triggered when the actor gains money",
      "startup": "Game startup event, triggered after preloading is complete",
      "createscene": "The event automatically called when a scene is loaded for the first time, before 'Load Scene' events; cannot be triggered by loading a save",
      "loadscene": "The event automatically called after a scene is loaded, before 'Autorun' events; can be triggered repeatedly when loading saves",
      "loadsave": "The event automatically called after loading a save",
      "showtext": "A synchronous event automatically called by the 'Show Text' command; waits for completion before continuing the main event, allowing custom dialogue boxes",
      "showchoices": "A synchronous event automatically called by the 'Show Choices' command; waits for completion before continuing the main event, allowing custom choice interfaces",
      "preload": "Event triggered when preloading starts",
      "keydown": "Event triggered when a key is pressed on the keyboard, key code is obtained through the 'Set String' command",
      "keyup": "Event triggered when a key is released on the keyboard, key code is obtained through the 'Set String' command",
      "mousedown": "Event triggered when any mouse button is pressed, button code is obtained through the 'Set Number' command",
      "mousedownLB": "Event triggered when the left mouse button is pressed, button code is obtained through the 'Set Number' command",
      "mousedownRB": "Event triggered when the right mouse button is pressed, button code is obtained through the 'Set Number' command",
      "mouseup": "Event triggered when any mouse button is released, button code is obtained through the 'Set Number' command",
      "mouseupLB": "Event triggered when the left mouse button is released, button code is obtained through the 'Set Number' command",
      "mouseupRB": "Event triggered when the right mouse button is released, button code is obtained through the 'Set Number' command",
      "mousemove": "Event triggered when the mouse is moved",
      "mouseenter": "Event triggered when the mouse enters the object",
      "mouseleave": "Event triggered when the mouse leaves the object",
      "click": "Event triggered when the mouse button is pressed and released",
      "doubleclick": "Event triggered when the mouse button is pressed twice consecutively, on the second press",
      "wheel": "Event triggered when the mouse wheel is scrolled, direction of scrolling obtained through the 'Set Number' command",
      "touchstart": "Event triggered when a finger touches the touchscreen\nAll simultaneous touch points trigger the event once\nTouch point ID is obtained through the 'Traverse' command\nTouch point position is obtained through the 'Set Number' command",
      "touchmove": "Event triggered when a finger moves on the touchscreen\nAll simultaneous touch points trigger the event once\nTouch point ID is obtained through the 'Traverse' command\nTouch point position is obtained through the 'Set Number' command",
      "touchend": "Event triggered when a finger leaves the touchscreen\nAll simultaneous touch points trigger the event once\nTouch point ID is obtained through the 'Traverse' command\nTouch point position is obtained through the 'Set Number' command",
      "select": "Event triggered when a button element is selected",
      "deselect": "Event triggered when a button element is deselected",
      "input": "Triggered when content is entered in a text box",
      "focus": "Event triggered when the text box enters input state\nFocus added using the 'Set Focus' command triggers the event",
      "blur": "Event triggered when the text box exits input state\nFocus removed using the 'Set Focus' command triggers the event",
      "ended": "Event triggered when the animation or video element finishes playing",
      "gamepadbuttonpress": "Event triggered when a gamepad button is pressed, button code is obtained through the 'Set Number' command",
      "gamepadbuttonrelease": "Event triggered when a gamepad button is released, button code is obtained through the 'Set Number' command",
      "gamepadleftstickchange": "Event triggered when the left gamepad stick changes, stick angle is obtained through the 'Set Number' command",
      "gamepadrightstickchange": "Event triggered when the right gamepad stick changes, stick angle is obtained through the 'Set Number' command"
    },
    "showChoices": {
      "yes": "Yes",
      "no": "No"
    },
    "menuFile": {
      "newProject": "New Project",
      "openProject": "Open Project",
      "revealProject": "Reveal Project",
      "revealSaveDirectory": "Reveal Save Directory",
      "openRecent": "Open Recent",
      "openRecent.reopenClosedFile": "Reopen Closed File",
      "openRecent.clearItems": "Clear Items",
      "exportLanguage": "Export Language Pack",
      "importLanguage": "Import Language Pack",
      "saveProject": "Save",
      "closeProject": "Close Project",
      "deployment": "Deployment",
      "exit": "Exit"
    },
    "menuEdit": {},
    "menuView": {
      "fullscreen": "Full Screen",
      "scene": "Scene",
      "scene.grid": "Grid",
      "scene.light": "Light",
      "scene.animation": "Animation",
      "scene.background": "Background Color",
      "ui": "UI",
      "ui.background": "Background Color",
      "ui.foreground": "Foreground Color",
      "animation": "Animation",
      "animation.background": "Background Color",
      "particle": "Particle",
      "particle.background": "Background Color",
      "layout": "Layout",
      "layout.default": "Default",
      "layout.zoom": "Zoom",
      "language": "Language",
      "language.auto": "Auto",
      "theme": "Theme",
      "theme.light": "Light",
      "theme.dark": "Dark"
    },
    "menuWindow": {
      "project": "Project Settings",
      "variable": "Global Variable",
      "attribute": "Object Attribute",
      "enum": "Enumeration",
      "local": "Localization",
      "easing": "Easing",
      "team": "Team",
      "plugin": "Plugin",
      "command": "Command",
      "run": "Run"
    },
    "menuHelp": {
      "documentation": "Documentation",
      "about": "About",
      "updateLog": "Update Log"
    },
    "menuTab": {
      "close": "Close",
      "closeOtherTabs": "Close Other Tabs",
      "closeTabsToTheRight": "Close Tabs to the Right"
    },
    "menuRecent": {
      "openProject": "Open Project",
      "removeFromList": "Remove From List"
    },
    "menuParamList": {},
    "menuCommandList": {
      "script": "Script",
      "copy-as-text": "Copy as Text",
      "open-event": "Open Event"
    },
    "menuFileOnDrop": {
      "moveTo": "Move To \"<dirName>\"",
      "copyTo": "Copy To \"<dirName>\""
    },
    "menuFileBrowser": {
      "create.folder": "Folder",
      "create.actor": "Actor",
      "create.skill": "Skill",
      "create.trigger": "Trigger",
      "create.item": "Item",
      "create.equipment": "Equipment",
      "create.state": "State",
      "create.scene": "Scene",
      "create.ui": "UI",
      "create.animation": "Animation",
      "create.particle": "Particle",
      "create.normalTileset": "Normal Tileset",
      "create.autoTileset": "Auto Tileset",
      "create.event": "Event",
      "create.script": "Script",
      "create.script.global-command": "Command",
      "create.script.global-plugin": "Plugin",
      "create.script.global-event": "Global Event",
      "create.script.object-equipment": "Object - Equipment",
      "create.script.object-item": "Object - Item",
      "create.script.object-skill": "Object - Skill",
      "create.script.object-state": "Object - State",
      "create.script.scene": "Scene",
      "create.script.scene-actor": "Scene - Actor",
      "create.script.scene-trigger": "Scene - Trigger",
      "create.script.scene-region": "Scene - Region",
      "create.script.scene-light": "Scene - Light",
      "create.script.scene-animation": "Scene - Animation",
      "create.script.scene-particle": "Scene - Particle",
      "create.script.scene-parallax": "Scene - Parallax",
      "create.script.scene-tilemap": "Scene - Tilemap",
      "create.script.ui-image": "UI - Image",
      "create.script.ui-text": "UI - Text",
      "create.script.ui-textBox": "UI - Text Box",
      "create.script.ui-dialogBox": "UI - Dialog Box",
      "create.script.ui-progressBar": "UI - Progress Bar",
      "create.script.ui-button": "UI - Button",
      "create.script.ui-animation": "UI - Animation",
      "create.script.ui-video": "UI - Video",
      "create.script.ui-window": "UI - Window",
      "create.script.ui-container": "UI - Container",
      "create.script.example": "Example",
      "openFileLocation": "Open File Location",
      "play": "Play",
      "open": "Open",
      "select": "Select",
      "import": "Import",
      "export": "Export",
      "settings": "Settings",
      "openByFileExtension": "Open by File Extension",
      "specifyTheScriptEditor": "Specify the Script Editor"
    },
    "menuScene": {
      "create.actor": "Actor",
      "create.region": "Region",
      "create.light": "Light",
      "create.animation": "Animation",
      "create.particle": "Particle Emitter",
      "create.parallax": "Parallax",
      "create.tilemap": "Tilemap",
      "setStartPosition": "Set Start Position",
      "resetStartPosition": "Reset Start Position",
      "editAnimation": "Edit Animation",
      "editParticle": "Edit Particle"
    },
    "menuSceneList": {
      "shift": "Shift",
      "reveal": "Reveal",
      "shortcut": "Shortcut",
      "shortcut.none": "None",
      "create.folder": "Folder",
      "create.actor": "Actor",
      "create.region": "Region",
      "create.light": "Light",
      "create.animation": "Animation",
      "create.particle": "Particle Emitter",
      "create.parallax": "Parallax",
      "create.tilemap": "Tilemap",
      "shiftAll": "Shift All",
      "settings": "Settings"
    },
    "menuUIList": {
      "create.image": "Image",
      "create.text": "Text",
      "create.textBox": "Text Box",
      "create.dialogBox": "Dialog Box",
      "create.progressBar": "Progress Bar",
      "create.button": "Button",
      "create.animation": "Animation",
      "create.video": "Video",
      "create.window": "Window",
      "create.container": "Container",
      "create.reference": "Reference",
      "create.shortcut": "Shortcut",
      "create.prefab": "Prefab",
      "reveal": "Reveal",
      "set-as-prefab": "Set As Prefab",
      "unset-as-prefab": "Unset As Prefab"
    },
    "menuAnimationList": {},
    "menuAnimationLayerList": {
      "create.joint": "Joint",
      "create.sprite": "Sprite",
      "create.particle": "Particle Emitter",
      "create.sound": "Sound Effect",
      "shift": "Shift"
    },
    "menuAnimationTimeline": {
      "insert": "Insert",
      "extend": "Extend",
      "deleteAndShift": "Delete And Shift"
    },
    "menuParticleList": {},
    "menuVariableList": {
      "create.folder": "Folder",
      "create.variable": "Variable"
    },
    "menuAttributeList": {
      "create.folder": "Folder",
      "create.attribute": "Attribute",
      "set-as": "Set As",
      "set-as.none": "None",
      "set-as.actor": "Actor Attributes",
      "set-as.skill": "Skill Attributes",
      "set-as.state": "State Attributes",
      "set-as.item": "Item Attributes",
      "set-as.equipment": "Equipment Attributes",
      "set-as.element": "Element Attributes"
    },
    "menuEnumList": {
      "create.folder": "Folder",
      "create.string": "String",
      "set-as": "Set As",
      "set-as.none": "None",
      "set-as.shortcut-key": "Shortcut Keys",
      "set-as.cooldown-key": "Cooldown Keys",
      "set-as.equipment-slot": "Equipment Slots",
      "set-as.global-event": "Global Events",
      "set-as.scene-event": "Scene Events",
      "set-as.actor-event": "Actor Events",
      "set-as.skill-event": "Skill Events",
      "set-as.state-event": "State Events",
      "set-as.equipment-event": "Equipment Events",
      "set-as.item-event": "Item Events",
      "set-as.region-event": "Region Events",
      "set-as.light-event": "Light Events",
      "set-as.animation-event": "Animation Events",
      "set-as.particle-event": "Particle Events",
      "set-as.parallax-event": "Parallax Events",
      "set-as.tilemap-event": "Tilemap Events",
      "set-as.element-event": "Element Events"
    },
    "menuEventList": {
      "close": "Close",
      "close-below": "Close Below",
      "close-others": "Close Others",
      "close-all": "Close All",
      "find-related-events": "Find Related Events"
    },
    "menuLocalList": {
      "create.folder": "Folder",
      "create.text": "Text"
    },
    "menuPluginList": {},
    "menuCustomCommandList": {},
    "menuPluginOverview": {
      "detail": "Show Details"
    },
    "menuEasingList": {
      "set-key": "Set Key"
    },
    "menuTeamList": {},
    "menuTileset": {},
    "menuAutoTileTemplateList": {
      "shift": "Shift"
    },
    "menuAutoTileNodeList": {
      "setQuantity": "Set Quantity",
      "setAsCover": "Set as Cover"
    },
    "menuAutoTileFrameList": {
      "setQuantity": "Set Quantity",
      "generate": "Generate"
    },
    "menuIndexedColor": {
      "saveColor": "Save Current Color Here"
    },
    "menuTextBox": {
      "tag": "Tag",
      "tag.color": "Color",
      "tag.font": "Font",
      "tag.italic": "Italic",
      "tag.bold": "Bold",
      "tag.size": "Size",
      "tag.position": "Position",
      "tag.effect": "Effect",
      "tag.image": "Image",
      "tag.localVariable": "Local Variable",
      "tag.globalVariable": "Global Variable",
      "tag.dynamicGlobalVariable": "Dynamic Global Variable",
      "tag.localization": "Localization"
    },
    "actor": {
      "common": "Actor",
      "trigger": "TriggerActor",
      "caster": "SkillCaster",
      "latest": "LatestActor",
      "target": "TargetActor",
      "player": "PlayerActor",
      "member": "PartyMember",
      "global": "GlobalActor"
    },
    "skill": {
      "common": "Skill",
      "trigger": "TriggerSkill",
      "latest": "LatestSkill"
    },
    "state": {
      "common": "State",
      "trigger": "TriggerState",
      "latest": "LatestState"
    },
    "equipment": {
      "common": "Equipment",
      "trigger": "TriggerEquipment",
      "latest": "LatestEquipment",
      "by-id-equipped": "Equipped",
      "by-id-inventory": "Inventory"
    },
    "item": {
      "common": "Item",
      "trigger": "TriggerItem",
      "latest": "LatestItem"
    },
    "position": {
      "common": "Position",
      "relative": "Relative",
      "region.mode.center": "Center",
      "region.mode.random": "Random",
      "region.mode.random-land": "RandomLand",
      "region.mode.random-water": "RandomWater",
      "region.mode.random-wall": "RandomWall",
      "mouse": "Mouse"
    },
    "angle": {
      "position": "Towards",
      "absolute": "Absolute",
      "relative": "Relative",
      "direction": "Direction",
      "random": "RandomAngle"
    },
    "actorFilter": {
      "enemy": "Enemy",
      "friend": "Friend",
      "team": "TeamMember",
      "team-except-self": "TeamMemberExceptSelf",
      "any-except-self": "AnyExceptSelf",
      "any": "Any"
    },
    "trigger": {
      "common": "Trigger",
      "trigger": "EventTrigger",
      "latest": "LatestTrigger"
    },
    "light": {
      "common": "Light",
      "trigger": "TriggerLight",
      "latest": "LatestLight"
    },
    "region": {
      "trigger": "TriggerRegion"
    },
    "tilemap": {
      "trigger": "TriggerTilemap"
    },
    "object": {
      "common": "SceneObject",
      "trigger": "TriggerObject",
      "latest": "LatestObject"
    },
    "element": {
      "common": "Element",
      "trigger": "TriggerElement",
      "latest": "LatestElement",
      "button": "Button",
      "selected-button": "SelectedButton",
      "focus": "FocusElement",
      "parent": "GetParentElement"
    },
    "variable": {
      "self": "SelfVariable"
    },
    "parameter": {
      "param": "Param"
    },
    "blend": {
      "normal": "Normal",
      "screen": "Screen",
      "additive": "Additive",
      "subtract": "Subtract",
      "mask": "Mask"
    },
    "transition": {
      "wait": "Wait"
    },
    "command": {
      "keywords": "Keywords",
      "message": "Message",
      "showText": "Show Text",
      "showText.desc": "Call the preset event to obtain the parameters and content of this command\nYou can create a dialog box and load the content through that event",
      "showText.alias": "Text",
      "showChoices": "Show Choices",
      "showChoices.desc": "Call the preset event to obtain the parameters and content of this command\nYou can create a choice window and load the content through that event",
      "showChoices.def.0": "Yes",
      "showChoices.def.1": "No",
      "showChoices.when": "When",
      "showChoices.end": "End",
      "comment": "Comment",
      "comment.desc": "Some text used to explain and illustrate",

      "variable": "Variable",
      "setBoolean": "Set Boolean",
      "setBoolean.desc": "Write a boolean to a boolean type or non-existent variable",
      "setBoolean.alias": "Boolean",
      "setNumber": "Set Number",
      "setNumber.desc": "Write a number to a numeric type or non-existent variable",
      "setNumber.alias": "Number",
      "setNumber.math.round": "Round",
      "setNumber.math.floor": "Floor",
      "setNumber.math.ceil": "Ceil",
      "setNumber.math.sqrt": "Sqrt",
      "setNumber.math.abs": "Abs",
      "setNumber.math.cos": "Cos",
      "setNumber.math.sin": "Sin",
      "setNumber.math.tan": "Tan",
      "setNumber.math.random": "Random",
      "setNumber.math.random-int": "RandomInt",
      "setNumber.math.distance": "Distance",
      "setNumber.math.distance-x": "HorizontalDistance",
      "setNumber.math.distance-y": "VerticalDistance",
      "setNumber.math.relative-angle": "Angle",
      "setNumber.string.length": "GetLength",
      "setNumber.string.parse": "ParseNumber",
      "setNumber.string.search": "GetIndex",
      "setNumber.object.actor-x": "X",
      "setNumber.object.actor-y": "Y",
      "setNumber.object.actor-ui-x": "UI.X",
      "setNumber.object.actor-ui-y": "UI.Y",
      "setNumber.object.actor-screen-x": "ScreenX",
      "setNumber.object.actor-screen-y": "ScreenY",
      "setNumber.object.actor-angle": "Angle",
      "setNumber.object.actor-direction": "DirectionAngle",
      "setNumber.object.actor-movement-speed": "MovementSpeed",
      "setNumber.object.actor-collision-size": "CollisionSize",
      "setNumber.object.actor-collision-weight": "CollisionWeight",
      "setNumber.object.actor-scaling-factor": "ScalingFactor",
      "setNumber.object.actor-inventory-item-quantity": "Quantity",
      "setNumber.object.actor-inventory-equipment-quantity": "Quantity",
      "setNumber.object.actor-inventory-money": "Inventory.Money",
      "setNumber.object.actor-inventory-used-space": "Inventory.UsedSpace",
      "setNumber.object.actor-inventory-version": "Inventory.Version",
      "setNumber.object.actor-skill-version": "Skill.Version",
      "setNumber.object.actor-state-version": "State.Version",
      "setNumber.object.actor-equipment-version": "Equipment.Version",
      "setNumber.object.actor-shortcut-version": "Shortcut.Version",
      "setNumber.object.actor-animation-current-time": "Anim.CurrentTime",
      "setNumber.object.actor-animation-duration": "Anim.Duration",
      "setNumber.object.actor-animation-progress": "Anim.Progress",
      "setNumber.object.actor-cooldown-time": "CooldownTime",
      "setNumber.object.actor-cooldown-duration": "CooldownDuration",
      "setNumber.object.actor-cooldown-progress": "CooldownProgress",
      "setNumber.object.skill-cooldown-time": "CooldownTime",
      "setNumber.object.skill-cooldown-duration": "CooldownDuration",
      "setNumber.object.skill-cooldown-progress": "CooldownProgress",
      "setNumber.object.state-current-time": "CurrentTime",
      "setNumber.object.state-duration": "Duration",
      "setNumber.object.state-progress": "Progress",
      "setNumber.object.equipment-order": "Order",
      "setNumber.object.item-order": "Order",
      "setNumber.object.item-quantity": "Quantity",
      "setNumber.object.trigger-speed": "Speed",
      "setNumber.object.trigger-angle": "Angle",
      "setNumber.object.tilemap-width": "Width",
      "setNumber.object.tilemap-height": "Height",
      "setNumber.object.list-length": "ListLength",
      "setNumber.element.element-x": "Element.X",
      "setNumber.element.element-y": "Element.Y",
      "setNumber.element.element-width": "Element.Width",
      "setNumber.element.element-height": "Element.Height",
      "setNumber.element.element-children-count": "Element.NumberOfChildren",
      "setNumber.element.element-index-of-selected-button": "Element.IndexOfTheSelectedButton",
      "setNumber.element.transform-anchorX": "Transform.AnchorX",
      "setNumber.element.transform-anchorY": "Transform.AnchorY",
      "setNumber.element.transform-x": "Transform.X",
      "setNumber.element.transform-x2": "Transform.X2",
      "setNumber.element.transform-y": "Transform.Y",
      "setNumber.element.transform-y2": "Transform.Y2",
      "setNumber.element.transform-width": "Transform.Width",
      "setNumber.element.transform-width2": "Transform.Width2",
      "setNumber.element.transform-height": "Transform.Height",
      "setNumber.element.transform-height2": "Transform.Height2",
      "setNumber.element.transform-rotation": "Transform.Rotation",
      "setNumber.element.transform-scaleX": "Transform.ScaleX",
      "setNumber.element.transform-scaleY": "Transform.ScaleY",
      "setNumber.element.transform-skewX": "Transform.SkewX",
      "setNumber.element.transform-skewY": "Transform.SkewY",
      "setNumber.element.transform-opacity": "Transform.Opacity",
      "setNumber.element.window-visibleGridColumns": "Window.VisibleGridColumns",
      "setNumber.element.window-visibleGridRows": "Window.VisibleGridRows",
      "setNumber.element.text-textWidth": "Text.TextWidth",
      "setNumber.element.text-textHeight": "Text.TextHeight",
      "setNumber.element.textBox-number": "TextBox.Number",
      "setNumber.element.dialogBox-printEndX": "DialogBox.PrintEndX",
      "setNumber.element.dialogBox-printEndY": "DialogBox.PrintEndY",
      "setNumber.other.trigger-button": "Event.MouseButton",
      "setNumber.other.trigger-wheel-y": "Event.WheelDeltaY",
      "setNumber.other.trigger-gamepad-button": "Event.GamepadButton",
      "setNumber.other.gamepad-left-stick-angle": "Gamepad.LeftStickAngle",
      "setNumber.other.gamepad-right-stick-angle": "Gamepad.LeftStickAngle",
      "setNumber.other.mouse-screen-x": "Mouse.ScreenX",
      "setNumber.other.mouse-screen-y": "Mouse.ScreenY",
      "setNumber.other.mouse-ui-x": "Mouse.UI.X",
      "setNumber.other.mouse-ui-y": "Mouse.UI.Y",
      "setNumber.other.mouse-scene-x": "Mouse.SceneX",
      "setNumber.other.mouse-scene-y": "Mouse.SceneY",
      "setNumber.other.touch-screen-x": "Touch.ScreenX",
      "setNumber.other.touch-screen-y": "Touch.ScreenY",
      "setNumber.other.touch-ui-x": "Touch.UI.X",
      "setNumber.other.touch-ui-y": "Touch.UI.Y",
      "setNumber.other.touch-scene-x": "Touch.SceneX",
      "setNumber.other.touch-scene-y": "Touch.SceneY",
      "setNumber.other.virtual-axis-x": "VirtualAxis.X",
      "setNumber.other.virtual-axis-y": "VirtualAxis.Y",
      "setNumber.other.virtual-axis-angle": "VirtualAxis.Angle",
      "setNumber.other.start-position-x": "StartPosition.X",
      "setNumber.other.start-position-y": "StartPosition.Y",
      "setNumber.other.camera-x": "CameraX",
      "setNumber.other.camera-y": "CameraY",
      "setNumber.other.camera-zoom": "CameraZoom",
      "setNumber.other.raw-camera-zoom": "RawCameraZoom",
      "setNumber.other.screen-width": "ScreenWidth",
      "setNumber.other.screen-height": "ScreenHeight",
      "setNumber.other.scene-width": "SceneWidth",
      "setNumber.other.scene-height": "SceneHeight",
      "setNumber.other.scene-scale": "SceneScale",
      "setNumber.other.ui-scale": "UIScale",
      "setNumber.other.play-time": "PlayTime",
      "setNumber.other.elapsed-time": "ElapsedTime",
      "setNumber.other.delta-time": "DeltaTime",
      "setNumber.other.raw-delta-time": "RawDeltaTime",
      "setNumber.other.timestamp": "GetTimestamp",
      "setNumber.other.party-version": "PartyVersion",
      "setNumber.other.party-member-count": "NumberOfPartyMembers",
      "setNumber.other.actor-count": "NumberOfActors",
      "setNumber.other.latest-item-increment": "LatestItemIncrement",
      "setNumber.other.latest-money-increment": "LatestMoneyIncrement",
      "setNumber.other.loader-loaded-bytes": "Loader.LoadedBytes",
      "setNumber.other.loader-total-bytes": "Loader.TotalBytes",
      "setNumber.other.loader-completion-progress": "Loader.CompletionProgress",
      "setString": "Set String",
      "setString.desc": "Write a string to a string type or non-existent variable",
      "setString.alias": "String",
      "setString.string.char": "Char",
      "setString.string.slice": "Slice",
      "setString.string.pad-start": "PadStart",
      "setString.string.replace": "Replace",
      "setString.string.replace-all": "ReplaceAll",
      "setString.object.actor-team-id": "TeamID",
      "setString.object.actor-file-id": "FileID",
      "setString.object.actor-animation-motion-name": "Anim.MotionName",
      "setString.object.skill-file-id": "FileID",
      "setString.object.trigger-file-id": "FileID",
      "setString.object.state-file-id": "FileID",
      "setString.object.equipment-file-id": "FileID",
      "setString.object.equipment-slot": "Slot",
      "setString.object.item-file-id": "FileID",
      "setString.object.file-id": "ID",
      "setString.element.text-content": "Text.Content",
      "setString.element.textBox-text": "TextBox.Text",
      "setString.element.dialogBox-content": "DialogBox.Content",
      "setString.other.trigger-key": "EventTriggerKey",
      "setString.other.start-position-scene-id": "StartPosition.SceneId",
      "setString.other.showText-content": "ShowText.Content",
      "setString.other.showChoices-content": "ShowChoices.Content",
      "setString.other.parse-timestamp": "ParseTimestamp",
      "setString.other.screenshot": "Screenshot.Base64",
      "setString.other.game-language": "GameLanguage",
      "setObject": "Set Object",
      "setObject.desc": "Write an object to an object type or non-existent variable",
      "setObject.alias": "Object",
      "setList": "Set List",
      "setList.desc": "Create a list and write to an object type or non-existent variable, or modify a list read from a variable",
      "setList.alias": "List",
      "setList.split-string": "SplitString",
      "setList.get-attribute-names": "GetAttributeNames",
      "setList.get-attribute-keys": "GetAttributeKeys",
      "setList.get-enum-names": "GetEnumNames",
      "setList.get-enum-values": "GetEnumValues",
      "setList.get-actor-targets": "GetActorTargets",
      "deleteVariable": "Delete Variable",
      "deleteVariable.alias": "Delete",
      "deleteVariable.desc": "Delete a variable that is no longer needed",

      "flow": "Flow",
      "if": "If",
      "if.desc": "Control the flow by checking conditions.\nEnter the first branch that meets the condition.\nA branch can have multiple conditions.",
      "if.else": "Else",
      "if.end": "End",
      "if.string.include": "Includes",
      "if.string.exclude": "Excludes",
      "if.object.is-actor": "is Actor",
      "if.object.is-skill": "is Skill",
      "if.object.is-state": "is State",
      "if.object.is-equipment": "is Equipment",
      "if.object.is-item": "is Item",
      "if.object.is-trigger": "is Trigger",
      "if.object.is-light": "is Light",
      "if.object.is-element": "is Element",
      "if.actor.present-active": "is Present and Active",
      "if.actor.present": "is Present",
      "if.actor.absent": "is Absent",
      "if.actor.active": "is Active",
      "if.actor.inactive": "is Inactive",
      "if.actor.has-targets": "has Targets",
      "if.actor.has-no-targets": "has no Targets",
      "if.actor.in-screen": "is in Screen",
      "if.actor.is-player": "is Player Actor",
      "if.actor.is-member": "is Party Member",
      "if.actor.has-skill": "has",
      "if.actor.has-state": "has",
      "if.actor.has-items": "has",
      "if.actor.has-equipments": "has",
      "if.actor.has-skill-shortcut": "has Skill Shortcut",
      "if.actor.has-item-shortcut": "has Item Shortcut",
      "if.actor.equipped": "equipped",
      "if.actor.is-teammate": "is a Teammate of <actor>",
      "if.actor.is-friend": "is a Friend of <actor>",
      "if.actor.is-enemy": "is an Enemy of <actor>",
      "if.actor.is-team-member": "is a Member of <team>",
      "if.actor.is-team-friend": "is a Friend of <team>",
      "if.actor.is-team-enemy": "is an Enemy of <team>",
      "if.element.present": "is Present",
      "if.element.absent": "is Absent",
      "if.element.visible": "is Visible",
      "if.element.invisible": "is Invisible",
      "if.element.is-focus": "is Focus Element",
      "if.element.dialogbox-is-paused": "is Paused",
      "if.element.dialogbox-is-updating": "is Updating",
      "if.element.dialogbox-is-waiting": "is Waiting",
      "if.element.dialogbox-is-complete": "is Complete",
      "if.keyboard": "Keyboard",
      "if.keyboard.just-pressed": "is Just Pressed",
      "if.keyboard.just-released": "is Just Released",
      "if.keyboard.pressed": "is Pressed",
      "if.keyboard.released": "is Released",
      "if.gamepad": "Gamepad",
      "if.gamepad.just-pressed": "is Just Pressed",
      "if.gamepad.just-released": "is Just Released",
      "if.gamepad.pressed": "is Pressed",
      "if.gamepad.released": "is Released",
      "if.mouse": "Mouse",
      "if.mouse.button.0": "LeftButton",
      "if.mouse.button.1": "MiddleButton",
      "if.mouse.button.2": "RightButton",
      "if.mouse.button.3": "BackButton",
      "if.mouse.button.4": "ForwardButton",
      "if.mouse.just-pressed": "is Just Pressed",
      "if.mouse.just-released": "is Just Released",
      "if.mouse.pressed": "is Pressed",
      "if.mouse.released": "is Released",
      "if.list.include": "Includes",
      "if.list.exclude": "Excludes",
      "if.other.mouse-entered": "mouse has entered the window",
      "if.other.mouse-left": "mouse has left the window",
      "if.other.game-is-paused": "game is paused",
      "if.other.game-is-not-paused": "game is not paused",
      "if.other.scene-input-is-prevented": "scene input is prevented",
      "if.other.scene-input-is-not-prevented": "scene input is not prevented",
      "if.other.status-debugging": "In debugging mode",
      "if.other.status-deployed": "In deployed mode",
      "if.other.platform-windows": "Running on Windows platform",
      "if.other.platform-macos": "Running on macOS platform",
      "if.other.platform-mobile": "Running on a mobile platform",
      "switch": "Switch",
      "switch.desc": "Control the flow by checking conditions.\nIf the variable is one of the values listed in the branch, enter the branch.",
      "switch.case": "Case",
      "switch.default": "Default",
      "switch.end": "End",
      "switch.keyboard": "Keyboard",
      "switch.gamepad": "Gamepad",
      "switch.mouse": "Mouse",
      "loop": "Loop",
      "loop.desc": "A block of commands that will be executed repeatedly when the condition is met.\nIf the logic is flawed, it may enter an infinite loop, causing the game program to become unresponsive.",
      "loop.while": "While",
      "loop.end": "Repeat",
      "forEach": "For Each",
      "forEach.desc": "Fetch data one by one and assign it to the variable, execute the commands in the block each time it is acquired.",
      "forEach.end": "Repeat",
      "forEach.list": "ListItem",
      "forEach.skill": "Skill",
      "forEach.state": "State",
      "forEach.equipment": "EquipmentSlot",
      "forEach.inventory": "Inventory",
      "forEach.element": "ChildElement",
      "forEach.member": "PartyMember",
      "forEach.attribute": "AttributeKey",
      "forEach.enum": "EnumValue",
      "forEach.save": "SaveData",
      "forEach.touch": "TouchPointId",
      "forEach.changed-touch": "ChangedTouchPointId",
      "break": "Break",
      "break.desc": "Break out of the \"Loop\" or \"For Each\" command block",
      "continue": "Continue",
      "continue.desc": "Jump to the next round of \"Loop\" or \"For Each\"",
      "independent": "Independent",
      "independent.desc": "Separate the commands within the block for asynchronous execution (shared event variables).\nEven if the host object of the event is destroyed, the commands within the block will continue to execute.\nIt is advised not to rely on it, as placing loop logic inside may cause continuous computation in the background.\nWarning: The 'Reset' command will not stop the execution of commands within the 'Independent' block.",
      "independent.end": "End",
      "callEvent": "Call Event",
      "callEvent.desc": "Trigger a global event or a specified object event.",
      "callEvent.alias": "Call",
      "callEvent.return": "Return To",
      "callEvent.return.tip": "Accept a return value from the called event and write it to this variable.",
      "callEvent.inherited": "Inherited Event",
      "callEvent.scene": "Current Scene",
      "return": "Return",
      "return.desc": "Ends the current event. If it's a global event and a return type is specified, the return value can be passed to other events that called it.",
      "stopEvent": "Stop Event",
      "stopEvent.alias": "Stop",
      "stopEvent.desc": "End the events currently being executed by various objects.",
      "stopEvent.current": "Current Event",
      "stopEvent.scene": "Current Scene",
      "registerEvent": "Register Event",
      "registerEvent.desc": "Register or unregister a temporary event\nThe registered event shares local variables with the current event\nThe same event will not be registered multiple times",
      "registerEvent.alias.register": "Register",
      "registerEvent.alias.unregister": "Unregister",
      "registerEvent.alias.reset": "Reset",
      "registerEvent.reset.global-event": "GlobalEvent",
      "registerEvent.reset.global-events": "GlobalEvents",
      "registerEvent.reset.events": "Events",
      "registerEvent.end": "End",
      "setEvent": "Set Event",
      "setEvent.alias": "Event",
      "setEvent.desc": "Set the event currently being executed or a global event.",
      "setEvent.stop-propagation": "Stop Propagation",
      "setEvent.pause": "Pause and Save to Variable",
      "setEvent.continue": "Continue and Reset Variable",
      "setEvent.enable": "Enable",
      "setEvent.disable": "Disable",
      "setEvent.prevent-scene-input-events": "Prevent Scene Input Events",
      "setEvent.restore-scene-input-events": "Restore Scene Input Events",
      "setEvent.highest-priority": "Set to Highest Priority",
      "setEvent.goto-choice-branch": "Go to Choice Branch",
      "transition": "Transition",
      "transition.desc": "Calculate interpolation each frame during the transition period and execute the commands within the block.",
      "transition.end": "Repeat",
      "block": "Block",
      "block.desc": "Stores commands in a block for easier folding and management, with the option to start a new execution branch.",
      "block.end": "End",
      "label": "Label",
      "label.desc": "Set a label at the current position for jumping, without executing any actual content.",
      "jumpTo": "Jump to",
      "jumpTo.desc": "Jump to the specified location and continue execution.",
      "jumpTo.alias": "Jump to",
      "jumpTo.save": "Save",
      "jumpTo.savedLocation": "SavedLocation",
      "wait": "Wait",
      "wait.desc": "Wait for a period of time before continuing to execute the subsequent commands.",

      "ui": "UI",
      "createElement": "Create Element",
      "createElement.desc": "Create a preset interface element.",
      "setImage": "Set Image",
      "setImage.desc": "Set the built-in properties of the image element.",
      "setImage.image": "Image",
      "setImage.display": "Display",
      "setImage.display.stretch": "Stretch",
      "setImage.display.tile": "Tile",
      "setImage.display.clip": "Clip",
      "setImage.display.slice": "Slice",
      "setImage.flip": "Flip",
      "setImage.flip.none": "None",
      "setImage.flip.horizontal": "Horizontal",
      "setImage.flip.vertical": "Vertical",
      "setImage.flip.both": "Both",
      "setImage.blend": "Blend",
      "setImage.shiftX": "ShiftX",
      "setImage.shiftY": "ShiftY",
      "setImage.clip-0": "Clip.X",
      "setImage.clip-1": "Clip.Y",
      "setImage.clip-2": "Clip.Width",
      "setImage.clip-3": "Clip.Height",
      "loadImage": "Load Image",
      "loadImage.desc": "Load a specific image into the element.",
      "loadImage.actor-portrait": "ActorPortrait",
      "loadImage.skill-icon": "SkillIcon",
      "loadImage.state-icon": "StateIcon",
      "loadImage.equipment-icon": "EquipmentIcon",
      "loadImage.item-icon": "ItemIcon",
      "loadImage.shortcut-icon": "ShortcutIcon",
      "loadImage.base64": "Base64Image",
      "tintImage": "Tint Image",
      "tintImage.desc": "Set the tint of the image element.",
      "tintImage.full": "Tint",
      "tintImage.rgb": "RGB",
      "tintImage.gray": "Grayscale",
      "setText": "Set Text",
      "setText.desc": "Set the built-in properties of the text element.",
      "setText.content": "Content",
      "setText.size": "Size",
      "setText.lineSpacing": "LineSpacing",
      "setText.letterSpacing": "LetterSpacing",
      "setText.color": "Color",
      "setText.font": "Font",
      "setText.font.default": "Default",
      "setText.effect": "Effect",
      "setText.effect.none": "None",
      "setText.effect.shadow": "Shadow",
      "setText.effect.stroke": "Stroke",
      "setText.effect.outline": "Outline",
      "setText.blend": "Blend",
      "setTextBox": "Set Text Box",
      "setTextBox.desc": "Set the built-in properties of the text box element.",
      "setTextBox.type": "Type",
      "setTextBox.type.text": "Text",
      "setTextBox.type.number": "Number",
      "setTextBox.text": "Text",
      "setTextBox.number": "Number",
      "setTextBox.min": "Min",
      "setTextBox.max": "Max",
      "setTextBox.decimals": "Decimal Places",
      "setTextBox.color": "Color",
      "setDialogBox": "Set Dialog Box",
      "setDialogBox.desc": "设置对话框元素的内置属性",
      "setDialogBox.content": "Content",
      "setDialogBox.interval": "PrintInterval",
      "setDialogBox.size": "Size",
      "setDialogBox.lineSpacing": "LineSpacing",
      "setDialogBox.letterSpacing": "LetterSpacing",
      "setDialogBox.color": "Color",
      "setDialogBox.font": "Font",
      "setDialogBox.font.default": "Default",
      "setDialogBox.effect": "Effect",
      "setDialogBox.effect.none": "None",
      "setDialogBox.effect.shadow": "Shadow",
      "setDialogBox.effect.stroke": "Stroke",
      "setDialogBox.effect.outline": "Outline",
      "setDialogBox.blend": "Blend",
      "controlDialog": "Control Dialog",
      "controlDialog.desc": "Call the built-in methods of the dialog element.",
      "controlDialog.pause": "Pause Printing",
      "controlDialog.continue": "Continue Printing",
      "controlDialog.print-immediately": "Print Immediately",
      "controlDialog.print-next-page": "Print Next Page",
      "setProgressBar": "Set Progress Bar",
      "setProgressBar.desc": "Set the built-in properties of the progress bar element.",
      "setProgressBar.image": "Image",
      "setProgressBar.display": "Display",
      "setProgressBar.display.stretch": "Stretch",
      "setProgressBar.display.clip": "Clip",
      "setProgressBar.blend": "Blend",
      "setProgressBar.progress": "Progress",
      "setProgressBar.clip-0": "Clip.X",
      "setProgressBar.clip-1": "Clip.Y",
      "setProgressBar.clip-2": "Clip.Width",
      "setProgressBar.clip-3": "Clip.Height",
      "setProgressBar.color-0": "Color.Red",
      "setProgressBar.color-1": "Color.Green",
      "setProgressBar.color-2": "Color.Blue",
      "setProgressBar.color-3": "Color.Alpha",
      "setButton": "Set Button",
      "setButton.desc": "Set the built-in properties of the button element.",
      "setButton.normalImage": "NormalImage",
      "setButton.hoverImage": "HoverImage",
      "setButton.activeImage": "ActiveImage",
      "setButton.normalClip": "NormalClip",
      "setButton.hoverClip": "HoverClip",
      "setButton.activeClip": "ActiveClip",
      "setButton.normalTint": "NormalTint",
      "setButton.hoverTint": "HoverTint",
      "setButton.activeTint": "ActiveTint",
      "setButton.imageOpacity": "ImageOpacity",
      "setButton.content": "Content",
      "setButton.size": "Size",
      "setButton.letterSpacing": "LetterSpacing",
      "controlButton": "Control Button",
      "controlButton.desc": "Call the built-in methods of the button element.",
      "controlButton.select-default": "Select Default Button",
      "controlButton.select": "Select Button",
      "controlButton.hover-mode": "Display Hover Mode",
      "controlButton.active-mode": "Display Active Mode",
      "controlButton.normal-mode": "Restore Display Mode",
      "setAnimation": "Set Animation",
      "setAnimation.desc": "Set the built-in properties of the animation element.",
      "setAnimation.animation": "Animation",
      "setAnimation.animation-from-actor": "Animation",
      "setAnimation.motion": "Motion",
      "setAnimation.angle": "Angle",
      "setAnimation.frame": "Frame",
      "setVideo": "Set Video",
      "setVideo.desc": "Set the built-in properties of the video element.",
      "setVideo.video": "Video",
      "setVideo.playbackRate": "PlaybackRate",
      "setVideo.loop": "Loop",
      "setVideo.loop.false": "Once",
      "setVideo.loop.true": "Repeat",
      "setVideo.flip": "Flip",
      "setVideo.flip.none": "None",
      "setVideo.flip.horizontal": "Horizontal",
      "setVideo.flip.vertical": "Vertical",
      "setVideo.flip.both": "Both",
      "setVideo.blend": "Blend",
      "setWindow": "Set Window",
      "setWindow.desc": "Set the built-in properties of the window element.",
      "setWindow.scrollX": "ScrollX",
      "setWindow.scrollY": "ScrollY",
      "setWindow.gridWidth": "GridWidth",
      "setWindow.gridHeight": "GridHeight",
      "setWindow.gridGapX": "GridGapX",
      "setWindow.gridGapY": "GridGapY",
      "setWindow.paddingX": "PaddingX",
      "setWindow.paddingY": "PaddingY",
      "waitForVideo": "Wait For Video",
      "waitForVideo.desc": "Wait for the video element to finish playing before continuing to execute the subsequent commands.",
      "setElement": "Set Element",
      "setElement.desc": "Call the built-in methods of any element.",
      "setElement.alias": "Element",
      "setElement.hide": "Hide",
      "setElement.show": "Show",
      "setElement.disable-pointer-events": "Disable Pointer Events",
      "setElement.enable-pointer-events": "Enable Pointer Events",
      "setElement.skip-pointer-events": "Skip Pointer Events",
      "setElement.move-to-first": "Move to First",
      "setElement.move-to-last": "Move to Last",
      "nestElement": "Nest Element",
      "nestElement.desc": "Make the element a child of another element.",
      "moveElement": "Move Element",
      "moveElement.desc": "Set the transform properties of any element.",
      "moveElement.anchorX": "AnchorX",
      "moveElement.anchorY": "AnchorY",
      "moveElement.x": "X",
      "moveElement.x2": "X2",
      "moveElement.y": "Y",
      "moveElement.y2": "Y2",
      "moveElement.width": "Width",
      "moveElement.width2": "Width2",
      "moveElement.height": "Height",
      "moveElement.height2": "Height2",
      "moveElement.rotation": "Rotation",
      "moveElement.scaleX": "ScaleX",
      "moveElement.scaleY": "ScaleY",
      "moveElement.skewX": "SkewX",
      "moveElement.skewY": "SkewY",
      "moveElement.opacity": "Opacity",
      "deleteElement": "Delete Element",
      "deleteElement.desc": "Destroy the specified element. The destroyed element will no longer execute its associated events.",
      "deleteElement.children": "Children",
      "deleteElement.all-elements": "All Elements",
      "setPointerEventRoot": "Set Pointer Event Root",
      "setPointerEventRoot.desc": "Set the root element, so that only pointer events for this element and its descendants will be triggered, blocking pointer events for other elements.",
      "setPointerEventRoot.add": "Add",
      "setPointerEventRoot.remove": "Remove",
      "setPointerEventRoot.remove-latest": "Remove the latest",
      "setPointerEventRoot.reset": "Reset",
      "setFocus": "Set Focus",
      "setFocus.desc": "After setting the focus element, you can control its descendant buttons with shortcuts and trigger the 'focus' event.",
      "setFocus.add": "Add",
      "setFocus.remove": "Remove",
      "setFocus.remove-latest": "Remove the latest",
      "setFocus.reset": "Reset",
      "setFocus.control-child-buttons": "Child",
      "setFocus.control-descendant-buttons": "Descendant",
      "setFocus.cancelable": "Cancleable",

      "object": "Object",
      "createObject": "Create Object",
      "createObject.desc": "Create a preset object in the scene at a specified position.",
      "moveLight": "Move Light",
      "moveLight.desc": "Move the light source object to a specified position and set its built-in properties.",
      "moveLight.x": "X",
      "moveLight.y": "Y",
      "moveLight.range": "Range",
      "moveLight.intensity": "Intensity",
      "moveLight.anchorX": "AnchorX",
      "moveLight.anchorY": "AnchorY",
      "moveLight.width": "Width",
      "moveLight.height": "Height",
      "moveLight.angle": "Angle",
      "moveLight.red": "Red",
      "moveLight.green": "Green",
      "moveLight.blue": "Blue",
      "moveLight.size": "Size",
      "moveLight.shadow": "Shadow",
      "deleteObject": "Delete Object",
      "deleteObject.desc": "Destroy the specified scene object. The destroyed object will no longer execute events.",
      "setState": "Set State",
      "setState.desc": "Set the time for the state. The state will be removed when the countdown reaches 0.",
      "setState.set-time": "SetTime",
      "setState.increase-time": "IncreaseTime",
      "setState.decrease-time": "DecreaseTime",
      "playAnimation": "Play Animation",
      "playAnimation.desc": "Create an animation object, which will be automatically destroyed once it finishes playing.",
      "playAnimation.bind": "Bind",
      "playAnimation.rotatable": "Rotatable",
      "setObjectAnimation": "Set Object Animation",
      "setObjectAnimation.desc": "Temporarily change the visual properties of an object's animation",
      "setObjectAnimation.sort.actor": "ActorAnimation",
      "setObjectAnimation.sort.components": "AnimationComponents",
      "setObjectAnimation.sort.trigger": "TriggerAnimation",
      "setObjectAnimation.sort.animation": "SceneAnimation",
      "setObjectAnimation.full": "Tint",
      "setObjectAnimation.rgb": "RGB",
      "setObjectAnimation.gray": "Grayscale",
      "setObjectAnimation.set-opacity": "Opacity",
      "setObjectAnimation.set-offsetY": "OffsetY",
      "setObjectAnimation.set-rotation": "Rotation",

      "audio": "Audio",
      "playAudio": "Play Audio",
      "playAudio.desc": "Play background music, ambient sounds, sound effects, etc.",
      "stopAudio": "Stop Audio",
      "stopAudio.desc": "Immediately stop playing the specified type of sound.",
      "setVolume": "Set Volume",
      "setVolume.desc": "Adjust the volume of the sound.",
      "setPan": "Set Pan",
      "setPan.desc": "Adjust the left-right channel volume of the sound.",
      "setReverb": "Set Reverb",
      "setReverb.desc": "Simulate the echo in enclosed spaces (such as sewers, caves, halls) to enhance the environmental atmosphere.",
      "setLoop": "Set Loop",
      "setLoop.desc": "Toggle the looping mode of the sound.",
      "setLoop.once": "Once",
      "setLoop.loop": "Loop",
      "saveAudio": "Save Audio",
      "saveAudio.desc": "Save the current playback time of the audio.",
      "restoreAudio": "Restore Audio",
      "restoreAudio.desc": "Restore the last saved playback time and continue playing.",

      "actor": "Actor",
      "createActor": "Create Actor",
      "createActor.desc": "Create a new actor at a specified position in the scene.",
      "moveActor": "Move Actor",
      "moveActor.desc": "Control the movement behavior of an actor.",
      "moveActor.mode.stop": "Stop",
      "moveActor.mode.keep": "Keep",
      "moveActor.mode.straight": "Straight",
      "moveActor.mode.navigate": "Navigate",
      "moveActor.mode.navigate-bypass": "Navigate(BypassActors)",
      "moveActor.mode.teleport": "Teleport",
      "followActor": "Follow Actor",
      "followActor.desc": "Make an actor automatically follow another actor.",
      "followActor.mode.circle": "Circle",
      "followActor.mode.rectangle": "Rectangle",
      "followActor.navigate": "Navigate",
      "followActor.bypass": "Bypass",
      "followActor.once": "Once",
      "translateActor": "Translate Actor",
      "translateActor.desc": "Move the actor a certain distance in a specified direction. This can be used for displacement skills, knockback effects, attraction effects, etc.",
      "changeThreat": "Change Threat",
      "changeThreat.desc": "Change the actor's threat level towards a target (a built-in property used to filter target actors).",
      "changeThreat.increase": "Increase",
      "changeThreat.decrease": "Decrease",
      "setWeight": "Set Weight",
      "setWeight.desc": "A built-in property of the actor that affects collision behavior.",
      "setMovementSpeed": "Set Movement Speed",
      "setMovementSpeed.desc": "A built-in property of the actor that affects movement speed.",
      "setMovementSpeed.base": "BaseSpeed",
      "setMovementSpeed.factor": "SpeedFactor",
      "setMovementSpeed.factor-temp": "SpeedFactor(temp)",
      "setAngle": "Set Angle",
      "setAngle.desc": "A built-in property of the actor that affects the direction of animation motions.",
      "fixAngle": "Fix Angle",
      "fixAngle.desc": "Toggle the lock status of the actor's angle.",
      "fixAngle.fixed.true": "Fixed",
      "fixAngle.fixed.false": "Unfixed",
      "setActive": "Set Active",
      "setActive.desc": "Toggle the activation status of the actor. When deactivated, all the actor's events are paused.",
      "setActive.active.true": "Active",
      "setActive.active.false": "Inactive",
      "getActor": "Get Actor",
      "getActor.desc": "Get an actor near a specified position in the scene.",
      "getActor.square": "Square",
      "getActor.circle": "Circle",
      "getActor.condition.nearest": "Nearest",
      "getActor.condition.farthest": "Farthest",
      "getActor.condition.min-attribute-value": "MinAttributeValue",
      "getActor.condition.max-attribute-value": "MaxAttributeValue",
      "getActor.condition.min-attribute-ratio": "MinAttributeRatio",
      "getActor.condition.max-attribute-ratio": "MaxAttributeRatio",
      "getActor.condition.random": "Random",
      "getActor.active": "Active",
      "getActor.inactive": "Inactive",
      "getActor.either": "Either",
      "getActor.exclude": "Exclude",
      "getMultipleActors": "Get Multiple Actors",
      "getMultipleActors.desc": "Get multiple actors near a specified position in the scene.",
      "getMultipleActors.rectangle": "Rectangle",
      "getMultipleActors.circle": "Circle",
      "getMultipleActors.active": "Active",
      "getMultipleActors.inactive": "Inactive",
      "getMultipleActors.either": "Either",
      "deleteActor": "Delete Actor",
      "deleteActor.desc": "Delete an actor from the scene. If it's a global actor, it will be removed and placed in the background.",
      "setPlayerActor": "Set Player Actor",
      "setPlayerActor.desc": "After being set as the player actor, it can be accessed via the actor accessor (player actor).",
      "setPartyMember": "Set Party Member",
      "setPartyMember.desc": "Add or remove a party member. Must be a global actor.",
      "setPartyMember.add": "Add",
      "setPartyMember.remove": "Remove",
      "changePassableTerrain": "Change Passable Terrain",
      "changePassableTerrain.desc": "Change the passable terrain for a specified actor.",
      "changePassableTerrain.land": "Land",
      "changePassableTerrain.water": "Water",
      "changePassableTerrain.unrestricted": "Unrestricted",
      "changeActorTeam": "Change Actor Team",
      "changeActorTeam.desc": "Simultaneously change the relationships between the actor and other actors.",
      "changeActorState": "Change Actor State",
      "changeActorState.desc": "Call the built-in methods of the actor's state manager.",
      "changeActorState.add": "Add",
      "changeActorState.remove": "Remove",
      "changeActorState.remove-instance": "Remove",
      "changeActorEquipment": "Change Actor Equipment",
      "changeActorEquipment.desc": "Call the built-in methods of the actor's equipment manager.",
      "changeActorEquipment.add": "Add",
      "changeActorEquipment.remove": "Remove",
      "changeActorEquipment.add-instance": "Add",
      "changeActorEquipment.remove-instance": "Remove",
      "changeActorEquipment.remove-slot": "Remove",
      "changeActorSkill": "Change Actor Skill",
      "changeActorSkill.desc": "Call the built-in methods of the actor's skill manager.",
      "changeActorSkill.add": "Add",
      "changeActorSkill.remove": "Remove",
      "changeActorSkill.remove-instance": "Remove",
      "changeActorSkill.sort-by-order": "Sort by Filename",
      "changeActorPortrait": "Change Actor Portrait",
      "changeActorPortrait.desc": "Change the actor's appearance or expression.",
      "changeActorPortrait.clip": "Clip",
      "changeActorAnimation": "Change Actor Animation",
      "changeActorAnimation.desc": "Replace the actor's animation with a new one.",
      "changeActorSprite": "Change Actor Sprite",
      "changeActorSprite.desc": "Replace a sprite texture in the actor's animation.",
      "changeActorMotion": "Change Actor Motion",
      "changeActorMotion.desc": "Set the animation motion corresponding to the actor's special behavior.",
      "changeActorMotion.type.idle": "Idle",
      "changeActorMotion.type.move": "Move",
      "playActorAnimation": "Play Actor Animation",
      "playActorAnimation.desc": "Play an animation motion from the actor's animation, and return to the default motion after it finishes.",
      "stopActorAnimation": "Stop Actor Animation",
      "stopActorAnimation.desc": "Immediately stop the current animation motion, and return to the default motion.",
      "addAnimationComponent": "Add Animation Component",
      "addAnimationComponent.desc": "Add an extra animation component to the actor.",
      "addAnimationComponent.rotatable": "Rotatable",
      "addAnimationComponent.syncAngle": "Sync Angle",
      "setAnimationComponent": "Set Animation Component",
      "setAnimationComponent.desc": "Set the built-in properties of the animation component bound to the actor.",
      "setAnimationComponent.set-angle": "Set Angle",
      "setAnimationComponent.set-scale": "Set Scale",
      "setAnimationComponent.set-speed": "Set Speed",
      "setAnimationComponent.set-opacity": "Set Opacity",
      "setAnimationComponent.set-priority": "Set Priority",
      "setAnimationComponent.set-offsetY": "Set Offset Y",
      "setAnimationComponent.set-sprite": "Set Sprite",
      "setAnimationComponent.play-motion": "Play Motion",
      "setAnimationComponent.stop-motion": "Stop Motion",
      "removeAnimationComponent": "Remove Animation Component",
      "removeAnimationComponent.desc": "Remove the component specified animation and motion from the actor's animation component list.",
      "createGlobalActor": "Create Global Actor",
      "createGlobalActor.desc": "The global actor's data will be saved in the game save file.",
      "transferGlobalActor": "Transfer Global Actor",
      "transferGlobalActor.desc": "Transfer the global actor to a specified position in the current scene. If the actor already exists, the command will have no effect.",
      "deleteGlobalActor": "Delete Global Actor",
      "deleteGlobalActor.desc": "Completely delete the global actor when it is no longer needed.",
      "setTarget": "Set Target",
      "setTarget.desc": "Set the specified actor as the 'Target Actor' in the actor accessor",
      "getTarget": "Get Target",
      "getTarget.desc": "Select a valid actor from the target pool of a specified actor, and assign it to the actor accessor's 'target actor'.",
      "getTarget.condition.max-threat": "MaxThreat",
      "getTarget.condition.nearest": "Nearest",
      "getTarget.condition.farthest": "Farthest",
      "getTarget.condition.min-attribute-value": "MinAttributeValue",
      "getTarget.condition.max-attribute-value": "MaxAttributeValue",
      "getTarget.condition.min-attribute-ratio": "MinAttributeRatio",
      "getTarget.condition.max-attribute-ratio": "MaxAttributeRatio",
      "getTarget.condition.random": "Random",
      "appendTarget": "Append Target",
      "appendTarget.desc": "Add an actor to the actor's target pool.",
      "removeTarget": "Remove Target",
      "removeTarget.desc": "Remove an actor from the actor's target pool.",
      "detectTargets": "Detect Targets",
      "detectTargets.desc": "Search for nearby target actors that meet the conditions and add them to the target actor pool.",
      "detectTargets.inSight": "InSight",
      "discardTargets": "Discard Targets",
      "discardTargets.desc": "Discard some actors from the actor's target pool.",
      "resetTargets": "Reset Targets",
      "resetTargets.desc": "Remove all actors from the actor's target pool.",
      "renderOutline": "Render Outline",
      "renderOutline.desc": "Render the outline of the actor animation sprite.",
      "renderOutline.add": "Add",
      "renderOutline.remove": "Remove",
      "renderOutline.reset": "Reset",

      "skill": "Skill",
      "castSkill": "Cast Skill",
      "castSkill.desc": "Triggers the 'Cast Skill' event.\nIf the skill does not exist or is on cooldown, the command will not be executed.\nThe 'Cast Skill' event will inherit the 'Target Actor' from the current event actor accessor.",
      "setSkill": "Set Skill",
      "setSkill.desc": "Increase or decrease the skill's cooldown time.",
      "setSkill.set-cooldown": "SetCooldownTime",
      "setSkill.increase-cooldown": "IncreaseCooldownTime",
      "setSkill.decrease-cooldown": "DecreaseCooldownTime",
      "createTrigger": "Create Trigger",
      "createTrigger.desc": "Create a trigger, typically used in skills, to capture actors and trigger the 'Hit Event'\nAll events of the trigger will inherit the 'Target Actor' from the current event actor accessor.",
      "setTriggerSpeed": "Set Trigger Speed",
      "setTriggerSpeed.desc": "Trigger's built-in property that affects the speed of movement.",
      "setTriggerAngle": "Set Trigger Angle",
      "setTriggerAngle.desc": "Trigger's built-in property that affects the movement angle and animation motion direction.",
      "setTriggerDuration": "Set Trigger Duration",
      "setTriggerDuration.desc": "Trigger's built-in property that automatically destroys the trigger after the timeout.",
      "setTriggerDuration.set": "Set",
      "setTriggerDuration.increase": "Increase",
      "setTriggerDuration.decrease": "Decrease",
      "setTriggerMotion": "Set Trigger Motion",
      "setTriggerMotion.desc": "Change the animation motion of the trigger.",

      "inventory": "Inventory",
      "setInventory": "Set Inventory",
      "setInventory.desc": "Invoke the built-in methods of the actor's inventory.",
      "setInventory.increase-money": "IncreaseMoney",
      "setInventory.decrease-money": "DecreaseMoney",
      "setInventory.increase-items": "IncreaseItems",
      "setInventory.decrease-items": "DecreaseItems",
      "setInventory.gain-equipment": "GainEquipment",
      "setInventory.lose-equipment": "LoseEquipment",
      "setInventory.gain-equipment-instance": "GainEquipmentInstance",
      "setInventory.lose-equipment-instance": "LoseEquipmentInstance",
      "setInventory.swap": "SwapOrderOfItems",
      "setInventory.sort": "SortSimply",
      "setInventory.sort-by-order": "SortByFilename",
      "setInventory.reference": "UseGlobalActor'sInventory",
      "setInventory.dereference": "RestoreInventory",
      "setInventory.reset": "Reset",
      "useItem": "Use Item",
      "useItem.desc": "Trigger the 'Use Item' event",
      "setItem": "Set Item",
      "setItem.desc": "Increase or decrease the quantity of an item. The item will be removed from the inventory when the quantity reaches 0.",
      "setItem.increase": "Increase",
      "setItem.decrease": "Decrease",
      "setCooldown": "Set Cooldown",
      "setCooldown.desc": "Set the cooldown time for the corresponding cooldown key, which will automatically count down in the background.",
      "setCooldown.set": "Set",
      "setCooldown.increase": "Increase",
      "setCooldown.decrease": "Decrease",
      "setShortcut": "Set Shortcut",
      "setShortcut.desc": "Add an item or skill to the shortcut bar, or remove a specific shortcut slot.",
      "setShortcut.set-item-shortcut": "Set",
      "setShortcut.set-skill-shortcut": "Set",
      "setShortcut.delete-shortcut": "Delete",
      "setShortcut.swap-shortcuts": "Swap",

      "scene": "Scene",
      "activateScene": "Activate Scene",
      "activateScene.desc": "Switch between the main scene and the background scene.",
      "loadScene": "Load Scene",
      "loadScene.desc": "Destroy the current scene and load a new one.",
      "loadSubscene": "Load Subscene",
      "loadSubscene.desc": "Load all objects from the specified subscene into the current scene.",
      "unloadSubscene": "Unload Subscene",
      "unloadSubscene.desc": "Unload all objects related to the subscene.",
      "deleteScene": "Delete Scene",
      "deleteScene.desc": "Destroy the current scene.",
      "clampCamera": "Clamp Camera",
      "clampCamera.desc": "Forces the camera to view only within a rectangular area, preventing the display of scenes outside the rectangle.",
      "clampCamera.left": "Left",
      "clampCamera.top": "Top",
      "clampCamera.right": "Right",
      "clampCamera.bottom": "Bottom",
      "unclampCamera": "Unclamp Camera",
      "unclampCamera.desc": "Removes the restriction on the camera's visible area.",
      "moveCamera": "Move Camera",
      "moveCamera.desc": "The camera position affects the visible area of the scene.",
      "moveCamera.position": "Move to",
      "moveCamera.actor": "Follow",
      "setZoomFactor": "Set Zoom Factor",
      "setZoomFactor.desc": "The zoom factor for scene objects.",
      "setAmbientLight": "Set Ambient Light",
      "setAmbientLight.desc": "Change the ambient light of the current scene.",
      "tintScreen": "Tint Screen",
      "tintScreen.desc": "Change the tone of the scene's visuals.",
      "shakeScreen": "Shake Screen",
      "shakeScreen.desc": "Temporarily shake the camera to create a vibration visual effect.",
      "shakeScreen.random": "Random",
      "shakeScreen.horizontal": "Horizontal",
      "shakeScreen.vertical": "Vertical",
      "setTile": "Set Tile",
      "setTile.desc": "Replace a tile at a specific location in a tilemap.",
      "deleteTile": "Delete Tile",
      "deleteTile.desc": "Remove a tile at a specific location in a tilemap.",
      "setTerrain": "Set Terrain",
      "setTerrain.desc": "Change the terrain at a specified location.",
      "setTerrain.land": "Land",
      "setTerrain.water": "Water",
      "setTerrain.wall": "Wall",

      "system": "System",
      "setGameSpeed": "Set Game Speed",
      "setGameSpeed.desc": "Affect the game speed by scaling the 'Delta Time', allowing for time to be paused.",
      "setCursor": "Set Cursor",
      "setCursor.desc": "Change the mouse pointer image.",
      "setTeamRelation": "Set Team Relation",
      "setTeamRelation.desc": "Change the relationship between two teams, either as enemies or allies.",
      "setTeamRelation.relation.0": "Enemy",
      "setTeamRelation.relation.1": "Friend",
      "switchCollisionSystem": "Switch Collision System",
      "switchCollisionSystem.desc": "Toggle the built-in actor or scene collision system.",
      "switchCollisionSystem.enable-actor-collision": "Enable Actor Collision",
      "switchCollisionSystem.disable-actor-collision": "Disable Actor Collision",
      "switchCollisionSystem.enable-scene-collision": "Enable Scene Collision",
      "switchCollisionSystem.disable-scene-collision": "Disable Scene Collision",
      "gameData": "Game Data",
      "gameData.desc": "Save, load, or delete game data.",
      "gameData.save": "Save",
      "gameData.load": "Load",
      "gameData.delete": "Delete",
      "gameData.variables": "Variables",
      "reset": "Reset",
      "reset.desc": "Reset all game data to its initial state.",
      "pauseGame": "Pause Game",
      "pauseGame.desc": "Prevent scene pointer events from being triggered.",
      "continueGame": "Continue Game",
      "continueGame.desc": "Remove the 'Pause Game' state.",
      "preventSceneInput": "Prevent Scene Input",
      "preventSceneInput.desc": "Block scene pointer events from being triggered.",
      "restoreSceneInput": "Restore Scene Input",
      "restoreSceneInput.desc": "Allow scene pointer events to be triggered.",
      "simulateKey": "Simulate Key",
      "simulateKey.desc": "Force the triggering of keyboard events.",
      "simulateKey.click": "Click",
      "simulateKey.press": "Press",
      "simulateKey.release": "Release",
      "setLanguage": "Set Language",
      "setLanguage.desc": "Switch the localization language and refresh the text content.",
      "setResolution": "Set Resolution",
      "setResolution.desc": "Change the canvas size, scene scaling factor, and UI scaling factor.",
      "script": "Script",
      "script.desc": "Compile and execute Javascript.",

      "custom": "Custom",
      "invalidCommand": "Invalid Command",
      "blankCommandChar": " "
    },
    "confirmation": {
      "deleteReferencedFile": "Delete the referenced \"<filename>\" ?",
      "deleteSingleFile": "Delete \"<filename>\" ?",
      "deleteMultipleFiles": "Delete selected <number> files?",
      "closeUnsavedProject": "Save changes to the project?",
      "closeUnsavedProjectSettings": "Discard changes to project settings?",
      "closeUnsavedVariables": "Discard changes to variables?",
      "closeUnsavedAttributes": "Discard changes to attributes?",
      "closeUnsavedEnumeration": "Discard changes to enumeration?",
      "closeUnsavedLocalization": "Discard changes to localization?",
      "closeUnsavedPlugins": "Discard changes to plugins?",
      "closeUnsavedCommands": "Discard changes to commands?",
      "closeUnsavedEasings": "Discard changes to easings?",
      "closeUnsavedTeams": "Discard changes to teams?",
      "closeUnsavedTiles": "Discard changes to tiles?",
      "closeUnsavedData": "Discard changes to data?",
      "closeUnsavedEvent": "Discard changes to the event?",
      "closeUnsavedScript": "Discard changes to the script?",
      "compileError": "An error occurred while compiling, Continue?",
      "guidConflict": "The following files have duplicate GUIDs (16-character identifiers) and cannot be referenced correctly.\nPlease ensure GUID uniqueness by deleting or renaming unused files.",
      "oversizeImage": "The following images exceed the size limit of <size> and cannot be properly processed into textures.",
      "importLanguagePack": "Import the contents of the \"<filename>\" file to the \"<langname>\" language pack.\nThe action cannot be undone.",
      "enterFolderName": "Enter the folder name.",
      "folderAlreadyExists": "The folder already exists.",
      "versionIsTooHigh": "The project version is higher than the editor version and cannot be opened.",
      "yes": "Yes",
      "no": "No",
      "confirm": "Confirm",
      "cancel": "Cancel"
    }
  },
  "components": {
    "[comment]": "********** Common **********",
    "[confirm]": {"content": "Confirm", "tip": ""},
    "[cancel]": {"content": "Cancel", "tip": ""},
    "[apply]": {"content": "Apply"},
    "[search]": {"placeholder": "Search"},
    "[zoom]": {"tip": "$Scale\n0: 25%\n1: 50%\n2: 100%\n3: 200%\n4: 400%"},
    "[zoom-0-6]": {"tip": "$Scale\n0: 25%\n1: 50%\n2: 100%\n3: 200%\n4: 400%\n5: 800%\n6: 1600%"},
    "[back]": {"tip": "$Upper Level Directory"},
    "[view]": {"tip": "$View Mode\n0: 16x16\n1: 32x32\n2: 64x64\n3: 128x128\n4: 256x256"},
    "[easing]": {"label": "Easing", "tip": "The transition method of interpolation calculation."},
    "[duration]": {"label": "Duration", "tip": "The interpolation is calculated once per frame during the transition."},
    "[wait]": {"label": "Wait", "tip": "Whether to wait for the command to complete execution.", "options": {
      "true": {"name": "Yes", "tip": "Wait for the related content to finish before executing the next event commands."},
      "false": {"name": "No", "tip": "Immediately execute the next event commands."}
    }},

    "[comment]": "********** Title Bar **********",
    "[comment]": "~~~~~~~~",
    "title-play": {"tip": "$Run Game\nF10：Show Stats/FPS\nF11：Toggle Fullscreen\nF12：Developer Tools"},

    "[comment]": "********** Home **********",
    "home-start-label": {"content": "Start"},
    "home-start-new": {"content": "New Project"},
    "home-start-open": {"content": "Open Project"},
    "home-recent-label": {"content": "Recent"},

    "[comment]": "********** Menu **********",
    "menu-file": {"content": "File"},
    "menu-edit": {"content": "Edit"},
    "menu-view": {"content": "View"},
    "menu-window": {"content": "Window"},
    "menu-help": {"content": "Help"},

    "[comment]": "********** Nav Bar **********",
    "nav-project": {"content": "Project"},
    "nav-scene": {"content": "Scene"},
    "nav-scene-object": {"content": "Object"},
    "nav-ui": {"content": "UI"},
    "nav-ui-element": {"content": "Element"},
    "nav-animation": {"content": "Animation"},
    "nav-animation-motion": {"content": "Motion"},
    "nav-animation-timeline": {"content": "Timeline"},
    "nav-animation-easing": {"content": "Easing"},
    "nav-particle": {"content": "Particle"},
    "nav-particle-layer": {"content": "Layer"},
    "nav-inspector": {"content": "Inspector"},

    "[comment]": "********** Scene **********",
    "scene-switch-grid": {"tip": "$Grid\nRender scene grid lines"},
    "scene-switch-light": {"tip": "$Light\nRender ambient light and light sources"},
    "scene-switch-animation": {"tip": "$Animation\nPlay animations and particles"},
    "scene-switch-settings": {"tip": "$Settings\nOpen the scene settings panel"},
    "scene-layer-object": {"tip": "$Object Layer\nScene objects can be selected in this mode"},
    "scene-layer-terrain": {"tip": "$Terrain Layer\nSet the obstacle area\nLand: Actors with \"land\" or \"unrestricted\" passage terrain can move here\nWater: Actors with \"water\" or \"unrestricted\" passage terrain can move here\nWall: Actors with \"unrestricted\" passage terrain can move here, it can block \"trigger\" objects from passing through"},
    "scene-brush-eraser": {"tip": "$Eraser\nErase a tile in the tilemap"},
    "scene-brush-pencil": {"tip": "$Pencil\nDraw the selected tiles into the tilemap"},
    "scene-brush-rect": {"tip": "$Rectangle\nFill the selected tiles into the rectangular area by dragging"},
    "scene-brush-oval": {"tip": "$Oval\nFill the selected tiles into the oval area by dragging"},
    "scene-brush-fill": {"tip": "$Fill\nFill the selected tiles into the consecutive and identical tiles of the tilemap"},

    "[comment]": "********** UI **********",
    "ui-switch-settings": {"tip": "$Settings\nOpen the UI settings panel"},
    "ui-element-image": {"tip": "$Image\nCreate an image element"},
    "ui-element-text": {"tip": "$Text\nCreate a text element"},
    "ui-element-textbox": {"tip": "$Text Box\nCreate a text box element"},
    "ui-element-dialogbox": {"tip": "$Dialog Box\nCreate a dialog box element"},
    "ui-element-progressbar": {"tip": "$Progress Bar\nCreate a progress bar element"},
    "ui-element-button": {"tip": "$Button\nCreate a button element"},
    "ui-element-animation": {"tip": "$Animation\nCreate an animation element"},
    "ui-element-video": {"tip": "$Video\nCreate a video element"},
    "ui-element-window": {"tip": "$Window\nCreate a window element"},
    "ui-element-container": {"tip": "$Container\nCreate a container element"},
    "ui-element-reference": {"tip": "$Reference\nCreate a reference element"},

    "[comment]": "********** Animation **********",
    "animation-switch-mark": {"tip": "$Mark\nShow joint and particle markers"},
    "animation-switch-onionskin": {"tip": "$Onionskin\nDisplay semi-transparent sprites for the previous and next frames of the current frame"},
    "animation-switch-mirror": {"tip": "$Mirror\nFlip the animation horizontally with the Y axis as the axis of symmetry"},
    "animation-switch-settings": {"tip": "$Settings\nOpen the animation settings panel"},
    "animation-speed": {"tip": "$Playback Speed\nThe speed of playing animation on the stage\n1: Normal playback speed\n4: 4 times playback speed"},
    "animation-timeline-previousKey": {"tip": "$Previous Key Frame\nJump to the previous keyframe of the current frame"},
    "animation-timeline-previous": {"tip": "$Previous Frame\nJump to the previous frame of the current frame"},
    "animation-timeline-play": {"tip": "$Play/Pause\nIf the animation is paused, play the animation, otherwise pause the animation"},
    "animation-timeline-next": {"tip": "$Next Frame\nJump to the next frame of the current frame"},
    "animation-timeline-nextKey": {"tip": "$Next Key Frame\nJump to the next keyframe of the current frame"},
    "animation-timeline-loop": {"tip": "$Loop\nWhen the animation ends, jump to the first frame and continue playing (only effective in the editor)"},
    "animation-easing-id": {"options": {"": "No Easing"}},

    "[comment]": "********** Particle **********",
    "particle-view-wireframe": {"tip": "$Wireframe\nRender the wireframe of the particle element"},
    "particle-view-anchor": {"tip": "$Anchor\nRender the anchor point of the particle element (red cross), and the line from the anchor point to the center of the particle (green line)"},
    "particle-control-restart": {"tip": "$Restart\nClear all particle elements"},
    "particle-control-pause": {"tip": "$Pause\nPause the particle animation"},
    "particle-speed": {"tip": "$Playback Speed\nThe speed of playing particle animation on the stage\n1: Normal playback speed\n4: 4 times playback speed"},

    "[comment]": "********** Inspector - File - Scene **********",
    "fileScene-general-grid": {"label": "Scene"},
    "fileScene-width": {"label": "Width", "tip": "The number of horizontal grids for the scene (0 ~ 512)"},
    "fileScene-height": {"label": "Height", "tip": "The number of vertical grids for the scene (0 ~ 512)"},
    "fileScene-tileWidth": {"label": "Tile Width", "tip": "The width of the scene grid (16 ~ 256)"},
    "fileScene-tileHeight": {"label": "Tile Height", "tip": "The height of the scene grid (16 ~ 256)"},
    "fileScene-ambient-grid": {"label": "Ambient Light"},
    "fileScene-ambient-red-box": {"label": "Red", "tip": "Input Color (red) * Ambient Light (red) / 255 = Output Color (red)"},
    "fileScene-ambient-green-box": {"label": "Green", "tip": "Input color (green) * Ambient Light (green) / 255 = Output Color (green)"},
    "fileScene-ambient-blue-box": {"label": "Blue", "tip": "Input color (blue) * Ambient Light (blue) / 255 = Output Color (blue)"},
    "fileScene-ambient-direct-box": {"label": "Direct Light Ratio", "tip": "The color of the direct light will be rendered directly on the screen"},
    "fileScene-events": {"label": "Events", "tip": "A list of scene events that will stop execution when the scene is destroyed\n$Optional types\nCreate: Triggered at scene initialization (once)\nAutorun: Triggered when the scene is loaded (including after loading savedata)"},
    "fileScene-scripts": {"label": "Scripts", "tip": "Add script files to extend this scene"},

    "[comment]": "********** Inspector - File - UI **********",
    "fileUI-foreground-grid": {"label": "Stage Foreground"},
    "fileUI-width": {"label": "Width", "tip": "The width of the UI stage container, which is only used for preview"},
    "fileUI-height": {"label": "Height", "tip": "The height of the UI stage container, which is only used for preview"},

    "[comment]": "********** Inspector - File - Animation **********",
    "fileAnimation-sprites": {"label": "Sprites", "tip": "Set the spritesheets of this animation for use in sprite layers"},

    "[comment]": "********** Inspector - File - Tileset **********",
    "palette-scroll": {"tip": "$Vertical Scroll Mode\nOn: Slide the mouse wheel to scroll up and down the tileset\nOff: Slide the mouse wheel to zoom in and out the tileset"},
    "palette-priority": {"tip": "$Priority\nThe sorting priority of tiles when rendering on the object layer.\nTiles positioned below will always overlay tiles above.\nPriority = -1, which means that the sorting position is shifted up by a distance of one tile\nPriority = 1, which means that the sorting position is shifted down by a distance of one tile"},
    "palette-terrain": {"tip": "$Terrain\nLand: Actors with \"land\" or \"unrestricted\" passage terrain can move here\nWater: Actors with \"water\" or \"unrestricted\" passage terrain can move here\nWall: Actors with \"unrestricted\" passage terrain can move here, it can also prevent triggers from passing"},
    "palette-edit": {"tip": "$Edit Auto Tiles\nIf a file of auto tile is open, switch to edit mode and enable the context menu for tiles"},
    "palette-flip": {"tip": "$Flip normal tiles\nFlip selected normal tiles horizontally (does not change auto tiles)"},
    "fileTileset-general-grid": {"label": "Tileset"},
    "fileTileset-image": {"label": "Image", "tip": "The sprite image for normal tiles"},
    "fileTileset-width": {"label": "Width", "tip": "The number of horizontal tiles in the tileset (1 ~ 256)"},
    "fileTileset-height": {"label": "Height", "tip": "The number of vertical tiles in the tileset (1 ~ 256)"},
    "fileTileset-tileWidth": {"label": "Tile Width", "tip": "The number of horizontal pixels in a single tile (16 ~ 256)"},
    "fileTileset-tileHeight": {"label": "Tile Height", "tip": "The number of vertical pixels in a single tile (16 ~ 256)"},
    "fileTileset-globalOffsetX": {"label": "Tile Offset X", "tip": "The horizontal position offset of tiles drawn on the scene"},
    "fileTileset-globalOffsetY": {"label": "Tile Offset Y", "tip": "The vertical position offset of tiles drawn on the scene"},
    "fileTileset-globalPriority": {"label": "Tile Priority", "tip": "The sorting priority of tiles when rendering on the object layer.\nTiles positioned below will always overlay tiles above.\nPriority = -1, which means that the sorting position is shifted up by a distance of one tile\nPriority = 1, which means that the sorting position is shifted down by a distance of one tile"},

    "[comment]": "********** Inspector - File - Actor **********",
    "fileActor-general-grid": {"label": "General"},
    "fileActor-portrait": {"label": "Portrait", "tip": "The initial actor portrait\n$Related commands\nChange Actor Portrait, Load Image"},
    "fileActor-clip": {"label": "Clip", "tip": "The clip area of ​the portrait\n$Related commands\nChange Actor Portrait, Load Image"},
    "fileActor-animationId": {"label": "Animation", "tip": "The initial actor animation\n$Related command\nChange Actor Animation"},
    "fileActor-idleMotion": {"label": "Idle Motion", "tip": "The animation motion that plays automatically when the actor is idle\n$Related command\nChange Actor Motion"},
    "fileActor-moveMotion": {"label": "Move Motion", "tip": "The animation motion that plays automatically when the actor is moving\n$Related command\nChange Actor Motion"},
    "fileActor-rotatable": {"label": "Rotatable", "tip": "Whether to automatically update the animation rotation angle", "options": {
      "true": {"name": "Yes", "tip": "The animation rotates due to its angle"},
      "false": {"name": "No", "tip": "The animation never rotates"}
    }},
    "fileActor-passage": {"label": "Passable Terrain", "tip": "The initial passable terrain\n$Related command\nChange Passable Terrain", "options": {
      "land": {"name": "Land", "tip": "The actor can only move on land"},
      "water": {"name": "Water", "tip": "The actor can only move in water"},
      "unrestricted": {"name": "Unrestricted", "tip": "The actor can move on land, in water, in walls"}
    }},
    "fileActor-speed": {"label": "Movement Speed", "tip": "The initial movement speed (unit: tiles/second)\n$Related command\nSet Movement Speed"},
    "fileActor-shape": {"label": "Collision Shape", "tip": "Shape affects collision determination", "options": {
      "square": {"name": "Square", "tip": "A square centered on the actor's location"},
      "circle": {"name": "Circle", "tip": "A circle centered on the actor's location"}
    }},
    "fileActor-size": {"label": "Collision Size", "tip": "If the shape is a square, this refers to its side length (unit: tiles).\nIf the shape is a circle, this refers to its diameter (unit: tiles)."},
    "fileActor-weight": {"label": "Collision Weight", "tip": "Affects the pushing force in actor collisions.\nWeight = 0: This actor will not collide with others.\nIf Actor A's weight : Actor B's weight = 1 : 1, A pushes B at 50% of its movement speed.\nIf Actor A's weight : Actor B's weight = 1 : 2, A cannot push B at all (0% movement).\nIf Actor A's weight : Actor B's weight = 2 : 1, A pushes B at full speed (100%) with no resistance.\n$Related Command: Set Weight"},
    "fileActor-immovable": {"label": "Immovable", "tip": "Determines whether this actor can be pushed by others during a collision.", "options": {
      "true": {"name": "Yes", "tip": "This actor cannot be pushed during collisions."},
      "false": {"name": "No", "tip": "This actor's push distance will be calculated based on its weight."}
    }},
    "fileActor-scale": {"label": "Scale", "tip": "Scaling factor for actor animation."},
    "fileActor-priority": {"label": "Priority", "tip": "Determines the rendering order of actor animations.\nAnimations positioned lower will always cover those above.\nPriority = -1: The rendering position shifts up by one tile.\nPriority = 1: The rendering position shifts down by one tile."},
    "fileActor-inherit": {"label": "Inherit", "tip": "Inherits specified actor's attributes, skills, equipments, inventory, events, and scripts\nIf the same attribute exists, it overrides the inherited actor's attribute value\nIf the same type of event exists, it overrides the inherited actor's event\nOverridden events can still be triggered using the 'Call Event' command\nHowever, inherited scripts will stack instead of being overridden"},
    "fileActor-sprites": {"label": "Sprites", "tip": "The replaced spritesheets of the actor animation\n$Related command\nChange Actor Sprite"},
    "fileActor-attributes": {"label": "Attributes", "tip": "The initial attribute list\n$Optional types\nBoolean, Number, String, Enumeration(String)\n$Related commands\nSet Boolean, Set Number, Set String"},
    "fileActor-skills": {"label": "Skills", "tip": "The initial skill list\n$Related commands\nChange Actor Skill, Cast Skill"},
    "fileActor-equipments": {"label": "Equipments", "tip": "The initial equipment list\n$Related command\nChange Actor Equipment"},
    "fileActor-inventory": {"label": "Inventory", "tip": "The initial inventory list\n$Related command\nSet Inventory"},
    "fileActor-events": {"label": "Events", "tip": "A list of actor events\nEvents will stop executing when the actor is inactive or destroyed\n$Optional types\nCreate: Triggered at actor initialization (once)\nAutorun: Triggered when the actor appears in a scene (including after loading savedata)\nCollision: Triggered when the actor collides with another. Access \"Target Actor\" to get the actor that collided with this actor\nHit Trigger: Triggered when the actor is hit by a trigger. Access \"Event Trigger\" to get the trigger that collided with this actor\nCustom: Triggered by the \"Call Event\" command"},
    "fileActor-scripts": {"label": "Scripts", "tip": "Add script files to extend this actor"},

    "[comment]": "********** Inspector - File - Skill **********",
    "fileSkill-general-grid": {"label": "General"},
    "fileSkill-icon": {"label": "Icon", "tip": "Skill Icon\n$Related command\nLoad Image"},
    "fileSkill-clip": {"label": "Clip", "tip": "The clip area of ​the icon\n$Related command\nLoad Image"},
    "fileSkill-inherit": {"label": "Inherit", "tip": "Inherits specified skill's attributes, events, and scripts\nIf the same attribute exists, it overrides the inherited skill's attribute value\nIf the same type of event exists, it overrides the inherited skill's event\nOverridden events can still be triggered using the 'Call Event' command\nHowever, inherited scripts will stack instead of being overridden"},
    "fileSkill-attributes": {"label": "Attributes", "tip": "The initial attribute list\n$Optional types\nBoolean, Number, String, Enumeration(String)\n$Related commands\nSet Boolean, Set Number, Set String"},
    "fileSkill-events": {"label": "Events", "tip": "A list of skill events\nEvents will stop executing when the actor is inactive or destroyed\nAccess \"Skill Caster\" to get the actor with this skill\nAccess \"Event Trigger Actor\" to get the actor with this skill\nAccess \"Event Trigger Skill\" to get this skill\n$Optional types\nCast Skill: Triggered by the \"Cast Skill\" command\nAdd Skill: Triggered when an actor adds this skill\nRemove Skill: Triggered when an actor removes this skill\nCustom: Triggered by the \"Call Event\" command"},
    "fileSkill-scripts": {"label": "Scripts", "tip": "Add script files to extend this skill"},

    "[comment]": "********** Inspector - File - Trigger **********",
    "fileTrigger-general-grid": {"label": "General"},
    "fileTrigger-selector": {"label": "Target", "tip": "The trigger collides with the target actor and triggers the \"Hit Actor\" event", "options": {
      "enemy": {"name": "Enemy", "tip": "Select enemy actors of the skill caster"},
      "friend": {"name": "Friend", "tip": "Select friendly actors of the skill caster"},
      "team": {"name": "Team Member", "tip": "Select team members of the skill caster"},
      "team-except-self": {"name": "Team Member Except Self", "tip": "Select team members except the skill caster"},
      "any-except-self": {"name": "Any Except Self", "tip": "Select any actor except the skill caster"},
      "any": {"name": "Any", "tip": "Select any actor"}
    }},
    "fileTrigger-onHitWalls": {"label": "On Hit Walls", "tip": "What to do when the trigger collides with a wall", "options": {
      "penetrate": {"name": "Penetrate", "tip": "The trigger is not affected when it hits a wall"},
      "destroy": {"name": "Destroy", "tip": "Destroy the trigger when its anchor point enters a wall"}
    }},
    "fileTrigger-onHitActors": {"label": "On Hit Actors", "tip": "What to do when the trigger collides with an actor", "options": {
      "penetrate": {"name": "Penetrate", "tip": "The trigger is not affected when it hits an actor"},
      "destroy": {"name": "Destroy", "tip": "Destroy the trigger when it hits an actor"},
      "penetrate-destroy": {"name": "Destroy After Multiple Hits", "tip": "The trigger is destroyed after hitting actors times"}
    }},
    "fileTrigger-hitCount": {"label": "Hit Count", "tip": "The maximum number of times the trigger is allowed to hit actors"},
    "fileTrigger-shape-type": {"label": "Shape", "tip": "The shape of the trigger for collision detection", "options": {
      "rectangle": {"name": "Rectangle", "tip": "A rectangle with specified width, height, and anchor"},
      "circle": {"name": "Circle", "tip": "A circle with the trigger as the center and a specified radius"},
      "sector": {"name": "Sector", "tip": "A sector with the trigger as the center and a specified radius and central angle"}
    }},
    "fileTrigger-shape-width": {"label": "Width", "tip": "The horizontal length of the trigger shape when the trigger is facing the right (0 degrees)"},
    "fileTrigger-shape-height": {"label": "Height", "tip": "The vertical length of the trigger shape when the trigger is facing the right (0 degrees)"},
    "fileTrigger-shape-anchor": {"label": "Anchor", "tip": "The horizontal position of the connection point between the trigger and the scene when the trigger is facing the right (0 degrees)\n0 = Left\n0.5 = Center\n1 = Right"},
    "fileTrigger-shape-radius": {"label": "Radius", "tip": "The radius of the trigger shape"},
    "fileTrigger-shape-centralAngle": {"label": "Central Angle", "tip": "The sector angle"},
    "fileTrigger-speed": {"label": "Speed", "tip": "The initial movement speed of the trigger (unit: tiles/second)"},
    "fileTrigger-hitMode": {"label": "Hit Mode", "tip": "How often the trigger collides with an actor", "options": {
      "once": {"name": "Once", "tip": "Only hit an actor once"},
      "once-on-overlap": {"name": "Once On Overlap", "tip": "Only hit an actor once when he overlaps the trigger\nThe actor can be hit again after being separated from the trigger"},
      "repeat": {"name": "Repeat", "tip": "Hit an actor multiple times, and the interval time can be specified"}
    }},
    "fileTrigger-hitInterval": {"label": "Hit Interval", "tip": "The time between multiple hits on the same actor"},
    "fileTrigger-initialDelay": {"label": "Initial Delay", "tip": "The trigger is delayed to activate, and then it can hit actors"},
    "fileTrigger-effectiveTime": {"label": "Effective Time", "tip": "The duration of the trigger activation state. Once it times out, it will no longer hit an actor\nIf set to 0, it means permanent activation"},
    "fileTrigger-duration": {"label": "Duration", "tip": "The time the trigger exists, it will be destroyed after timeout\nIf set to 0, it means using the duration of the trigger animation. So the trigger will be destroyed when the animation ends"},
    "fileTrigger-inherit": {"label": "Inherit", "tip": "Inherits specified trigger's events and scripts\nIf the same type of event exists, it overrides the inherited trigger's event\nOverridden events can still be triggered using the 'Call Event' command\nHowever, inherited scripts will stack instead of being overridden"},
    "fileTrigger-animation-grid": {"label": "Animation"},
    "fileTrigger-animationId": {"label": "Animation", "tip": "The trigger animation"},
    "fileTrigger-motion": {"label": "Motion", "tip": "Select a motion of the trigger animation"},
    "fileTrigger-priority": {"label": "Priority", "tip": "The sorting priority of the trigger animation when rendering\nThe animation positioned below will always overlay the animation above\nPriority = -1: The rendering position is shifted up by one tile distance\nPriority = 1: The rendering position is shifted down by one tile distance"},
    "fileTrigger-offsetY": {"label": "Offset Y", "tip": "The vertical position offset of the trigger animation (unit: pixels)"},
    "fileTrigger-rotatable": {"label": "Rotatable", "tip": "Whether to automatically update the animation rotation angle", "options": {
      "true": {"name": "Yes", "tip": "The animation rotates due to its angle"},
      "false": {"name": "No", "tip": "The animation never rotates"}
    }},
    "fileTrigger-events": {"label": "Events", "tip": "A list of trigger events\nAccess \"Skill Caster\" to get the actor who is casting the skill\nAccess \"Event Trigger Actor\" to get the actor who is casting the skill\nAccess \"Event Trigger Skill\" to get the skill that created this trigger\n$Optional types\nAutorun: Triggered when the trigger appears in a scene\nHit Actor: Triggered when the trigger collides with an actor. Access \"Event Trigger Actor\" to get the actor who was hit\nDestroy: Triggered before the trigger is destroyed (hit an actor or wall, timeout)"},
    "fileTrigger-scripts": {"label": "Scripts", "tip": "Add script files to extend this trigger"},

    "[comment]": "********** Inspector - File - Item **********",
    "fileItem-general-grid": {"label": "General"},
    "fileItem-icon": {"label": "Icon", "tip": "Item Icon\n$Related command\nLoad Image"},
    "fileItem-clip": {"label": "Clip", "tip": "The clip area of ​the icon\n$Related command\nLoad Image"},
    "fileItem-inherit": {"label": "Inherit", "tip": "Inherits specified item's attributes, events, and scripts\nIf the same attribute exists, it overrides the inherited item's attribute value\nIf the same type of event exists, it overrides the inherited item's event\nOverridden events can still be triggered using the 'Call Event' command\nHowever, inherited scripts will stack instead of being overridden"},
    "fileItem-attributes": {"label": "Attributes", "tip": "The attribute list (readonly)\n$Optional types\nBoolean, Number, String, Enumeration(String)\n$Related commands\nSet Boolean, Set Number, Set String"},
    "fileItem-events": {"label": "Events", "tip": "A list of item events\nAccess \"Event Trigger Actor\" to get the actor that uses this item\nAccess \"Event Trigger Item\" to get this item\n$Optional types\nUse Item: Triggered when the actor uses this item\nCustom: Triggered by the \"Call Event\" command"},
    "fileItem-scripts": {"label": "Scripts", "tip": "Add script files to extend this item"},

    "[comment]": "********** Inspector - File - Equipment **********",
    "fileEquipment-general-grid": {"label": "General"},
    "fileEquipment-icon": {"label": "Icon", "tip": "Equipment Icon\n$Related command\nLoad Image"},
    "fileEquipment-clip": {"label": "Clip", "tip": "The clip area of ​the icon\n$Related command\nLoad Image"},
    "fileEquipment-inherit": {"label": "Inherit", "tip": "Inherits specified equipment's attributes, events, and scripts\nIf the same attribute exists, it overrides the inherited equipment's attribute value\nIf the same type of event exists, it overrides the inherited equipment's event\nOverridden events can still be triggered using the 'Call Event' command\nHowever, inherited scripts will stack instead of being overridden"},
    "fileEquipment-attributes": {"label": "Attributes", "tip": "The initial attribute list\n$Optional types\nBoolean, Number, String, Enumeration(String)\n$Related commands\nSet Boolean, Set Number, Set String"},
    "fileEquipment-events": {"label": "Events", "tip": "A list of equipment events\nAccess \"Event Trigger Actor\" to get the actor with this equipment\nAccess \"Event Trigger Equipment\" to get this equipment\n$Optional types\nCreate: Triggered at equipment initialization (once)\nAdd Equipment: Triggered when the actor adds this equipment\nRemove Equipment: Triggered when the actor removes this equipment\nCustom: Triggered by the \"Call Event\" command"},
    "fileEquipment-scripts": {"label": "Scripts", "tip": "Add script files to extend this equipment"},

    "[comment]": "********** Inspector - File - State **********",
    "fileState-general-grid": {"label": "General"},
    "fileState-icon": {"label": "Icon", "tip": "State Icon\n$Related command\nLoad Image"},
    "fileState-clip": {"label": "Clip", "tip": "The clip area of ​the icon\n$Related command\nLoad Image"},
    "fileState-inherit": {"label": "Inherit", "tip": "Inherits specified state's attributes, events, and scripts\nIf the same attribute exists, it overrides the inherited state's attribute value\nIf the same type of event exists, it overrides the inherited state's event\nOverridden events can still be triggered using the 'Call Event' command\nHowever, inherited scripts will stack instead of being overridden"},
    "fileState-attributes": {"label": "Attributes", "tip": "The initial attribute list\n$Optional types\nBoolean, Number, String, Enumeration(String)\n$Related commands\nSet Boolean, Set Number, Set String"},
    "fileState-events": {"label": "Events", "tip": "A list of state events\nAccess \"Skill Caster\" to get the actor who cast the skill to create this state\nAccess \"Event Trigger Actor\" to get the actor with this state\nAccess \"Event Trigger State\" to get this state\n$Optional types\nAdd State: Triggered when the actor adds this state\nRemove State: Triggered when the actor removes this state\nCustom: Triggered by the \"Call Event\" command"},
    "fileState-scripts": {"label": "Scripts", "tip": "Add script files to extend this state"},

    "[comment]": "********** Inspector - File - Event **********",
    "[comment]": "~~~~~~~~",
    "fileEvent-general-grid": {"label": "General"},
    "fileEvent-type": {"label": "Type", "tip": "Certain specific behaviors will automatically trigger related type events"},
    "fileEvent-enabled": {"label": "Enabled", "tip": "Automatically triggered by event type"},
    "fileEvent-priority": {"label": "Priority", "tip": "Triggers before element events, not affected by the \"Pause Game\" and \"Prevent Scene Input\" commands"},
    "fileEvent-namespace": {"label": "Namespace", "tip": "Enable: After the event is called, it will use an independent variable scope\nDisable: After the event is called, it will share the variable scope with the event that called it"},
    "fileEvent-returnType": {"label": "Return Type", "tip": "Pass the computed result to the calling event through the \"Return\" command", "options": {
      "none": {"name": "None", "tip": "Does not return any value"},
      "boolean": {"name": "Boolean", "tip": "Returns a boolean value"},
      "number": {"name": "Number", "tip": "Returns a numerical value"},
      "string": {"name": "String", "tip": "Returns a string"},
      "object": {"name": "Object", "tip": "Returns an object"},
      "actor": {"name": "Actor", "tip": "Returns an actor object"},
      "skill": {"name": "Skill", "tip": "Returns a skill object"},
      "state": {"name": "State", "tip": "Returns a state object"},
      "equipment": {"name": "Equipment", "tip": "Returns an equipment object"},
      "item": {"name": "Item", "tip": "Returns an item object"},
      "trigger": {"name": "Trigger", "tip": "Returns a trigger object"},
      "light": {"name": "Light", "tip": "Returns a light object"},
      "element": {"name": "Element", "tip": "Returns an element object"}
    }},
    "fileEvent-description": {"label": "Description", "tip": "Remarks or description of the event"},
    "fileEvent-parameters": {"label": "Parameters", "tip": "Parameter values can be passed when calling this event through the \"Call Event\" command\nThe parameter values will automatically be written to these variables when executing the event"},

    "[comment]": "********** Inspector - File - Image **********",
    "[comment]": "~~~~~~~~",
    "fileImage-info-grid": {"label": "File Info"},
    "fileImage-name": {"label": "Name", "tip": "File Name"},
    "fileImage-size": {"label": "Size", "tip": "File Size"},
    "fileImage-resolution": {"label": "Resolution", "tip": "Image's resolution"},
    "fileImage-image-viewer": {"label": "Image"},

    "[comment]": "********** Inspector - File - Audio **********",
    "[comment]": "~~~~~~~~",
    "fileAudio-info-grid": {"label": "File Info"},
    "fileAudio-name": {"label": "Name", "tip": "File Name"},
    "fileAudio-size": {"label": "Size", "tip": "File Size"},
    "fileAudio-duration": {"label": "Duration", "tip": "Audio length"},
    "fileAudio-bitrate": {"label": "Bitrate", "tip": "Audio bitrate - generally, higher = higher audio quality/file size"},
    "fileAudio-mixer-grid": {"label": "Mixer"},
    "fileAudio-volume-box": {"label": "Volume", "tip": "Global volume"},
    "fileAudio-pan-box": {"label": "Pan", "tip": "Affects volume placement from Left/Right channels\n0%：L/R channel equalization\n-100%：audio on Left only\n+100%：audio on Right only"},
    "fileAudio-dry-box": {"label": "Reverb - Dry", "tip": "Dry reverb volume, lower indicates greater distance from sound origin"},
    "fileAudio-wet-box": {"label": "Reverb - Wet", "tip": "Wet reverb volume simulating reverb in a closed space, higher indicates a larger space"},
    "fileAudio-progress-box": {"label": "Progress"},
    "fileAudio-frequency-canvas": {"label": "Frequency"},

    "[comment]": "********** Inspector - File - Video **********",
    "[comment]": "~~~~~~~~",
    "fileVideo-info-grid": {"label": "File Info"},
    "fileVideo-name": {"label": "Name", "tip": "File Name"},
    "fileVideo-size": {"label": "Size", "tip": "File Size"},
    "fileVideo-duration": {"label": "Duration", "tip": "Video duration"},
    "fileVideo-resolution": {"label": "Resolution", "tip": "Video resolution"},
    "fileVideo-bitrate": {"label": "Bitrate", "tip": "Video bitrate - generally, higher = higher video quality/file size"},
    "fileVideo-video": {"label": "Player"},

    "[comment]": "********** Inspector - File - Font **********",
    "fileFont-info-grid": {"label": "File Info"},
    "fileFont-name": {"label": "Name", "tip": "File Name"},
    "fileFont-size": {"label": "Size", "tip": "File Size"},
    "fileFont-font-grid": {"label": "Font Preview"},

    "[comment]": "********** Inspector - File - Script **********",
    "fileScript-info-grid": {"label": "File Info"},
    "fileScript-name": {"label": "Name", "tip": "File Name"},
    "fileScript-size": {"label": "Size", "tip": "File Size"},
    "fileScript-overview": {"label": "Overview"},

    "[comment]": "********** Inspector - Scene - Actor **********",
    "[comment]": "~~~~~~~~",
    "sceneActor-general-grid": {"label": "General"},
    "sceneActor-name": {"label": "Name", "tip": "Actor Name (note: this is a label for user reference only)"},
    "sceneActor-type": {"label": "Type", "tip": "Choose whether to create a temporary or permanent actor", "options": {
      "local": {"name": "Local Actor", "tip": "A temporary actor that is automatically destroyed when the scene is unloaded"},
      "global": {"name": "Global Actor", "tip": "A permanent actor, if it already exists, it will be transported to the current scene"}
    }},
    "sceneActor-actorId": {"label": "Actor", "tip": "Selected Actor file"},
    "sceneActor-teamId": {"label": "Team", "tip": "Actor's initial Team"},
    "sceneActor-x": {"label": "X", "tip": "Actor's initial horizontal coordinates"},
    "sceneActor-y": {"label": "Y", "tip": "Actor's initial vertical coordinates"},
    "sceneActor-angle-box": {"label": "Angle", "tip": "Actor's initial angle, affects animation orientation\nShortcut keys （Ctrl+↑/↓/←/→） can quickly set angle for the selected Actor"},
    "sceneActor-scale-box": {"label": "Scale", "tip": "Actor scaling, affects size of Actor animations and Animation Components"},
    "sceneActor-conditions": {"label": "Conditions", "tip": "Set a list of conditions for Actor to be created: if they aren't met, the Actor isn't created"},
    "sceneActor-events": {"label": "Events", "tip": "$Actor Events\nThese events no longer run if the Actor isn't active (is 'dead') or if they're deleted\nThe Events here will trigger instead of those set in the Actor file\n$Event Types\nCreate: Event triggers when Actor is initialized (executed once)\nAutorun: Event triggers as soon as the Actor appears (including after reading save data)\nCollision: Event triggers when the Actor collides with another Actor (Actor Collision rules are set in Window -> Team)\nHit Trigger: Event triggers when the Actor collides with a Trigger (Trigger settings are set in each Trigger file)\nCustom: triggered using the 'Call Event' command"},
    "sceneActor-scripts": {"label": "Scripts", "tip": "Add Script files to extend Actor functions"},

    "[comment]": "********** Inspector - Scene - Region **********",
    "[comment]": "~~~~~~~~",
    "sceneRegion-general-grid": {"label": "General"},
    "sceneRegion-name": {"label": "Name", "tip": "Region Name (note: this is a label for user reference only)"},
    "sceneRegion-color": {"label": "Color", "tip": "Region Color"},
    "sceneRegion-x": {"label": "X", "tip": "Region's initial horizontal coordinates"},
    "sceneRegion-y": {"label": "Y", "tip": "Region's initial vertical coordinates"},
    "sceneRegion-width": {"label": "Width", "tip": "Width of the Region (unit:tiles)"},
    "sceneRegion-height": {"label": "Height", "tip": "Height of the Region (unit:tiles)"},
    "sceneRegion-conditions": {"label": "Conditions", "tip": "Set a list of conditions for Region to be created: if they aren't met, the Region isn't created"},
    "sceneRegion-events": {"label": "Events", "tip": "$Region Events\nVisit\"Event Triggered Region\"to set the area\n$Options\nAutorun: Event triggers as soon as the Region appears (including after reading save data)\nPlayer Enter: Event triggers when the Player Actor enters the Region (Player Actor is set in Window -> Project Settings)\nPlayer Leave: Event triggers when the Player Actor leaves the Region (Player Actor is set in Window -> Project Settings)\nActor Enter: Event triggers when any actor enters the Region\nActor Leave: Event triggers when any actor leaves the Region"},
    "sceneRegion-scripts": {"label": "Scripts", "tip": "Add Script files to extend Region functions"},

    "[comment]": "********** Inspector - Scene - Light **********",
    "[comment]": "~~~~~~~~",
    "sceneLight-general-grid": {"label": "General"},
    "sceneLight-name": {"label": "Name", "tip": "Light Name (note: this is a label for user reference only)"},
    "sceneLight-type": {"label": "Type", "tip": "Light Parameters", "options": {
      "point": {"name": "Point", "tip": "Light that spreads around a point and has attenuation"},
      "area": {"name": "Area", "tip": "Use the area's lighting"}
    }},
    "sceneLight-blend": {"label": "Blend", "tip": "Choose a formula to blend the color with the underlying color", "options": {
      "screen": {"name": "Screen", "tip": "C = 255 - (255 - A) * (255 - B) / 255"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"},
      "max": {"name": "Max", "tip": "C = max(A, B)"}
    }},
    "sceneLight-x": {"label": "X", "tip": "Light's initial horizontal coordinates"},
    "sceneLight-y": {"label": "Y", "tip": "Light's initial vertical coordinates"},
    "sceneLight-range-box": {"label": "Range", "tip": "Light's diameter （0 ~ 128）"},
    "sceneLight-intensity-box": {"label": "Intensity", "tip": "Greater Intensity = smaller & brighter internal attenuation of Light"},
    "sceneLight-mask": {"label": "Mask", "tip": "Light cast through a mask image; if not set, defaults to a rectangle"},
    "sceneLight-anchorX-box": {"label": "Anchor X", "tip": "Horizontal position of rectangular area connection point between Light and Scene"},
    "sceneLight-anchorY-box": {"label": "Anchor Y", "tip": "Vertical position of rectangular area connection point between Light and Scene"},
    "sceneLight-width-box": {"label": "Width", "tip": "Width of the rectangular area"},
    "sceneLight-height-box": {"label": "Height", "tip": "Height of the rectangular area"},
    "sceneLight-angle-box": {"label": "Angle", "tip": "Rotation angle of the rectangular area"},
    "sceneLight-red-box": {"label": "Red", "tip": "Point Light Mode: Red component in the center of light source\nArea Light Mode: Input Color (red) * Mask Color (red) / 255 * Red / 255 = Output Color (red)"},
    "sceneLight-green-box": {"label": "Green", "tip": "Point Light Mode: Green component in the center of light source\nArea Light Mode: Input Color (green) * Mask Color (green) / 255 * Green / 255 = Output Color (green)"},
    "sceneLight-blue-box": {"label": "Blue", "tip": "Point Light Mode: Blue component in the center of light source\nArea Light Mode: Input Color (blue) * Mask Color (blue) / 255 * Blue / 255 = Output Color (blue)"},
    "sceneLight-direct-box": {"label": "Direct Light Ratio", "tip": "The color of the direct light will be rendered directly on the screen"},
    "sceneLight-conditions": {"label": "Conditions", "tip": "Set a list of conditions for Light to be created; if they aren't met, the Light isn't created"},
    "sceneLight-events": {"label": "Events", "tip": "$Light Events\nVisit\"Event Triggered Light\"to set the Light\n$Options\nAutorun: Event triggers as soon as the Light appears (including after reading save data)\nCustom: triggered using the 'Call Event' command"},
    "sceneLight-scripts": {"label": "Scripts", "tip": "Add Script files to extend Light functions"},

    "[comment]": "********** Inspector - Scene - Animation **********",
    "[comment]": "~~~~~~~~",
    "sceneAnimation-general-grid": {"label": "General"},
    "sceneAnimation-name": {"label": "Name", "tip": "Animation Name (note: this is a label for user reference only)"},
    "sceneAnimation-animationId": {"label": "Animation", "tip": "Selected Animation File"},
    "sceneAnimation-motion": {"label": "Motion", "tip": "Select an Action in the Animation"},
    "sceneAnimation-rotatable": {"label": "Rotatable", "tip": "Set to automatically update the Animation's rotation angle", "options": {
      "true": {"name": "Yes", "tip": "The Animation rotates with angle changes"},
      "false": {"name": "No", "tip": "The Animation doesn't rotate"}
    }},
    "sceneAnimation-x": {"label": "X", "tip": "Animation's initial horizontal coordinates"},
    "sceneAnimation-y": {"label": "Y", "tip": "Animation's initial vertical coordinates"},
    "sceneAnimation-angle-box": {"label": "Angle", "tip": "Animation's initial angle, affects direction of the action"},
    "sceneAnimation-scale-box": {"label": "Scale", "tip": "Animation scaling, affects the size of the Animation"},
    "sceneAnimation-speed-box": {"label": "Speed", "tip": "The playback speed of the Animation"},
    "sceneAnimation-opacity-box": {"label": "Opacity", "tip": "Animation's visibility (transparency adjustment)"},
    "sceneAnimation-priority-box": {"label": "Priority", "tip": "Sorting priority of Animation at render time (render layers)\nAnimations with lower Priority will overlap those with higher Priority\nPriority = -1: render position is offset up by one tile\nPriority = 1: render position is offset down by one tile"},
    "sceneAnimation-conditions": {"label": "Conditions", "tip": "Set a list of conditions for the Animation to be created; if they aren't met, the Animation isn't created"},
    "sceneAnimation-events": {"label": "Events", "tip": "$Animation Events\n$Options\nAutorun: Event triggers as soon as the Animation appears (including after reading save data)\nCustom: triggered using the 'Call Event' command"},
    "sceneAnimation-scripts": {"label": "Scripts", "tip": "Add Script files to extend Animation functions"},

    "[comment]": "********** Inspector - Scene - Particle **********",
    "[comment]": "~~~~~~~~",
    "sceneParticle-general-grid": {"label": "General"},
    "sceneParticle-name": {"label": "Name", "tip": "Particle Name (note: this is a label for user reference only)"},
    "sceneParticle-particleId": {"label": "Particle", "tip": "Selected Particle File"},
    "sceneParticle-x": {"label": "X", "tip": "Particle's initial horizontal coordinates"},
    "sceneParticle-y": {"label": "Y", "tip": "Particle's initial vertical coordinates"},
    "sceneParticle-angle-box": {"label": "Angle", "tip": "Particle emitter's initial angle"},
    "sceneParticle-scale-box": {"label": "Scale", "tip": "Particle's overall scaling factor"},
    "sceneParticle-speed-box": {"label": "Speed", "tip": "Particle's playback speed"},
    "sceneParticle-opacity-box": {"label": "Opacity", "tip": "Partcile's visibility (transparency adjustment)"},
    "sceneParticle-priority-box": {"label": "Priority", "tip": "Sorting priority of Particle at render time (render layers)\nParticles with lower Priority will overlap those with higher Priority\nPriority = -1: render position is offset up by one tile\nPriority = 1: render position is offset down by one tile"},
    "sceneParticle-conditions": {"label": "Conditions", "tip": "Set a list of conditions for the Particle to be created; if they aren't met, the Particle isn't created"},
    "sceneParticle-events": {"label": "Events", "tip": "$Particle Events\n$Options\nAutorun: Event triggers as soon as the Particle appears (including after reading save data)\nCustom: triggered using the 'Call Event' command"},
    "sceneParticle-scripts": {"label": "Scripts", "tip": "Add Script files to extend Particle functions"},

    "[comment]": "********** Inspector - Scene - Parallax **********",
    "[comment]": "~~~~~~~~",
    "sceneParallax-general-grid": {"label": "General"},
    "sceneParallax-name": {"label": "Name", "tip": "Parallax Name (note: this is a label for user reference only)"},
    "sceneParallax-image": {"label": "Image", "tip": "Selected Parallax File"},
    "sceneParallax-layer": {"label": "Layer", "tip": "Foreground layer always overlaps Background layer, Object layer always overlaps Background layer\nIf layers are the same type, sorting goes in order with the highest value displayed first\nIf the order is the same, sorting goes by Object list position", "options": {
      "background": {"name": "Background", "tip": "Background layer is always displayed behind (or 'under') Object layer and/or Foreground layer"},
      "foreground": {"name": "Foreground", "tip": "Foreground layer is always displayed in front of (or 'on top of') Object layer and/or Background layer"}
    }},
    "sceneParallax-order": {"label": "Order", "tip": "Parallax images and tile maps on the same layer are sorted in order, with higher values displayed in front"},
    "sceneParallax-light": {"label": "Light", "tip": "Affects the rendering of the selected image (or 'lights & shadows')", "options": {
      "raw": {"name": "Raw", "tip": "Image is unaffected by lighting"},
      "anchor": {"name": "Anchor Sampling", "tip": "Color is synthesized by sampling light relative to the image's anchor point"},
      "global": {"name": "Global Sampling", "tip": "Color is synthesized by sampling multi-pixel locations relative to the image's location"},
      "ambient": {"name": "Ambient Light", "tip": "Color is a composite of the current Scene's existing lighting"}
    }},
    "sceneParallax-blend": {"label": "Blend", "tip": "Choose a formula to blend the color with the underlying color", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},
    "sceneParallax-opacity": {"label": "Opacity", "tip": "Parallax image's visibility (transparency adjustment)"},
    "sceneParallax-x": {"label": "X", "tip": "Parallax's initial horizontal coordinates"},
    "sceneParallax-y": {"label": "Y", "tip": "Parallax's initial vertical coordinates"},
    "sceneParallax-parallax-grid": {"label": "Parallax"},
    "sceneParallax-scaleX": {"label": "Scale X", "tip": "Parallax's horizontal scaling factor"},
    "sceneParallax-scaleY": {"label": "Scale Y", "tip": "Parallax's vertical scaling factor"},
    "sceneParallax-repeatX": {"label": "Repeat X", "tip": "Parallax's horizontal tile count"},
    "sceneParallax-repeatY": {"label": "Repeat Y", "tip": "Parallax's vertical tile count"},
    "sceneParallax-anchorX": {"label": "Anchor X", "tip": "Horizontal position of rectangular area connection point between Parallax and Scene"},
    "sceneParallax-anchorY": {"label": "Anchor Y", "tip": "Vertical position of rectangular area connection point between Parallax and Scene"},
    "sceneParallax-offsetX": {"label": "Offset X", "tip": "Parallax's horizontal offset distance (in pixels)"},
    "sceneParallax-offsetY": {"label": "Offset Y", "tip": "Parallax's vertical offset distance (in pixels)"},
    "sceneParallax-parallaxFactorX": {"label": "Parallax Factor X", "tip": "The coefficient for the horizontal movement of the parallax image when the scene camera moves"},
    "sceneParallax-parallaxFactorY": {"label": "Parallax Factor Y", "tip": "The coefficient for the vertical movement of the parallax image when the scene camera moves"},
    "sceneParallax-shiftSpeedX": {"label": "Shift Speed X", "tip": "Parallax's horizontal auto-scroll speed (in pixels per second)"},
    "sceneParallax-shiftSpeedY": {"label": "Shift Speed Y", "tip": "Parallax's vertical auto-scroll speed (in pixels per second)"},
    "sceneParallax-tint-0-box": {"label": "Tint - Red", "tip": "Input color (red) + Hue (red) = Output Color (red)"},
    "sceneParallax-tint-1-box": {"label": "Tint - Green", "tip": "Input color (green) + Hue (green) = Output Color (green)"},
    "sceneParallax-tint-2-box": {"label": "Tint - Blue", "tip": "Input color (blue) + Hue (blue) = Output Color (blue)"},
    "sceneParallax-tint-3-box": {"label": "Tint - Grayscale", "tip": "Reduces color saturation (to black & white if high enough)"},
    "sceneParallax-conditions": {"label": "Conditions", "tip": "Set a list of conditions for the Parallax to be created; if they aren't met, the Parallax isn't created"},
    "sceneParallax-events": {"label": "Events", "tip": "$Parallax Events\n$Options\nAutorun: Event triggers as soon as the Parallax appears (including after reading save data)\nCustom: triggered using the 'Call Event' command"},
    "sceneParallax-scripts": {"label": "Scripts", "tip": "Add Script files to extend Parallax functions"},

    "[comment]": "********** Inspector - Scene - Tilemap **********",
    "[comment]": "~~~~~~~~",
    "sceneTilemap-general-grid": {"label": "General"},
    "sceneTilemap-name": {"label": "Name", "tip": "Tilemap Name (note: this is a label for user reference only)"},
    "sceneTilemap-layer": {"label": "Layer", "tip": "Foreground layer always overlaps Background layer, Object layer always overlaps Background layer\nIf layers are the same type, sorting goes in order with the highest value displayed first\nIf the order is the same, sorting goes by Object list position", "options": {
      "background": {"name": "Background", "tip": "Background layer is always displayed behind (or 'under') Object layer and/or Foreground layer"},
      "foreground": {"name": "Foreground", "tip": "Foreground layer is always displayed in front of (or 'on top of') Object layer and/or Background layer"},
      "object": {"name": "Object", "tip": "Object layer is rendered in order by position and Prioritys set for tiles"}
    }},
    "sceneTilemap-order": {"label": "Order"},
    "sceneTilemap-light": {"label": "Light", "options": {
      "raw": {"name": "Raw", "tip": "Tilemap is unaffected by lighting"},
      "anchor": {"name": "Anchor Sampling", "tip": "Color is synthesized by sampling light relative to the Tilemap's anchor point"},
      "global": {"name": "Global Sampling", "tip": "Color is synthesized by sampling multi-pixel locations relative to the Tilemap's location"},
      "ambient": {"name": "Ambient Light", "tip": "Color is a composite of the current Scene's existing lighting"}
    }},
    "sceneTilemap-blend": {"label": "Blend", "tip": "Choose a formula to blend the color with the underlying color", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},
    "sceneTilemap-x": {"label": "X", "tip": "Tilemap's initial horizontal coordinates"},
    "sceneTilemap-y": {"label": "Y", "tip": "Tilemap's intial vertical coordinates"},
    "sceneTilemap-width": {"label": "Width", "tip": "Tilemap's horizontal tile count"},
    "sceneTilemap-height": {"label": "Height", "tip": "Tilemap's vertical tile count"},
    "sceneTilemap-anchorX": {"label": "Anchor X", "tip": "Horizontal position of rectangular area connection point between Tilemap and Scene"},
    "sceneTilemap-anchorY": {"label": "Anchor Y", "tip": "Vertical position of rectangular area connection point between Tilemap and Scene"},
    "sceneTilemap-offsetX": {"label": "Offset X", "tip": "Tilemap's horizontal offset distance (in pixels)"},
    "sceneTilemap-offsetY": {"label": "Offset Y", "tip": "Tilemap's vertical offset distance (in pixels)"},
    "sceneTilemap-parallaxFactorX": {"label": "Parallax Factor X", "tip": "The coefficient for the horizontal movement of the tilemap when the scene camera moves"},
    "sceneTilemap-parallaxFactorY": {"label": "Parallax Factor Y", "tip": "The coefficient for the vertical movement of the tilemap when the scene camera moves"},
    "sceneTilemap-opacity": {"label": "Opacity", "tip": "Tilemap's visibility (transparency adjustment)"},
    "sceneTilemap-conditions": {"label": "Conditions", "tip": "Set a list of conditions for the Tilemap to be created; if they aren't met, the Tilemap isn't created"},
    "sceneTilemap-events": {"label": "Events", "tip": "$Tilemap Events\n$Options\nAutorun: Event triggers as soon as the Tilemap appears (including after reading save data)\nCustom: triggered using the 'Call Event' command"},
    "sceneTilemap-scripts": {"label": "Scripts", "tip": "Add Script files to extend Tilemap functions"},

    "[comment]": "********** Inspector - UI - Common **********",
    "[comment]": "~~~~~~~~",
    "uiElement-general-grid": {"label": "General"},
    "uiElement-name": {"label": "Name", "tip": "The remark name of the element"},
    "uiElement-pointerEvents": {"label": "Pointer Events", "tip": "Whether to allow triggering mouse and touch events for this element", "options": {
      "enabled": {"name": "Enabled", "tip": "Allows triggering pointer events for this element and its descendants"},
      "disabled": {"name": "Disabled", "tip": "Disables triggering pointer events for this element and its descendants"},
      "skipped": {"name": "Skipped", "tip": "Disables triggering pointer events for this element but allows triggering pointer events for its descendants"}
    }},
    "uiElement-transform-grid": {"label": "Transform"},
    "uiElement-transform-align-box": {"label": "Align"},
    "uiElement-transform-align-left": {"tip": "$Left\nAlign the left edge of the element with the left edge of the container"},
    "uiElement-transform-align-center": {"tip": "$Center\nAlign the horizontal midpoint of the element with the horizontal midpoint of the container"},
    "uiElement-transform-align-right": {"tip": "$Right\nAlign the right edge of the element with the right edge of the container"},
    "uiElement-transform-align-top": {"tip": "$Top\nAlign the top edge of the element with the top edge of the container"},
    "uiElement-transform-align-middle": {"tip": "$Middle\nAlign the vertical midpoint of the element with the vertical midpoint of the container"},
    "uiElement-transform-align-bottom": {"tip": "$Bottom\nAlign the bottom edge of the element with the bottom edge of the container"},
    "uiElement-transform-anchor-box": {"label": "Anchor"},
    "uiElement-transform-anchorX": {"tip": "$Anchor X\nThe horizontal position of the element relative to the container's anchor point"},
    "uiElement-transform-anchorY": {"tip": "$Anchor Y\nThe vertical position of the element relative to the container's anchor point"},
    "uiElement-transform-x-box": {"label": "X"},
    "uiElement-transform-x": {"tip": "$X\nThe horizontal position of the element within the container (in pixels)"},
    "uiElement-transform-x2": {"tip": "$X2\nThe horizontal position of the element within the container (as a percentage of container width)"},
    "uiElement-transform-y-box": {"label": "Y"},
    "uiElement-transform-y": {"tip": "$Y\nThe vertical position of the element within the container (in pixels)"},
    "uiElement-transform-y2": {"tip": "$Y2\nThe vertical position of the element within the container (as a percentage of container height)"},
    "uiElement-transform-width-box": {"label": "Width"},
    "uiElement-transform-width": {"tip": "$Width\nThe width of the element within the container (in pixels)"},
    "uiElement-transform-width2": {"tip": "$Width2\nThe width of the element within the container (as a percentage of container width)"},
    "uiElement-transform-height-box": {"label": "Height"},
    "uiElement-transform-height": {"tip": "$Height\nThe height of the element within the container (in pixels)"},
    "uiElement-transform-height2": {"tip": "$Height2\nThe height of the element within the container (as a percentage of container height)"},
    "uiElement-transform-rotation-box": {"label": "Rotation"},
    "uiElement-transform-rotation": {"tip": "$Rotation\nThe rotation angle of the element around the anchor point, 0 degrees = right, clockwise rotation"},
    "uiElement-transform-scale-box": {"label": "Scale"},
    "uiElement-transform-scaleX": {"tip": "$Scale X\nThe horizontal scaling factor of the element"},
    "uiElement-transform-scaleY": {"tip": "$Scale Y\nThe vertical scaling factor of the element"},
    "uiElement-transform-skew-box": {"label": "Skew"},
    "uiElement-transform-skewX": {"tip": "$Skew X\nThe horizontal skew factor of the element"},
    "uiElement-transform-skewY": {"tip": "$Skew Y\nThe vertical skew factor of the element"},
    "uiElement-transform-opacity-box": {"label": "Opacity"},
    "uiElement-transform-opacity": {"tip": "$Opacity\nAdjusts the visibility of the element"},
    "uiElement-events": {"label": "Events", "tip": "$Element Events\nVisit\"Event Triggered Light\"to set the Element\n$Options\nCreate: Event triggers when Element is initialized (executed once)\nAutorun: Event triggers as soon as the Element appears (including after reading save data)\nMouse Down LB：Event triggers when left mouse button is pressed\nMouse Down RB：Event triggers when right mouse button is pressed\nMouse Down：Event triggers when ANY mouse button is pressed\nMouse Up LB: Event triggers when left mouse button is released\nMouse Up RB： Event triggers when right mouse button is released\nMouse Up: Event triggers when ANY mouse button is released\nMouse Move: Event triggers when mouse moves within an Element\nMouse Enter: Event triggers when mouse enters an Element\nMouse Leave: Event triggers when mouse leaves an Element\nClick: Event triggers when the mouse is clicked and released\nDouble Click: Event triggers when the mouse is clicked & released twice, triggering on the second release\nWheel: Event triggers when the mouse wheel is moved\nKey Down: Event is triggered when a button Element is selected\nKey Up: Event is triggered when a button Element is deselected\nInput: Event triggers when when something is entered in a text box Element\nFocus: Event is triggered when a text box enters the input state, or through a 'Set Focus' event command\nBlur: Event triggers when a text box exits the input state, or through a 'Set Focus' event command\nEvent triggers just as (before) an Element is destroyed\nGamepad Button Press: Event triggers when a gamepad button is pressed \nGamepad Button Release: Event triggers when a gamepad button is released\nLeft Stick Change: Event triggers when the left stick of the gamepad changes (moves)\nRight Stick Change: Event triggers when the right stick of the gamepad changes (moves)\nCustom: triggered using the 'Call Event' command"},
    "uiElement-scripts": {"label": "Scripts", "tip": "Add Script files to extend Element functions"},

    "[comment]": "********** Inspector - UI - Image **********",
    "[comment]": "~~~~~~~~",
    "uiImage-properties-grid": {"label": "Image Properties"},
    "uiImage-image": {"label": "Image", "tip": "Selected Image file"},
    "uiImage-display": {"label": "Display", "tip": "Display option for this image", "options": {
      "stretch": {"name": "Stretch", "tip": "Stretch the image to fill the Element"},
      "tile": {"name": "Tile", "tip": "Tile the image to fill the Element"},
      "clip": {"name": "Clip", "tip": "Crop the image and stretch it to fill the Element"},
      "slice": {"name": "Slice", "tip": "Cut the image into 9 tiles to fill the Element"}
    }},
    "uiImage-flip": {"label": "Flip", "tip": "Flip options for this image", "options": {
      "none": {"name": "None", "tip": "Display the image normally"},
      "horizontal": {"name": "Horizontal", "tip": "Flip image 180 degress from left to right"},
      "vertical": {"name": "Vertical", "tip": "Flip image 180 degress from top to bottom"},
      "both": {"name": "Both", "tip": "Flip image 180 degress from top left to bottom right"}
    }},
    "uiImage-blend": {"label": "Blend", "tip": "Choose a formula to blend the color with the underlying color", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"},
      "mask": {"name": "Mask", "tip": "Descendant elements are only visible within the image, and the rendering color is filtered based on the RGB values of the image pixels"}
    }},
    "uiImage-shift-box": {"label": "Shift"},
    "uiImage-shiftX": {"tip": "$Offset X\nHorizontal offset of the image texture (unit: pixels)"},
    "uiImage-shiftY": {"tip": "$Offset Y\nVertical offset of the image texture (unit: pixels)"},
    "uiImage-clip": {"label": "Clip", "tip": "The clipping area of the image"},
    "uiImage-border": {"label": "Border", "tip": "The image is divided into 9 parts based on the border size (4 corners, 4 edges, and the center rectangle). These parts tile to fill the element. The border size is the side length of the square corners."},
    "uiImage-tint-0-box": {"label": "Tint - Red", "tip": "Input color (Red) + Hue (Red) = Output color (Red)"},
    "uiImage-tint-1-box": {"label": "Tint - Green", "tip": "Input color (Green) + Hue (Green) = Output color (Green)"},
    "uiImage-tint-2-box": {"label": "Tint - Blue", "tip": "Input color (Blue) + Hue (Blue) = Output color (Blue)"},
    "uiImage-tint-3-box": {"label": "Tint - Grayscale", "tip": "Reduces color saturation (to black & white if high enough)"},

    "[comment]": "********** Inspector - UI - Text **********",
    "uiText-properties-grid": {"label": "Text Properties"},
    "uiText-direction": {"label": "Direction", "tip": "Choose the text layout direction.", "options": {
      "horizontal-tb": {"name": "Horizontal - TB", "tip": "Content flows horizontally from left to right, wrapping to the next line."},
      "vertical-lr": {"name": "Vertical - LR", "tip": "Content flows vertically from top to bottom, wrapping to the right."},
      "vertical-rl": {"name": "Vertical - RL", "tip": "Content flows vertically from top to bottom, wrapping to the left."}
    }},
    "uiText-align-box": {"label": "Align"},
    "uiText-align-left": {"tip": "$Left\nAlign the left edge of the text with the left edge of the element."},
    "uiText-align-center": {"tip": "$Center\nAlign the horizontal midpoint of the text with the horizontal midpoint of the element."},
    "uiText-align-right": {"tip": "$Right\nAlign the right edge of the text with the right edge of the element."},
    "uiText-align-top": {"tip": "$Top\nAlign the top edge of the text with the top edge of the element."},
    "uiText-align-middle": {"tip": "$Middle\nAlign the vertical midpoint of the text with the vertical midpoint of the element."},
    "uiText-align-bottom": {"tip": "$Bottom\nAlign the bottom edge of the text with the bottom edge of the element."},
    "uiText-content": {"label": "Content", "tip": "Text content of the element."},
    "uiText-size-box": {"label": "Size", "tip": "Initial text size (10 ~ 400)."},
    "uiText-lineSpacing-box": {"label": "Line Spacing", "tip": "The spacing between text lines (in pixels)."},
    "uiText-letterSpacing-box": {"label": "Letter Spacing", "tip": "The spacing between each character in the same line (in pixels)."},
    "uiText-color": {"label": "Color", "tip": "The color of the text"},
    "uiText-font": {"label": "Font", "placeholder": "Default", "tip": "Enter the font name. If there are multiple fonts, separate them with commas, listed from left to right in order of priority."},
    "uiText-typeface": {"label": "Typeface", "tip": "Choose the text style.", "options": {
      "regular": {"name": "Regular", "tip": "Default text style."},
      "bold": {"name": "Bold", "tip": "Bold to emphasize."},
      "italic": {"name": "Italic", "tip": "Slanted to simulate cursive writing."},
      "bold-italic": {"name": "Bold Italic", "tip": "Both bold and italic enabled."}
    }},
    "uiText-effect-type": {"label": "Effect", "tip": "Choose a text effect.", "options": {
      "none": {"name": "None", "tip": "No effect."},
      "shadow": {"name": "Shadow", "tip": "Render text as a shadow at the specified offset."},
      "stroke": {"name": "Stroke", "tip": "Render an outline with a specified width, with half the width covered by the text."},
      "outline": {"name": "Outline", "tip": "Render the text four times as an outline, displaced by 1 pixel up, down, left, and right."}
    }},
    "uiText-effect-shadowOffsetX": {"label": "Shadow X", "tip": "The horizontal offset distance of the text shadow (in pixels)."},
    "uiText-effect-shadowOffsetY": {"label": "Shadow Y", "tip": "The vertical offset distance of the text shadow (in pixels)."},
    "uiText-effect-strokeWidth": {"label": "Stroke Width", "tip": "The width of the text outline."},
    "uiText-effect-color": {"label": "Effect Color", "tip": "The color of the background text."},
    "uiText-overflow": {"label": "Overflow", "tip": "How to handle text that overflows the element's borders.", "options": {
      "visible": {"name": "Visible", "tip": "Allow text to appear outside the element."},
      "wrap": {"name": "Wrap", "tip": "Wrap the text to the next line when it reaches the edge of the element."},
      "truncate": {"name": "Truncate", "tip": "Stop rendering text when it overflows the element after wrapping."},
      "wrap-truncate": {"name": "Wrap Truncate", "tip": "Both wrap and truncate features are enabled."}
    }},
    "uiText-blend": {"label": "Blend", "tip": "Choose a blending mode to combine the color with the underlying color.", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},

    "[comment]": "********** Inspector - UI - TextBox **********",
    "uiTextBox-properties-grid": {"label": "TextBox Properties"},
    "uiTextBox-type": {"label": "Type", "tip": "The type of content in the textbox.", "options": {
      "text": {"name": "Text", "tip": "Content can be read using the 'Set String' command."},
      "number": {"name": "Number", "tip": "Content can be read using the 'Set Number' command."}
    }},
    "uiTextBox-align": {"label": "Align", "tip": "The alignment of the text content.", "options": {
      "left": {"name": "Left", "tip": "The left edge of the text aligns with the left edge of the input area."},
      "center": {"name": "Center", "tip": "The horizontal center of the text aligns with the horizontal center of the input area."},
      "right": {"name": "Right", "tip": "The right edge of the text aligns with the right edge of the input area."}
    }},
    "uiTextBox-text": {"label": "Text", "tip": "The initial string content of the textbox."},
    "uiTextBox-maxLength": {"label": "Max Length", "tip": "The maximum number of characters allowed."},
    "uiTextBox-number": {"label": "Number", "tip": "The initial numeric content of the textbox."},
    "uiTextBox-min": {"label": "Min", "tip": "The minimum allowed value."},
    "uiTextBox-max": {"label": "Max", "tip": "The maximum allowed value."},
    "uiTextBox-decimals": {"label": "Decimal Places", "tip": "The maximum number of decimal places to retain."},
    "uiTextBox-padding": {"label": "Padding", "tip": "The distance between the input content area and the left/right edges."},
    "uiTextBox-size": {"label": "Size", "tip": "The size of the text (10 ~ 400)."},
    "uiTextBox-font": {"label": "Font", "placeholder": "Default", "tip": "Enter the font name. If multiple fonts are specified, separate them with commas in the order of preference."},
    "uiTextBox-color": {"label": "Color", "tip": "The color of the text."},
    "uiTextBox-selectionColor": {"label": "Selection Color", "tip": "The color of the selected text."},
    "uiTextBox-selectionBgColor": {"label": "Selection Bg Color", "tip": "The background color of the selected text."},

    "[comment]": "********** Inspector - UI - DialogBox **********",
    "uiDialogBox-properties-grid": {"label": "DialogBox Properties"},
    "uiDialogBox-content": {"label": "Content", "tip": "The text content of the element."},
    "uiDialogBox-interval": {"label": "Print Interval", "tip": "If set to 0, all text will be printed at once. Otherwise, the text will be printed continuously at intervals until finished or the current page is filled."},
    "uiDialogBox-size-box": {"label": "Size", "tip": "The size of the text (10 ~ 400)."},
    "uiDialogBox-lineSpacing-box": {"label": "Line Spacing", "tip": "The line spacing for the text."},
    "uiDialogBox-letterSpacing-box": {"label": "Letter Spacing", "tip": "The spacing between letters on the same line."},
    "uiDialogBox-color": {"label": "Color", "tip": "The color of the text."},
    "uiDialogBox-font": {"label": "Font", "placeholder": "Default", "tip": "Enter the font name. If there are multiple fonts, separate them with commas in order of preference."},
    "uiDialogBox-typeface": {"label": "Typeface", "tip": "Select the style of the text.", "options": {
      "regular": {"name": "Regular", "tip": "The default text style."},
      "bold": {"name": "Bold", "tip": "Bold for emphasis."},
      "italic": {"name": "Italic", "tip": "Italic to simulate cursive."},
      "bold-italic": {"name": "Bold Italic", "tip": "Both bold and italic are applied."}
    }},
    "uiDialogBox-effect-type": {"label": "Effect", "tip": "Choose a text effect.", "options": {
      "none": {"name": "None", "tip": "No effect."},
      "shadow": {"name": "Shadow", "tip": "Render the text as a shadow at a specified offset position."},
      "stroke": {"name": "Stroke", "tip": "Render the text outline with a specified width, with half the width hidden by the text."},
      "outline": {"name": "Outline", "tip": "Render the text outline four times at a 1-pixel offset in all directions."}
    }},
    "uiDialogBox-effect-shadowOffsetX": {"label": "Shadow X", "tip": "The horizontal offset distance for the text shadow."},
    "uiDialogBox-effect-shadowOffsetY": {"label": "Shadow Y", "tip": "The vertical offset distance for the text shadow."},
    "uiDialogBox-effect-strokeWidth": {"label": "Stroke Width", "tip": "The width of the text outline stroke."},
    "uiDialogBox-effect-color": {"label": "Effect Color", "tip": "The color of the background text."},
    "uiDialogBox-blend": {"label": "Blend", "tip": "Choose a blending mode to combine the color with the underlying color.", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},

    "[comment]": "********** Inspector - UI - ProgressBar **********",
    "uiProgressBar-properties-grid": {"label": "ProgressBar Properties"},
    "uiProgressBar-image": {"label": "Image", "tip": "Image file for the element"},
    "uiProgressBar-display": {"label": "Display", "tip": "How to display the image", "options": {
      "stretch": {"name": "Stretch", "tip": "Stretch the image to fill the element"},
      "clip": {"name": "Clip", "tip": "Crop and stretch the image to fill the element"}
    }},
    "uiProgressBar-clip": {"label": "Clip", "tip": "The cropping area of the image"},
    "uiProgressBar-type": {"label": "Type", "tip": "The type of progress bar", "options": {
      "horizontal": {"name": "Horizontal", "tip": "Progress displayed from left to right"},
      "vertical": {"name": "Vertical", "tip": "Progress displayed from bottom to top"},
      "round": {"name": "Circular", "tip": "Progress displayed in clockwise or counterclockwise direction"}
    }},
    "uiProgressBar-centerX": {"label": "Center X", "tip": "Center X of the circular progress bar"},
    "uiProgressBar-centerY": {"label": "Center Y", "tip": "Center Y of the circular progress bar"},
    "uiProgressBar-startAngle": {"label": "Start Angle", "tip": "Starting angle of the circular progress bar, 0° = right, clockwise rotation"},
    "uiProgressBar-centralAngle": {"label": "Central Angle", "tip": "Angle between the end and start angle of the circular progress bar, can be negative"},
    "uiProgressBar-step": {"label": "Step", "tip": "For horizontal or vertical progress bars: texture sampling width is an integer multiple of the step size\nFor circular progress bars: texture sampling angle is an integer multiple of the step size\nStep = 0: means no trimming on the progress bar"},
    "uiProgressBar-progress": {"label": "Progress", "tip": "Initial progress of the progress bar (0 ~ 1)"},
    "uiProgressBar-blend": {"label": "Blend", "tip": "Select a formula to blend the color with the underlying color", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},
    "uiProgressBar-colorMode": {"label": "Color Mode", "tip": "How to obtain the progress bar's color", "options": {
      "texture": {"name": "Texture Sampling", "tip": "Use pixel color from the progress bar image"},
      "fixed": {"name": "Fixed", "tip": "Replace pixel colors in the progress bar image with a specified color"}
    }},
    "uiProgressBar-color-0-box": {"label": "Red", "tip": "Red component of the progress bar color"},
    "uiProgressBar-color-1-box": {"label": "Green", "tip": "Green component of the progress bar color"},
    "uiProgressBar-color-2-box": {"label": "Blue", "tip": "Blue component of the progress bar color"},
    "uiProgressBar-color-3-box": {"label": "Alpha", "tip": "Opacity of the progress bar color"},

    "[comment]": "********** Inspector - UI - Button **********",
    "uiButton-image-properties-grid": {"label": "Image Properties"},
    "uiButton-display": {"label": "Display", "tip": "How to display this image", "options": {
      "stretch": {"name": "Stretch", "tip": "Stretch the image to fill the element"},
      "tile": {"name": "Tile", "tip": "Tile the image to fill the element"},
      "clip": {"name": "Clip", "tip": "Crop the image and stretch to fill the element"},
      "slice": {"name": "Slice", "tip": "Slice the image into 9 parts and tile to fill the element"}
    }},
    "uiButton-normalImage": {"label": "Normal Image", "tip": "The image displayed in the button's normal state"},
    "uiButton-normalClip": {"label": "Normal Clip", "tip": "The cropping area of the normal image"},
    "uiButton-hoverImage": {"label": "Hover Image", "tip": "The image displayed when the button is hovered over"},
    "uiButton-hoverClip": {"label": "Hover Clip", "tip": "The cropping area of the hovered image"},
    "uiButton-activeImage": {"label": "Active Image", "tip": "The image displayed when the button is pressed"},
    "uiButton-activeClip": {"label": "Active Clip", "tip": "The cropping area of the pressed image"},
    "uiButton-flip": {"label": "Flip", "tip": "How to flip the button image", "options": {
      "none": {"name": "None", "tip": "Display the image normally"},
      "horizontal": {"name": "Horizontal", "tip": "Flip the image 180 degrees horizontally"},
      "vertical": {"name": "Vertical", "tip": "Flip the image 180 degrees vertically"},
      "both": {"name": "Both", "tip": "Flip the image horizontally and vertically"}
    }},
    "uiButton-border": {"label": "Border", "tip": "The image is sliced into 9 parts based on the border size (4 corners, 4 edges, and 1 center rectangle), tiled to fill the element. The border size is the side length of the square corners"},
    "uiButton-imagePadding-box": {"label": "Padding", "tip": "The space kept between the image and the element's border"},
    "uiButton-imageOpacity-box": {"label": "Opacity", "tip": "Used to adjust the image's visibility"},
    "uiButton-imageEffect": {"label": "Effect", "tip": "Select the effect for the image", "options": {
      "none": {"name": "None", "tip": "Display the original image"},
      "tint-1": {"name": "Tint", "tip": "Set the tint for the normal image, with the hover and active images inheriting the normal image's tint"},
      "tint-2": {"name": "Tint (Normal, Hover)", "tip": "Set separate tints for the normal and hover images, with the active image inheriting the hover image's tint"},
      "tint-3": {"name": "Tint (Normal, Hover, Active)", "tip": "Set separate tints for the normal, hover, and active images"}
    }},
    "uiButton-normalTint-box": {"label": "Normal Tint", "tip": "The tint for the button in the normal state"},
    "uiButton-hoverTint-box": {"label": "Hover Tint", "tip": "The tint for the button in the hover state"},
    "uiButton-activeTint-box": {"label": "Active Tint", "tip": "The tint for the button in the active state"},
    "uiButton-text-properties-grid": {"label": "Text Properties"},
    "uiButton-direction": {"label": "Direction", "tip": "Choose the text layout direction", "options": {
      "horizontal-tb": {"name": "Horizontal", "tip": "Content flows horizontally from left to right"},
      "vertical-lr": {"name": "Vertical", "tip": "Content flows vertically from top to bottom"}
    }},
    "uiButton-align-box": {"label": "Align"},
    "uiButton-align-left": {"tip": "$Left\nAlign the left edge of the text with the left edge of the element"},
    "uiButton-align-center": {"tip": "$Center\nAlign the horizontal midpoint of the text with the horizontal midpoint of the element"},
    "uiButton-align-right": {"tip": "$Right\nAlign the right edge of the text with the right edge of the element"},
    "uiButton-align-top": {"tip": "$Top\nAlign the top edge of the text with the top edge of the element"},
    "uiButton-align-middle": {"tip": "$Middle\nAlign the vertical midpoint of the text with the vertical midpoint of the element"},
    "uiButton-align-bottom": {"tip": "$Bottom\nAlign the bottom edge of the text with the bottom edge of the element"},
    "uiButton-content": {"label": "Content", "tip": "Text content of the element"},
    "uiButton-size-box": {"label": "Size", "tip": "Text size (10 ~ 400)"},
    "uiButton-letterSpacing-box": {"label": "Letter Spacing", "tip": "Spacing between each letter on the same line"},
    "uiButton-textPadding-box": {"label": "Padding", "tip": "The space kept between the text and the element's border"},
    "uiButton-font": {"label": "Font", "placeholder": "Default", "tip": "Enter the font name. If there are multiple fonts, separate them with commas in left-to-right priority order"},
    "uiButton-typeface": {"label": "Typeface", "tip": "Select the text style", "options": {
      "regular": {"name": "Regular", "tip": "Default text style"},
      "bold": {"name": "Bold", "tip": "Bold for emphasis"},
      "italic": {"name": "Italic", "tip": "Italicized to simulate cursive"},
      "bold-italic": {"name": "Bold Italic", "tip": "Enable both bold and italic"}
    }},
    "uiButton-textEffect-type": {"label": "Effect", "tip": "Select a text effect", "options": {
      "none": {"name": "None", "tip": "No effect."},
      "shadow": {"name": "Shadow", "tip": "Render text as shadow at the specified offset position"},
      "stroke": {"name": "Stroke", "tip": "Render the specified width of the text outline, with half the width covered by the text"},
      "outline": {"name": "Outline", "tip": "Render the text as an outline by offsetting 1 pixel in each direction (top, bottom, left, right)"}
    }},
    "uiButton-textEffect-shadowOffsetX": {"label": "Shadow X", "tip": "Horizontal offset of the text shadow"},
    "uiButton-textEffect-shadowOffsetY": {"label": "Shadow Y", "tip": "Vertical offset of the text shadow"},
    "uiButton-textEffect-strokeWidth": {"label": "Stroke Width", "tip": "Width of the text outline stroke"},
    "uiButton-textEffect-color": {"label": "Effect Color", "tip": "Color of the background text"},
    "uiButton-normalColor": {"label": "Normal Color", "tip": "Text color in the button's normal state"},
    "uiButton-hoverColor": {"label": "Hover Color", "tip": "Text color in the button's hover state"},
    "uiButton-activeColor": {"label": "Active Color", "tip": "Text color in the button's active state"},
    "uiButton-sound-effects-grid": {"label": "Sound Effects"},
    "uiButton-hoverSound": {"label": "Hover SE", "tip": "Sound effect when the button is hovered (must be manually triggered by the user)"},
    "uiButton-clickSound": {"label": "Click SE", "tip": "Sound effect when the button is clicked"},

    "[comment]": "********** Inspector - UI - Animation **********",
    "uiAnimation-properties-grid": {"label": "Animation Properties"},
    "uiAnimation-animation": {"label": "Animation", "tip": "Select an animation file"},
    "uiAnimation-motion": {"label": "Motion", "tip": "Select a motion from the animation"},
    "uiAnimation-autoplay": {"label": "Autoplay", "tip": "Whether the animation plays automatically"},
    "uiAnimation-rotatable": {"label": "Rotatable", "tip": "Whether the animation rotates based on angle"},
    "uiAnimation-angle": {"label": "Angle", "tip": "Initial angle of the animation"},
    "uiAnimation-frame": {"label": "Frame", "tip": "Initial frame of the animation"},
    "uiAnimation-offset-box": {"label": "Offset"},
    "uiAnimation-offsetX": {"tip": "$Offset X\nHorizontal offset distance of the animation"},
    "uiAnimation-offsetY": {"tip": "$Offset Y\nVertical offset distance of the animation"},

    "[comment]": "********** Inspector - UI - Video **********",
    "uiVideo-properties-grid": {"label": "Video Properties"},
    "uiVideo-video": {"label": "Video", "tip": "Select a video file"},
    "uiVideo-playbackRate": {"label": "Playback Rate", "tip": "Playback speed ratio of the video"},
    "uiVideo-loop": {"label": "Loop", "tip": "Whether the video loops", "options": {
      "false": {"name": "Once", "tip": "Stop playing when it ends"},
      "true": {"name": "Loop", "tip": "Replay when it ends"}
    }},
    "uiVideo-flip": {"label": "Flip", "tip": "How to flip the video", "options": {
      "none": {"name": "None", "tip": "Display the image normally"},
      "horizontal": {"name": "Horizontal", "tip": "Flip 180 degrees horizontally from left to right"},
      "vertical": {"name": "Vertical", "tip": "Flip 180 degrees vertically from top to bottom"},
      "both": {"name": "Both", "tip": "Flip horizontally first, then vertically"}
    }},
    "uiVideo-blend": {"label": "Blend", "tip": "Choose a formula to blend the color with the underlying color", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},

    "[comment]": "********** Inspector - UI - Window **********",
    "uiWindow-properties-grid": {"label": "Window Properties"},
    "uiWindow-layout": {"label": "Layout", "tip": "Layout style for window's child elements", "options": {
      "normal": {"name": "Normal", "tip": "Window acts as a normal container"},
      "horizontal-grid": {"name": "Horizontal Grid", "tip": "Grid arranges from left to right, wraps down, aligns child elements into the grid"},
      "vertical-grid": {"name": "Vertical Grid", "tip": "Grid arranges from top to bottom, wraps right, aligns child elements into the grid"}
    }},
    "uiWindow-scrollX": {"label": "Scroll X", "tip": "Initial horizontal scroll position of the window, active when the content width exceeds the window width"},
    "uiWindow-scrollY": {"label": "Scroll Y", "tip": "Initial vertical scroll position of the window, active when the content height exceeds the window height"},
    "uiWindow-gridWidth": {"label": "Grid Width", "tip": "Width of each grid cell"},
    "uiWindow-gridHeight": {"label": "Grid Height", "tip": "Height of each grid cell"},
    "uiWindow-gridGapX": {"label": "Grid Gap X", "tip": "Horizontal spacing between grid cells"},
    "uiWindow-gridGapY": {"label": "Grid Gap Y", "tip": "Vertical spacing between grid cells"},
    "uiWindow-paddingX": {"label": "Padding X", "tip": "Minimum distance between window's left and right edges and the nearest grid"},
    "uiWindow-paddingY": {"label": "Padding Y", "tip": "Minimum distance between window's top and bottom edges and the nearest grid"},
    "uiWindow-overflow": {"label": "Overflow", "tip": "Handling of content that exceeds the window edges", "options": {
      "visible": {"name": "Visible", "tip": "Allow content to appear outside the window"},
      "hidden": {"name": "Hidden", "tip": "Hide content that exceeds the window edges"}
    }},

    "[comment]": "********** Inspector - UI - Reference **********",
    "uiReference-properties-grid": {"label": "Reference Properties"},
    "uiReference-prefabId": {"label": "Prefab", "tip": "Replace itself with this element"},
    "uiReference-synchronous": {"label": "Synchronous", "tip": "Automatically updates to match the referenced element's size in edit mode, but allows a different position setting"},

    "[comment]": "********** Inspector - Animation - Motion **********",
    "animMotion-general-grid": {"label": "Motion"},
    "animMotion-mode": {"label": "Mode", "tip": "Determines how the animation switches motion directions", "options": {
      "1-dir": {"name": "1 Directional", "tip": "Right"},
      "2-dir": {"name": "2 Directional", "tip": "Left, Right"},
      "4-dir": {"name": "4 Directional", "tip": "Down, Left, Right, Up"},
      "8-dir": {"name": "8 Directional", "tip": "Down, Left, Right, Up, Down-Left, Down-Right, Up-Left, Up-Right"},
      "1-dir-mirror": {"name": "1 Directional - Mirror", "tip": "Right, Mirror (Left)"},
      "2-dir-mirror": {"name": "2 Directional - Mirror", "tip": "Down-Right, Up-Right, Mirror (Down-Left, Up-Left)"},
      "3-dir-mirror": {"name": "3 Directional - Mirror", "tip": "Down, Right, Up, Mirror (Left)"},
      "5-dir-mirror": {"name": "5 Directional - Mirror", "tip": "Down, Right, Up, Down-Right, Up-Right, Mirror (Left, Down-Left, Up-Left)"}
    }},
    "animMotion-skip": {"label": "Skip Last Frame", "tip": "Skip the last frame when the animation reaches the end (used for looping transition animations)"},
    "animMotion-loop": {"label": "Loop", "tip": "Automatically returns to the starting frame and continues playing after the animation ends"},
    "animMotion-loopStart": {"label": "Loop Start", "tip": "The starting position of the animation loop"},

    "[comment]": "********** Inspector - Animation - Joint Frame **********",
    "animJointFrame-properties-grid": {"label": "Frame"},
    "animJointFrame-position-box": {"label": "Position"},
    "animJointFrame-x": {"tip": "$X\nHorizontal position"},
    "animJointFrame-y": {"tip": "$Y\nVertical position"},
    "animJointFrame-rotation-box": {"label": "Rotation"},
    "animJointFrame-rotation": {"tip": "$Rotation\nRotation angle, 0 degrees = Right, clockwise rotation"},
    "animJointFrame-scale-box": {"label": "Scale"},
    "animJointFrame-scaleX": {"tip": "$Scale X\nHorizontal scale factor"},
    "animJointFrame-scaleY": {"tip": "$Scale Y\nVertical scale factor"},
    "animJointFrame-opacity-box": {"label": "Opacity"},
    "animJointFrame-opacity": {"tip": "$Opacity\nAdjusts the visibility of the animation frame"},

    "[comment]": "********** Inspector - Animation - Sprite Layer **********",
    "animSpriteLayer-properties-grid": {"label": "Sprite Layer"},
    "animSpriteLayer-sprite": {"label": "Sprite", "tip": "Select a preset sprite image (in the Animation Settings panel Alt+S)"},
    "animSpriteLayer-blend": {"label": "Blend", "tip": "Select a formula to blend the color with the underlying color", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},
    "animSpriteLayer-light": {"label": "Light", "tip": "Affects the rendering effect of the image", "options": {
      "raw": {"name": "Raw", "tip": "Not affected by lighting"},
      "anchor": {"name": "Anchor Sampling", "tip": "Samples light from the image’s anchor point to blend the color"},
      "global": {"name": "Global Sampling", "tip": "Samples light from multiple pixel locations of the image to blend the color"}
    }},

    "[comment]": "********** Inspector - Animation - Sprite Frame **********",
    "animSpriteFrame-properties-grid": {"label": "Frame"},
    "animSpriteFrame-anchor-box": {"label": "Anchor"},
    "animSpriteFrame-anchorX": {"tip": "$Anchor X\nThe horizontal position of the sprite relative to the animation connection point"},
    "animSpriteFrame-anchorY": {"tip": "$Anchor Y\nThe vertical position of the sprite relative to the animation connection point"},
    "animSpriteFrame-pivot-box": {"label": "Pivot"},
    "animSpriteFrame-pivotX": {"tip": "$Pivot X\nThe horizontal offset of the sprite relative to the animation connection point"},
    "animSpriteFrame-pivotY": {"tip": "$Pivot Y\nThe vertical offset of the sprite relative to the animation connection point"},
    "animSpriteFrame-position-box": {"label": "Position"},
    "animSpriteFrame-x": {"tip": "$X\nHorizontal position"},
    "animSpriteFrame-y": {"tip": "$Y\nVertical position"},
    "animSpriteFrame-rotation-box": {"label": "Rotation"},
    "animSpriteFrame-rotation": {"tip": "$Rotation\nRotation angle, 0° = right, clockwise rotation"},
    "animSpriteFrame-scale-box": {"label": "Scale"},
    "animSpriteFrame-scaleX": {"tip": "$Scale X\nHorizontal scaling factor"},
    "animSpriteFrame-scaleY": {"tip": "$Scale Y\nVertical scaling factor"},
    "animSpriteFrame-opacity-box": {"label": "Opacity"},
    "animSpriteFrame-opacity": {"tip": "$Opacity\nUsed to adjust the visibility of the animation frame"},
    "animSpriteFrame-tint-0-box": {"label": "Tint - Red", "tip": "Input color (Red) + Hue (Red) = Output color (Red)"},
    "animSpriteFrame-tint-1-box": {"label": "Tint - Green", "tip": "Input color (Green) + Hue (Green) = Output color (Green)"},
    "animSpriteFrame-tint-2-box": {"label": "Tint - Blue", "tip": "Input color (Blue) + Hue (Blue) = Output color (Blue)"},
    "animSpriteFrame-tint-3-box": {"label": "Tint - Grayscale", "tip": "Grayscale and saturation are opposite; the higher the grayscale, the lower the saturation"},
    "sprite-label": {"content": "Sprite"},

    "[comment]": "********** Inspector - Animation - Particle Layer **********",
    "animParticleLayer-properties-grid": {"label": "Particle Layer"},
    "animParticleLayer-particleId": {"label": "Particle", "tip": "Select a particle file"},
    "animParticleLayer-position": {"label": "Position", "tip": "Is the reference for particle movement based on the scene or the animation", "options": {
      "absolute": {"name": "Absolute", "tip": "The emitted particles' position is not affected by the animation"},
      "relative": {"name": "Relative", "tip": "The emitted particles follow the animation's movement"}
    }},
    "animParticleLayer-angle": {"label": "Angle", "tip": "Should the particle's emission and movement angle be adjusted", "options": {
      "default": {"name": "Default", "tip": "The particle's emission and movement angles follow the preset behavior"},
      "inherit": {"name": "Inherit", "tip": "The particle's emission and movement angles are affected by the animation and the rotation angle of the parent layer"}
    }},

    "[comment]": "********** Inspector - Animation - Particle Frame **********",
    "animParticleFrame-properties-grid": {"label": "Frame"},
    "animParticleFrame-position-box": {"label": "Position"},
    "animParticleFrame-x": {"tip": "$X\nHorizontal position"},
    "animParticleFrame-y": {"tip": "$Y\nVertical position"},
    "animParticleFrame-rotation-box": {"label": "Rotation"},
    "animParticleFrame-rotation": {"tip": "$Rotation\nRotation angle, 0 degrees = right, clockwise rotation"},
    "animParticleFrame-scale-box": {"label": "Scale"},
    "animParticleFrame-scaleX": {"tip": "$Scale X\nHorizontal scaling factor of the emission area"},
    "animParticleFrame-scaleY": {"tip": "$Scale Y\nVertical scaling factor of the emission area"},
    "animParticleFrame-opacity-box": {"label": "Opacity"},
    "animParticleFrame-opacity": {"tip": "$Opacity\nUsed to adjust the visibility of the animation frame"},
    "animParticleFrame-scale": {"label": "Particle Scale", "tip": "Scaling factor of the particle elements"},
    "animParticleFrame-speed": {"label": "Speed", "tip": "Overall playback speed of the particles"},

    "[comment]": "********** Inspector - Animation - Sound Layer **********",
    "animSoundLayer-properties-grid": {"label": "Sound Layer"},
    "animSoundLayer-playbackRate": {"label": "Playback Rate", "tip": "Whether the sound effect playback speed is related to the animation", "options": {
      "default": {"name": "Default", "tip": "Sound effect playback speed 100%"},
      "inherit": {"name": "Inherit", "tip": "Set to the animation playback speed during sound effect playback"}
    }},

    "[comment]": "********** Inspector - Animation - Sound Frame **********",
    "animSoundFrame-properties-grid": {"label": "Frame"},
    "animSoundFrame-sound": {"label": "Sound", "tip": "Select an audio file"},
    "animSoundFrame-volume": {"label": "Volume", "tip": "Adjust the volume of this sound effect"},

    "[comment]": "********** Inspector - Particle - Layer **********",
    "particleLayer-general-grid": {"label": "General"},
    "particleLayer-name": {"label": "Name", "tip": "The label name of the layer"},
    "particleLayer-area-type": {"label": "Emission Area", "tip": "Where the particles are emitted", "options": {
      "point": {"name": "Point", "tip": "Emit particles from a fixed point"},
      "rectangle": {"name": "Rectangle", "tip": "Emit particles from random positions within a rectangle"},
      "circle": {"name": "Circle", "tip": "Emit particles from random positions within a circle"},
      "edge": {"name": "Screen Edge", "tip": "Emit particles from random positions on the screen edge\nEmission position is related to the initial movement angle"}
    }},
    "particleLayer-area-x": {"label": "X", "tip": "Horizontal position of the emission area center"},
    "particleLayer-area-y": {"label": "Y", "tip": "Vertical position of the emission area center"},
    "particleLayer-area-width": {"label": "Width", "tip": "Width of the emission area"},
    "particleLayer-area-height": {"label": "Height", "tip": "Height of the emission area"},
    "particleLayer-area-radius": {"label": "Radius", "tip": "Radius of the emission area"},
    "particleLayer-count": {"label": "Emission Count", "tip": "Total number of particles to emit. Set to 0 to have no limit on the number"},
    "particleLayer-delay": {"label": "Initial Delay", "tip": "Time before the first particle is emitted"},
    "particleLayer-interval": {"label": "Interval", "tip": "Time interval between emitting each particle"},
    "particleLayer-lifetime": {"label": "Lifetime", "tip": "The lifetime of a particle from creation to destruction"},
    "particleLayer-lifetimeDev": {"label": "Lifetime Dev", "tip": "Maximum deviation range for the lifetime\nActual lifetime is a random value\nMin = Lifetime - Deviation\nMax = Lifetime + Deviation"},
    "particleLayer-fadeout": {"label": "Fadeout", "tip": "Time for the particle to transition to complete transparency before destruction"},
    "particleLayer-anchor-grid": {"label": "Anchor"},
    "particleLayer-anchor-x-box": {"label": "Anchor X"},
    "particleLayer-anchor-x-0": {"tip": "$Anchor X\nHorizontal offset distance of the anchor\n0: Anchor is at the midpoint of the particle's horizontal direction\n-1: Shifted left by one particle width\n1: Shifted right by one particle width"},
    "particleLayer-anchor-x-1": {"tip": "$Deviation\nGenerates a random value for the parameter\nMin = Standard value - Deviation\nMax = Standard value + Deviation", "save": "deviation"},
    "particleLayer-anchor-y-box": {"label": "Anchor Y"},
    "particleLayer-anchor-y-0": {"tip": "$Anchor Y\nVertical offset distance of the anchor\n0: Anchor is at the midpoint of the particle's vertical direction\n-1: Shifted up by one particle height\n1: Shifted down by one particle height"},
    "particleLayer-anchor-y-1": {"tip": "#deviation"},
    "particleLayer-anchor-speedX-box": {"label": "Anchor Speed X"},
    "particleLayer-anchor-speedX-0": {"tip": "$Anchor Speed X\nThe rate of change of 'Anchor X' per second"},
    "particleLayer-anchor-speedX-1": {"tip": "#deviation"},
    "particleLayer-anchor-speedY-box": {"label": "Anchor Speed Y"},
    "particleLayer-anchor-speedY-0": {"tip": "$Anchor Speed Y\nThe rate of change of 'Anchor Y' per second"},
    "particleLayer-anchor-speedY-1": {"tip": "#deviation"},
    "particleLayer-movement-grid": {"label": "Movement"},
    "particleLayer-movement-angle-box": {"label": "Movement Angle"},
    "particleLayer-movement-angle-0": {"tip": "$Movement Angle\nThe angle of the particle's initial velocity"},
    "particleLayer-movement-angle-1": {"tip": "#deviation"},
    "particleLayer-movement-speed-box": {"label": "Movement Speed"},
    "particleLayer-movement-speed-0": {"tip": "$Movement Speed\nThe magnitude of the particle's initial velocity"},
    "particleLayer-movement-speed-1": {"tip": "#deviation"},
    "particleLayer-movement-accelAngle-box": {"label": "Accel Angle"},
    "particleLayer-movement-accelAngle-0": {"tip": "$Acceleration Angle\nThe rate of change of 'Movement Angle' per second"},
    "particleLayer-movement-accelAngle-1": {"tip": "#deviation"},
    "particleLayer-movement-accel-box": {"label": "Accel"},
    "particleLayer-movement-accel-0": {"tip": "$Acceleration\nThe rate of change of 'Movement Speed' per second"},
    "particleLayer-movement-accel-1": {"tip": "#deviation"},
    "particleLayer-rotation-grid": {"label": "Rotation"},
    "particleLayer-rotation-angle-box": {"label": "Rotation Angle"},
    "particleLayer-rotation-angle-0": {"tip": "$Rotation Angle\nThe particle's initial angle"},
    "particleLayer-rotation-angle-1": {"tip": "#deviation"},
    "particleLayer-rotation-speed-box": {"label": "Angular Velocity"},
    "particleLayer-rotation-speed-0": {"tip": "$Rotation Speed\nThe rate of change of 'Rotation Angle' per second"},
    "particleLayer-rotation-speed-1": {"tip": "#deviation"},
    "particleLayer-rotation-accel-box": {"label": "Angular Accel"},
    "particleLayer-rotation-accel-0": {"tip": "$Angular Acceleration\nThe rate of change of 'Rotation Speed' per second"},
    "particleLayer-rotation-accel-1": {"tip": "#deviation"},
    "particleLayer-hRotation-grid": {"label": "Horizontal Rotation"},
    "particleLayer-hRotation-radius-box": {"label": "Radius"},
    "particleLayer-hRotation-radius-0": {"tip": "$Radius\nThe amplitude of the particle's back-and-forth horizontal movement, used to simulate rotation around the Y-axis"},
    "particleLayer-hRotation-radius-1": {"tip": "#deviation"},
    "particleLayer-hRotation-expansionSpeed-box": {"label": "Expansion Speed"},
    "particleLayer-hRotation-expansionSpeed-0": {"tip": "$Expansion Speed\nThe rate of change of 'Radius' per second"},
    "particleLayer-hRotation-expansionSpeed-1": {"tip": "#deviation"},
    "particleLayer-hRotation-expansionAccel-box": {"label": "Expansion Accel"},
    "particleLayer-hRotation-expansionAccel-0": {"tip": "$Expansion Acceleration\nThe rate of change of 'Expansion Speed' per second"},
    "particleLayer-hRotation-expansionAccel-1": {"tip": "#deviation"},
    "particleLayer-hRotation-angle-box": {"label": "Rotation Angle"},
    "particleLayer-hRotation-angle-0": {"tip": "$Rotation Angle\nThe particle's initial angle of rotation around the Y-axis\n0 degrees = right, clockwise rotation"},
    "particleLayer-hRotation-angle-1": {"tip": "#deviation"},
    "particleLayer-hRotation-angularSpeed-box": {"label": "Angular Velocity"},
    "particleLayer-hRotation-angularSpeed-0": {"tip": "$Rotation Speed\nThe rate of change of 'Rotation Angle' per second"},
    "particleLayer-hRotation-angularSpeed-1": {"tip": "#deviation"},
    "particleLayer-hRotation-angularAccel-box": {"label": "Angular Accel"},
    "particleLayer-hRotation-angularAccel-0": {"tip": "$Angular Acceleration\nThe rate of change of 'Rotation Speed' per second"},
    "particleLayer-hRotation-angularAccel-1": {"tip": "#deviation"},
    "particleLayer-scale-grid": {"label": "Scale"},
    "particleLayer-scale-factor-box": {"label": "Scale Factor"},
    "particleLayer-scale-factor-0": {"tip": "$Scale Factor\nThe scaling factor for particle size, 1 = 100%"},
    "particleLayer-scale-factor-1": {"tip": "#deviation"},
    "particleLayer-scale-speed-box": {"label": "Expansion Speed"},
    "particleLayer-scale-speed-0": {"tip": "$Scaling Speed\nThe rate of change of 'Scale Factor' per second"},
    "particleLayer-scale-speed-1": {"tip": "#deviation"},
    "particleLayer-scale-accel-box": {"label": "Expansion Accel"},
    "particleLayer-scale-accel-0": {"tip": "$Scaling Acceleration\nThe rate of change of 'Scaling Speed' per second"},
    "particleLayer-scale-accel-1": {"tip": "#deviation"},
    "particleLayer-rendering-grid": {"label": "Rendering"},
    "particleLayer-image": {"label": "Image", "tip": "The sprite image for the particle element"},
    "particleLayer-blend": {"label": "Blend", "tip": "Select a formula to blend the color with the underlying color", "options": {
      "normal": {"name": "Normal", "tip": "C = A * (1 - a%) + B * a%"},
      "additive": {"name": "Additive", "tip": "C = min(255, A + B)"},
      "subtract": {"name": "Subtract", "tip": "C = max(0, A - B)"}
    }},
    "particleLayer-light": {"label": "Light", "tip": "Affects the rendering of the image", "options": {
      "raw": {"name": "Raw", "tip": "Not affected by lighting"},
      "global": {"name": "Global Sampling", "tip": "Samples lighting from multiple pixel positions in the image to combine colors"},
      "ambient": {"name": "Ambient Light", "tip": "Uses the current scene's ambient light to combine colors"}
    }},
    "particleLayer-sort": {"label": "Sort", "tip": "Select the particle sorting mode for this layer", "options": {
      "youngest-in-front": {"name": "Youngest in Front", "tip": "New particles are displayed in front of old particles"},
      "oldest-in-front": {"name": "Oldest in Front", "tip": "Old particles are displayed in front of new particles"},
      "by-scale-factor": {"name": "By Scale Factor", "tip": "Particles with a larger scale factor are displayed in front"}
    }},
    "particleLayer-sprite-mode": {"label": "Sprite Mode", "tip": "Select the display mode of the sprite", "options": {
      "random": {"name": "Random", "tip": "Randomly select a sprite from the divided sprite sheet to display"},
      "animation": {"name": "Animation", "tip": "Play the sprite sheet in order, selecting from left to right and wrapping to the next row"},
      "animation-loop": {"name": "Animation(Loop)", "tip": "Play the sprite sheet in order and restart from the beginning after finishing"}
    }},
    "particleLayer-sprite-hframes": {"label": "Horiz Frames", "tip": "Divide the particle sprite sheet into equal horizontal sections"},
    "particleLayer-sprite-vframes": {"label": "Vert Frames", "tip": "Divide the particle sprite sheet into equal vertical sections"},
    "particleLayer-sprite-interval": {"label": "Animation Interval", "tip": "The duration each animation frame sprite stays on screen"},
    "particleLayer-color-mode": {"label": "Color Mode", "tip": "Choose a mode to fill the particle color", "options": {
      "fixed": {"name": "Fixed", "tip": "Specify a fixed color"},
      "random": {"name": "Random", "tip": "Specify a color range, randomly generate a color"},
      "easing": {"name": "Easing", "tip": "Specify a transition curve, with an initial color range and an ending color range, and compute interpolated colors continuously"},
      "texture": {"name": "Texture Sampling", "tip": "Use pixel colors from the particle sprite"}
    }},
    "particleLayer-color-rgba-box": {"label": "Color"},
    "particleLayer-color-rgba-0": {"tip": "$Red\n0 ~ 255"},
    "particleLayer-color-rgba-1": {"tip": "$Green\n0 ~ 255"},
    "particleLayer-color-rgba-2": {"tip": "$Blue\n0 ~ 255"},
    "particleLayer-color-rgba-3": {"tip": "$Opacity\n0 ~ 255"},
    "particleLayer-color-min-box": {"label": "Color Min"},
    "particleLayer-color-min-0": {"tip": "$Red\n0 ~ 255"},
    "particleLayer-color-min-1": {"tip": "$Green\n0 ~ 255"},
    "particleLayer-color-min-2": {"tip": "$Blue\n0 ~ 255"},
    "particleLayer-color-min-3": {"tip": "$Opacity\n0 ~ 255"},
    "particleLayer-color-max-box": {"label": "Color Max"},
    "particleLayer-color-max-0": {"tip": "$Red\n0 ~ 255"},
    "particleLayer-color-max-1": {"tip": "$Green\n0 ~ 255"},
    "particleLayer-color-max-2": {"tip": "$Blue\n0 ~ 255"},
    "particleLayer-color-max-3": {"tip": "$Opacity\n0 ~ 255"},
    "particleLayer-color-easingId": {"label": "Color Easing", "tip": "Used to calculate the interpolation color"},
    "particleLayer-color-startMin-box": {"label": "Color Start Min"},
    "particleLayer-color-startMin-0": {"tip": "$Red\n0 ~ 255"},
    "particleLayer-color-startMin-1": {"tip": "$Green\n0 ~ 255"},
    "particleLayer-color-startMin-2": {"tip": "$Blue\n0 ~ 255"},
    "particleLayer-color-startMin-3": {"tip": "$Opacity\n0 ~ 255"},
    "particleLayer-color-startMax-box": {"label": "Color Start Max"},
    "particleLayer-color-startMax-0": {"tip": "$Red\n0 ~ 255"},
    "particleLayer-color-startMax-1": {"tip": "$Green\n0 ~ 255"},
    "particleLayer-color-startMax-2": {"tip": "$Blue\n0 ~ 255"},
    "particleLayer-color-startMax-3": {"tip": "$Opacity\n0 ~ 255"},
    "particleLayer-color-endMin-box": {"label": "Color End Min"},
    "particleLayer-color-endMin-0": {"tip": "$Red\n0 ~ 255"},
    "particleLayer-color-endMin-1": {"tip": "$Green\n0 ~ 255"},
    "particleLayer-color-endMin-2": {"tip": "$Blue\n0 ~ 255"},
    "particleLayer-color-endMin-3": {"tip": "$Opacity\n0 ~ 255"},
    "particleLayer-color-endMax-box": {"label": "Color End Max"},
    "particleLayer-color-endMax-0": {"tip": "$Red\n0 ~ 255"},
    "particleLayer-color-endMax-1": {"tip": "$Green\n0 ~ 255"},
    "particleLayer-color-endMax-2": {"tip": "$Blue\n0 ~ 255"},
    "particleLayer-color-endMax-3": {"tip": "$Opacity\n0 ~ 255"},
    "particleLayer-color-tint-0-box": {"label": "Tint - Red", "tip": "Input color (Red) + Hue (Red) = Output color (Red)"},
    "particleLayer-color-tint-1-box": {"label": "Tint - Green", "tip": "Input color (Green) + Hue (Green) = Output color (Green)"},
    "particleLayer-color-tint-2-box": {"label": "Tint - Blue", "tip": "Input color (Blue) + Hue (Blue) = Output color (Blue)"},
    "particleLayer-color-tint-3-box": {"label": "Tint - Grayscale", "tip": "Grayscale is the opposite of saturation; higher grayscale means lower saturation"},

    "[comment]": "********** Auto Tile **********",
    "autoTile": {"title": "Auto Tile"},
    "autoTile-general-grid": {"label": "General"},
    "autoTile-image": {"label": "Image", "tip": "Select the image of the tile sprite sheet"},
    "autoTile-x": {"label": "Offset X", "tip": "Start fetching tiles from the specified horizontal position"},
    "autoTile-y": {"label": "Offset Y", "tip": "Start fetching tiles from the specified vertical position"},
    "autoTile-templates": {"label": "Templates", "tip": "List of templates for the auto tiles"},
    "autoTile-nodes": {"label": "Tiles", "tip": "List all possible auto tiles\nWhen setting tiles on the tile map, it checks adjacent rules of sub-tiles in sequence and selects the first matching tile\nIf none match, the first tile is selected as the default"},
    "autoTile-frames": {"label": "Frames", "tip": "If multiple animation frames are set, the animation loops at a fixed frame interval"},
    "autoTile-canvas": {"label": "View", "tip": "Preview the selected animation frame, click to edit"},
    "autoTile-rule-grid": {"label": "Neighbors", "tip": "Check if there are adjacent tiles with the same type\nArrow: The adjacent tile in this direction is the same as this tile\nCross: The adjacent tile in this direction is different from this tile\nBlank: The adjacent tile in this direction can be any tile"},
    "autoTile-rule-0": {"tip": "$Left\nCheck if there is a neighboring tile with the same type"},
    "autoTile-rule-1": {"tip": "$Top Left\nCheck if there is a neighboring tile with the same type"},
    "autoTile-rule-2": {"tip": "$Top\nCheck if there is a neighboring tile with the same type"},
    "autoTile-rule-3": {"tip": "$Top Right\nCheck if there is a neighboring tile with the same type"},
    "autoTile-rule-4": {"tip": "$Right\nCheck if there is a neighboring tile with the same type"},
    "autoTile-rule-5": {"tip": "$Bottom Right\nCheck if there is a neighboring tile with the same type"},
    "autoTile-rule-6": {"tip": "$Bottom\nCheck if there is a neighboring tile with the same type"},
    "autoTile-rule-7": {"tip": "$Bottom Left\nCheck if there is a neighboring tile with the same type"},

    "[comment]": "********** Auto Tile - Generate Frames **********",
    "autoTile-generateFrames": {"title": "Generate Frames"},
    "autoTile-generateFrames-strideX": {"label": "Stride X", "tip": "The horizontal offset of the generated animation frame relative to the previous frame"},
    "autoTile-generateFrames-strideY": {"label": "Stride Y", "tip": "The vertical offset of the generated animation frame relative to the previous frame"},
    "autoTile-generateFrames-count": {"label": "Count", "tip": "The total number of animation frames to generate, with the selected animation frame as a reference"},

    "[comment]": "********** Auto Tile - Frame Index **********",
    "autoTile-frameIndex": {"title": "Frame"},

    "[comment]": "********** Auto Tile - Select Node **********",
    "autoTile-selectNode": {"title": "Tile Node"},

    "[comment]": "********** Shift Scene **********",
    "scene-shift": {"title": "Shift"},
    "scene-shift-x": {"label": "Shift X", "tip": "The horizontal offset distance of the scene object"},
    "scene-shift-y": {"label": "Shift Y", "tip": "The vertical offset distance of the scene object"},

    "[comment]": "********** Object Folders **********",
    "object-folder": {"title": "Default Object Folders"},
    "object-folder-tilemap": {"label": "Tilemap", "tip": "This folder is automatically created when a new scene is created\nTilemaps created via the stage context menu will be automatically placed in this folder"},
    "object-folder-actor": {"label": "Actor", "tip": "This folder is automatically created when a new scene is created\nActors created via the stage context menu will be automatically placed in this folder"},
    "object-folder-region": {"label": "Region", "tip": "This folder is automatically created when a new scene is created\nRegions created via the stage context menu will be automatically placed in this folder"},
    "object-folder-light": {"label": "Light", "tip": "This folder is automatically created when a new scene is created\nLights created via the stage context menu will be automatically placed in this folder"},
    "object-folder-animation": {"label": "Animation", "tip": "This folder is automatically created when a new scene is created\nAnimations created via the stage context menu will be automatically placed in this folder"},
    "object-folder-particle": {"label": "Particle", "tip": "This folder is automatically created when a new scene is created\nParticles created via the stage context menu will be automatically placed in this folder"},
    "object-folder-parallax": {"label": "Parallax", "tip": "This folder is automatically created when a new scene is created\nParallax backgrounds created via the stage context menu will be automatically placed in this folder"},

    "[comment]": "********** New Project **********",
    "newProject": {"title": "New Project"},
    "newProject-template": {"label": "Template", "tip": "Select a game template for the new project", "options": {
      "minimized-project": {"name": "Minimized Current Project", "tip": "Minimized Current Project\n - Export the currently open project to another location and discard unused files to reduce space usage"}
    }},
    "newProject-folder": {"label": "Folder", "tip": "The name of the new project folder"},
    "newProject-location-box": {"label": "Location"},
    "newProject-location": {"tip": "$Location\nCreate a new project folder at this location"},
    "newProject-choose": {"tip": "$Choose Folder\nOpen the operating system dialog to select a folder as the path"},

    "[comment]": "********** Deployment **********",
    "deployment": {"title": "Deployment"},
    "deployment-platform": {"label": "Platform", "tip": "Select a target operating system platform"},
    "deployment-folder": {"label": "Folder", "tip": "The name of the output folder"},
    "deployment-location-box": {"label": "Output Location"},
    "deployment-location": {"tip": "$Output Location\nCreate an output folder at this location"},
    "deployment-choose": {"tip": "$Choose Folder\nOpen the operating system dialog to select a folder as the path"},

    "[comment]": "********** Copy Progress **********",
    "copyProgress": {"title": "Copy Progress"},
    "copyProgress-box": {"label": "Copying Files..."},

    "[comment]": "********** Project Settings **********",
    "project-settings": {"title": "Project Settings"},
    "config-window-summary": {"content": "Window"},
    "config-window-title": {"label": "Title", "tip": "The title of the game window"},
    "config-window-width": {"label": "Width", "tip": "The width of the game window, unaffected by maximizing or fullscreen mode"},
    "config-window-height": {"label": "Height", "tip": "The height of the game window, unaffected by maximizing or fullscreen mode"},
    "config-window-display": {"label": "Display", "tip": "Select a window mode\nScale the game screen proportionally", "options": {
      "windowed": {"name": "Windowed", "tip": "Run the game in windowed mode"},
      "maximized": {"name": "Maximized", "tip": "Run the game in maximized window mode"},
      "fullscreen": {"name": "Fullscreen", "tip": "Run the game in fullscreen mode"}
    }},
    "config-resolution-summary": {"content": "Resolution"},
    "config-resolution-width": {"label": "Width", "tip": "The actual width of the game canvas, automatically scaled when the window size changes (saved after deployment)"},
    "config-resolution-height": {"label": "Height", "tip": "The actual height of the game canvas, automatically scaled when the window size changes (saved after deployment)"},
    "config-resolution-sceneScale": {"label": "Scene Scale", "tip": "Scale the scene objects proportionally (saved after deployment)"},
    "config-resolution-uiScale": {"label": "UI Scale", "tip": "Scale the user interface proportionally (saved after deployment)"},
    "config-scene-summary": {"content": "Scene"},
    "config-scene-padding": {"label": "Padding", "tip": "The maximum distance the camera can move outside the scene. If set to 0, the camera is always locked within the scene"},
    "config-scene-animationInterval": {"label": "Tile Animation Interval", "tip": "The interval time for automatic tile animation frames"},
    "config-tileArea-summary": {"content": "Tile Rendering Area"},
    "config-tileArea-expansionTop": {"label": "Expansion Top", "tip": "Render tiles a specified distance outside the top edge of the screen"},
    "config-tileArea-expansionLeft": {"label": "Expansion Left", "tip": "Render tiles a specified distance outside the left edge of the screen"},
    "config-tileArea-expansionRight": {"label": "Expansion Right", "tip": "Render tiles a specified distance outside the right edge of the screen"},
    "config-tileArea-expansionBottom": {"label": "Expansion Bottom", "tip": "Render tiles a specified distance outside the bottom edge of the screen"},
    "config-animationArea-summary": {"content": "Animation Rendering Area"},
    "config-animationArea-expansionTop": {"label": "Expansion Top", "tip": "Render animations a specified distance outside the top edge of the screen"},
    "config-animationArea-expansionLeft": {"label": "Expansion Left", "tip": "Render animations a specified distance outside the left edge of the screen"},
    "config-animationArea-expansionRight": {"label": "Expansion Right", "tip": "Render animations a specified distance outside the right edge of the screen"},
    "config-animationArea-expansionBottom": {"label": "Expansion Bottom", "tip": "Render animations a specified distance outside the bottom edge of the screen"},
    "config-lightArea-summary": {"content": "Light Rendering Area"},
    "config-lightArea-expansionTop": {"label": "Expansion Top", "tip": "Render light sources a specified distance outside the top edge of the screen"},
    "config-lightArea-expansionLeft": {"label": "Expansion Left", "tip": "Render light sources a specified distance outside the left edge of the screen"},
    "config-lightArea-expansionRight": {"label": "Expansion Right", "tip": "Render light sources a specified distance outside the right edge of the screen"},
    "config-lightArea-expansionBottom": {"label": "Expansion Bottom", "tip": "Render light sources a specified distance outside the bottom edge of the screen"},
    "config-virtualAxis-summary": {"content": "Virtual Axis"},
    "config-virtualAxis-up": {"label": "Axis Up", "tip": "Pressing this key alone moves the axis point upward\nY = -1, Angle = 270"},
    "config-virtualAxis-down": {"label": "Axis Down", "tip": "Pressing this key alone moves the axis point downward\nY = 1, Angle = 90"},
    "config-virtualAxis-left": {"label": "Axis Left", "tip": "Pressing this key alone moves the axis point left\nX = -1, Angle = 180"},
    "config-virtualAxis-right": {"label": "Axis Right", "tip": "Pressing this key alone moves the axis point right\nX = 1, Angle = 0"},
    "config-collision-summary": {"content": "Collision System"},
    "config-collision-actor-enabled": {"label": "Actor Collision", "tip": "enable or disable the collision system for actors", "options": {
      "true": {"name": "Enabled", "tip": "Automatically separate scene actors based on their collision sizes"},
      "false": {"name": "Disabled", "tip": "Turn off the collision system for better performance"}
    }},
    "config-collision-scene-enabled": {"label": "Scene Collision", "tip": "Enable or disable the collision system between actors and the scene", "options": {
      "true": {"name": "Enabled", "tip": "Actors cannot pass through impassable terrain areas"},
      "false": {"name": "Disabled", "tip": "Turn off the collision system for better performance"}
    }},
    "config-collision-scene-actorSize": {"label": "Scene Collision Actor Size", "tip": "When colliding with the scene, the actor is treated as a sphere with this diameter as its collision size"},
    "config-collision-trigger-collideWithActorShape": {"label": "Trigger Collision Mode", "tip": "Select the collision detection mode for triggers with actors", "options": {
        "true": {"name": "Collide With Actor Shape", "tip": "The collision is detected when the actor's shape overlaps with the trigger's shape.\nMore accurate collision detection"},
        "false": {"name": "Collide With Actor Anchor", "tip": "The collision is detected when the actor's anchor point is inside the trigger's shape.\nBetter performance"}
      }
    },
    "config-text-summary": {"content": "Text"},
    "config-text-importedFonts": {"label": "Imported Fonts", "tip": "Import external fonts. The font name is the filename (without the extension).\nImporting too many fonts will extend initial loading time"},
    "config-text-fontFamily": {"label": "Default Font Family", "tip": "The default font used for text, textbox, and dialogbox elements\nIf multiple fonts are specified, separate them with commas, ordered from left to right in priority"},
    "config-text-highDefinition": {"label": "High Definition", "tip": "Whether to render high-definition text textures", "options": {
      "true": {"name": "Yes", "tip": "Render larger text textures, text remains sharp when scaled or rotated, but consumes more GPU memory"},
      "false": {"name": "No", "tip": "Render normal-sized text textures, text may appear blurry when scaled or rotated, but has better GPU performance"}
    }},
    "config-actor-summary": {"content": "Actor"},
    "config-actor-tempAttributes": {"label": "Actor Temporary Attributes", "tip": "All actors automatically add preset temporary attributes when initialized. These attributes cannot be saved and will be reset after loading a saved game"},
    "config-animation-summary": {"content": "Animation"},
    "config-animation-frameRate": {"label": "Frame Rate", "tip": "The number of animation timeline frames played per second. The actual rendered animation frames are interpolated based on FPS"},
    "config-soundAttenuation-summary": {"content": "Sound Attenuation"},
    "config-soundAttenuation-distance": {"label": "Attenuation Distance", "tip": "When playing 'Attenuated sound effects',\nIf the camera center is at the sound effect position, the volume is 1.\nWhen the camera center is at or beyond the attenuation distance from the sound effect, the volume is 0"},
    "config-soundAttenuation-easingId": {"label": "Attenuation Easing", "tip": "The interpolation curve from volume 1 to volume 0"},
    "config-webgl-summary": {"content": "WebGL"},
    "config-webgl-desynchronized": {"label": "Low Latency Mode", "tip": "Optional parameter for WebGL context", "options": {
      "true": {"name": "Enable", "tip": "Reduces input latency and improves interaction responsiveness, but may cause slight screen tearing.\nMay crash when running in fullscreen on some AMD hardware PCs."},
      "false": {"name": "Disable", "tip": "Uses standard synchronized rendering, slightly increasing input latency but providing a more stable display."}
    }},
    "config-webgl-textureMagFilter": {"label": "Texture Magnification", "tip": "WebGL texture magnification sampling interpolation algorithm", "options": {
      "nearest": {"name": "Nearest Sampling", "tip": "Selects the nearest pixel color directly without interpolation.\nThe texture appears pixelated, suitable for pixel art or low-resolution retro games."},
      "linear": {"name": "Linear Sampling", "tip": "Uses bilinear interpolation to compute pixel values, making textures smoother when scaled.\nTextures appear softer and smoother without noticeable pixelation, suitable for high-resolution or realistic-style games."}
    }},
    "config-webgl-textureMinFilter": {"label": "Texture Minification", "tip": "WebGL texture minification sampling interpolation algorithm", "options": {
      "nearest": {"name": "Nearest Sampling", "tip": "Selects the nearest pixel color directly without interpolation.\nThe texture appears pixelated, suitable for pixel art or low-resolution retro games."},
      "linear": {"name": "Linear Sampling", "tip": "Uses bilinear interpolation to compute pixel values, making textures smoother when scaled.\nTextures appear softer and smoother without noticeable pixelation, suitable for high-resolution or realistic-style games."}
    }},
    "config-script-summary": {"content": "Script"},
    "config-script-autoCompile": {"label": "Auto Compile", "tip": "Enable or disable automatic compilation of script files in the background.", "options": {
      "true": {"name": "Enable", "tip": "Watch TypeScript files in the project and automatically compile them into JavaScript."},
      "false": {"name": "Disable", "tip": "Disable automatic compilation and use the code editor's compilation feature instead."}
    }},
    "config-save-summary": {"content": "Save"},
    "config-save-location": {"label": "Save Location", "tip": "The parent directory where game save data is stored.", "options": {
      "app-data": {"name": "User Data Directory", "tip": "This directory is the user's application data folder on different platforms.\nWindows: C:\\Users\\UserName\\AppData\\Roaming\\\nmacOS: /Users/UserName/Library/Application Support/\nLinux: /home/UserName/.config/"},
      "documents": {"name": "User Documents Directory", "tip": "If you want saves to be stored in the 'Documents' folder, making it easily accessible to users.\nWindows: C:\\Users\\UserName\\Documents\\\nmacOS: /Users/UserName/Documents/\nLinux: /home/UserName/Documents/"},
      "local": {"name": "Application Local Directory", "tip": "Saves are stored in the local directory, making it easier to inspect save data during development.\nHowever, there is a risk of accidental overwrites when updating the application."}
    }},
    "config-save-subdir": {"label": "Subdirectory", "tip": "Relative to the save location, setting a unique directory name can prevent conflicts with other applications' data.\n"},
    "config-localization-summary": {"content": "Localization"},
    "config-localization-languages": {"label": "Languages", "tip": "List of game localization languages, detailed content can be edited in the 'Localization' window"},
    "config-localization-default": {"label": "Default Game Language", "tip": "The language selected when entering the game. When the game is deployed and the language changes, it will be automatically saved"},
    "config-other-summary": {"content": "Other Options"},
    "config-preload": {"label": "Preload Files", "tip": "Whether to preload media files when starting the game", "options": {
      "never": {"name": "Never", "tip": "Starts the game quickly, loading image and audio files on demand."},
      "always": {"name": "Always", "tip": "Preloads media files into memory to prevent flickering when displaying images for the first time and to reduce audio playback delay."},
      "deployed": {"name": "Only After Deployment", "tip": "Disabled during debugging, enabled only after deployment."}
    }},

    "[comment]": "********** Easing **********",
    "easing": {"title": "Easing"},
    "easing-list": {"label": "List"},
    "easing-points-grid": {"label": "Points"},
    "easing-mode": {"label": "Mode", "tip": "Select the number of curve control points", "options": {
      "2": {"name": "Use 2 Control Points", "tip": "Generate a simple curve"},
      "5": {"name": "Use 5 Control Points", "tip": "Generate a slightly more complex curve"},
      "8": {"name": "Use 8 Control Points", "tip": "Generate a more complex curve"}
    }},
    "easing-points-0": {"content": "Point 1"},
    "easing-points-1": {"content": "Point 2"},
    "easing-points-2": {"content": "Point 3"},
    "easing-points-3": {"content": "Point 4"},
    "easing-points-4": {"content": "Point 5"},
    "easing-points-5": {"content": "Point 6"},
    "easing-points-6": {"content": "Point 7"},
    "easing-points-7": {"content": "Point 8"},
    "easing-points-0-x": {"tip": "$X1\nHorizontal position of Control Point 1"},
    "easing-points-0-y": {"tip": "$Y1\nVertical position of Control Point 1"},
    "easing-points-1-x": {"tip": "$X2\nHorizontal position of Control Point 2"},
    "easing-points-1-y": {"tip": "$Y2\nVertical position of Control Point 2"},
    "easing-points-2-x": {"tip": "$X3\nHorizontal position of Control Point 3"},
    "easing-points-2-y": {"tip": "$Y3\nVertical position of Control Point 3"},
    "easing-points-3-x": {"tip": "$X4\nHorizontal position of Control Point 4"},
    "easing-points-3-y": {"tip": "$Y4\nVertical position of Control Point 4"},
    "easing-points-4-x": {"tip": "$X5\nHorizontal position of Control Point 5"},
    "easing-points-4-y": {"tip": "$Y5\nVertical position of Control Point 5"},
    "easing-points-5-x": {"tip": "$X6\nHorizontal position of Control Point 6"},
    "easing-points-5-y": {"tip": "$Y6\nVertical position of Control Point 6"},
    "easing-points-6-x": {"tip": "$X7\nHorizontal position of Control Point 7"},
    "easing-points-6-y": {"tip": "$Y7\nVertical position of Control Point 7"},
    "easing-points-7-x": {"tip": "$X8\nHorizontal position of Control Point 8"},
    "easing-points-7-y": {"tip": "$Y8\nVertical position of Control Point 8"},
    "easing-curve-canvas": {"label": "Curve"},
    "easing-preview-canvas": {"label": "Preview"},
    "easing-preview-reverse": {"label": "Reverse", "tip": "Whether to reverse the animation during preview", "options": {
      "true": {"name": "ON", "tip": "Reverse the animation at the end"},
      "false": {"name": "OFF", "tip": "Replay the animation from the beginning"}
    }},
    "easing-preview-duration": {"label": "Duration", "tip": "The duration of the transition during preview"},
    "easing-preview-delay": {"label": "Wait", "tip": "The wait time after the transition ends"},

    "[comment]": "********** Team **********",
    "team": {"title": "Team"},

    "[comment]": "********** Object Attribute **********",
    "object-attribute": {"title": "Attribute"},
    "object-attribute-key": {"label": "Key", "tip": "The name of the attribute"},
    "object-attribute-boolean-value": {"label": "Boolean", "tip": "The value of the attribute (Boolean)"},
    "object-attribute-number-value": {"label": "Number", "tip": "The value of the attribute (Number)"},
    "object-attribute-string-value": {"label": "String", "tip": "The value of the attribute (String)"},
    "object-attribute-enum-value": {"label": "Option", "tip": "The value of the attribute (Option)"},

    "[comment]": "********** Condition **********",
    "condition": {"title": "Condition"},
    "condition-type": {"label": "Condition Type", "tip": "Select the type of the condition variable", "options": {
      "global-boolean": {"name": "Global - Boolean", "tip": "Select global variable (Boolean)"},
      "global-number": {"name": "Global - Number", "tip": "Select global variable (Number)"},
      "global-string": {"name": "Global - String", "tip": "Select global variable (String)"},
      "self-boolean": {"name": "Self - Boolean", "tip": "Select self variable (Boolean)"},
      "self-number": {"name": "Self - Number", "tip": "Select self variable (Number)"},
      "self-string": {"name": "Self - String", "tip": "Select self variable (String)"}
    }},
    "condition-key": {"label": "Variable", "tip": "Select the correct type of global variable"},
    "condition-boolean-operation": {"label": "Operation", "tip": "Boolean operation", "options": {
      "equal": {"name": "==", "tip": "Equal to"},
      "unequal": {"name": "!=", "tip": "Not equal to"}
    }},
    "condition-boolean-value": {"label": "Boolean", "tip": "Operand"},
    "condition-number-operation": {"label": "Operation", "tip": "Number operation", "options": {
      "equal": {"name": "==", "tip": "Equal to"},
      "unequal": {"name": "!=", "tip": "Not equal to"},
      "greater-or-equal": {"name": ">=", "tip": "Greater than or equal to"},
      "less-or-equal": {"name": "<=", "tip": "Less than or equal to"},
      "greater": {"name": ">", "tip": "Greater than"},
      "less": {"name": "<", "tip": "Less than"}
    }},
    "condition-number-value": {"label": "Number", "tip": "Operand"},
    "condition-string-operation": {"label": "Operation", "tip": "String operation", "options": {
      "equal": {"name": "==", "tip": "Equal to"},
      "unequal": {"name": "!=", "tip": "Not equal to"}
    }},
    "condition-string-value": {"label": "String", "tip": "Operand"},

    "[comment]": "********** Animation - Sprite **********",
    "fileAnimation-sprite": {"title": "Sprite"},
    "fileAnimation-sprite-name": {"label": "Name", "tip": "The name of the sprite image"},
    "fileAnimation-sprite-image": {"label": "Image", "tip": "Select an image file"},
    "fileAnimation-sprite-hframes": {"label": "Horiz Frames", "tip": "The number of horizontal divisions in the sprite sheet, rounding down the width of each frame"},
    "fileAnimation-sprite-vframes": {"label": "Vert Frames", "tip": "The number of vertical divisions in the sprite sheet, rounding down the height of each frame"},

    "[comment]": "********** Actor - Sprite **********",
    "fileActor-sprite": {"title": "Sprite"},
    "fileActor-sprite-id": {"label": "Name", "tip": "Select the sprite image for the actor animation"},
    "fileActor-sprite-image": {"label": "Image", "tip": "Replace the sprite image with a new one"},

    "[comment]": "********** Skill **********",
    "fileActor-skill": {"title": "Skill"},
    "fileActor-skill-id": {"label": "Skill", "tip": "Select a skill file"},
    "fileActor-skill-key": {"label": "Shortcut Key", "tip": "Set the shortcut key for this skill"},

    "[comment]": "********** Equipment **********",
    "fileActor-equipment": {"title": "Equipment"},
    "fileActor-equipment-id": {"label": "Equipment", "tip": "Select an equipment file"},
    "fileActor-equipment-slot": {"label": "Equipment Slot", "tip": "Set the equipment slot for this equipment"},

    "[comment]": "********** Inventory **********",
    "fileActor-inventory-goods": {"title": "Inventory"},
    "fileActor-inventory-type": {"label": "Type", "tip": "Add which type of goods", "options": {
      "item": {"name": "Item", "tip": "Add an item to the inventory"},
      "equipment": {"name": "Equipment", "tip": "Add equipment to the inventory"},
      "money": {"name": "Money", "tip": "Add money to the inventory"}
    }},
    "fileActor-inventory-item-id": {"label": "Item", "tip": "Select an item file"},
    "fileActor-inventory-item-quantity": {"label": "Quantity", "tip": "Set the quantity of this item"},
    "fileActor-inventory-equipment-id": {"label": "Equipment", "tip": "Select an equipment file"},
    "fileActor-inventory-money": {"label": "Money", "tip": "Set the initial amount of money"},

    "[comment]": "********** Event - Parameter **********",
    "fileEvent-parameter": {"title": "Parameter"},
    "fileEvent-parameter-type": {"label": "Type", "tip": "The type of value received when called", "options": {
      "boolean": {"name": "Boolean", "tip": "Pass a boolean value to the initial variable"},
      "number": {"name": "Number", "tip": "Pass a numerical value to the initial variable"},
      "string": {"name": "String", "tip": "Pass a string to the initial variable"},
      "object": {"name": "Object", "tip": "Pass an object to the initial variable"},
      "actor": {"name": "Actor", "tip": "Pass an actor object to the initial variable"},
      "skill": {"name": "Skill", "tip": "Pass a skill object to the initial variable"},
      "state": {"name": "State", "tip": "Pass a state object to the initial variable"},
      "equipment": {"name": "Equipment", "tip": "Pass an equipment object to the initial variable"},
      "item": {"name": "Item", "tip": "Pass an item object to the initial variable"},
      "trigger": {"name": "Trigger", "tip": "Pass a trigger object to the initial variable"},
      "light": {"name": "Light", "tip": "Pass a light object to the initial variable"},
      "element": {"name": "Element", "tip": "Pass an element object to the initial variable"}
    }},
    "fileEvent-parameter-key": {"label": "Key", "tip": "Local variable"},
    "fileEvent-parameter-note": {"label": "Note", "tip": "Remarks or description of the parameter"},

    "[comment]": "********** Variable **********",
    "variable": {"title": "Variable"},
    "variable-list": {"label": "List"},
    "variable-properties-flex": {"label": "Properties"},
    "variable-name": {"label": "Name", "tip": "The name of the variable"},
    "variable-sort-normal": {"label": "Sort"},
    "variable-sort-normal-label": {"content": "Save to Separate File", "tip": "Write the variable data to a separate save file when saving the game"},
    "variable-sort-shared-label": {"content": "Save to Global File", "tip": "Write the variable data to a global save file when quitting the game"},
    "variable-sort-temporary-label": {"content": "Temporary", "tip": "Do not save the variable data; it resets after restarting the game"},
    "variable-type-boolean": {"label": "Type"},
    "variable-type-boolean-label": {"content": "Boolean", "tip": "Can only write boolean values"},
    "variable-type-number-label": {"content": "Number", "tip": "Can only write numbers"},
    "variable-type-string-label": {"content": "String", "tip": "Can only write strings"},
    "variable-type-object-label": {"content": "Object", "tip": "Can only write objects (cannot be saved)"},
    "variable-value-manager": {"label": "Value"},
    "variable-value-boolean-false": {"tip": "$Initial Value\nFalse"},
    "variable-value-boolean-true": {"tip": "$Initial Value\nTrue"},
    "variable-value-number": {"tip": "$Initial Value\nNumber"},
    "variable-value-string": {"tip": "$Initial Value\nString"},
    "variable-note": {"label": "Note", "tip": "Notes about the variable"},

    "[comment]": "********** Attribute **********",
    "attribute": {"title": "Attribute"},
    "attribute-list": {"label": "List"},
    "attribute-properties-flex": {"label": "Properties"},
    "attribute-name": {"label": "Name", "tip": "The name of the attribute"},
    "attribute-key": {"label": "Key", "placeholder": "Default", "tip": "The key for the attribute, defaults to using the attribute ID as the key"},
    "attribute-type-boolean": {"label": "Type"},
    "attribute-type-boolean-label": {"content": "Boolean", "tip": "Can only write boolean values"},
    "attribute-type-number-label": {"content": "Number", "tip": "Can only write numbers"},
    "attribute-type-string-label": {"content": "String", "tip": "Can only write strings"},
    "attribute-type-enum-label": {"content": "String(Enum)", "tip": "Can only write one of the specified enum values"},
    "attribute-type-object-label": {"content": "Object(For Element)", "tip": "Can only write objects (only for elements)"},
    "attribute-enum": {"label": "Options", "tip": "Select an enum group"},
    "attribute-note": {"label": "Note", "tip": "Notes about the attribute"},

    "[comment]": "********** Enumeration **********",
    "enum": {"title": "Enumeration"},
    "enum-list": {"label": "List"},
    "enum-properties-flex": {"label": "Properties"},
    "enum-name": {"label": "Name", "tip": "The name of the enumeration"},
    "enum-value": {"label": "Value", "placeholder": "Default", "tip": "The value of the enum, defaults to using the enum ID as the value"},
    "enum-note": {"label": "Note", "tip": "Notes about the enum"},

    "[comment]": "********** Localization **********",
    "localization": {"title": "Localization"},
    "localization-list": {"label": "List"},

    "[comment]": "********** Preset Object **********",
    "presetObject": {"title": "Scene Object"},

    "[comment]": "********** Preset Element **********",
    "presetElement": {"title": "Element"},

    "[comment]": "********** Plugin **********",
    "plugin": {"title": "Plugin"},
    "plugin-list": {"label": "List"},
    "plugin-overview": {"label": "Overview"},
    "plugin-parameter-grid": {"label": "Parameters"},

    "[comment]": "********** Array List **********",
    "arrayList-number": {"title": "Number"},
    "arrayList-string": {"title": "String"},

    "[comment]": "********** Custom Command **********",
    "command": {"title": "Custom Command"},
    "command-list": {"label": "List"},
    "command-overview": {"label": "Overview"},
    "command-settings-grid": {"label": "Settings"},
    "command-alias": {"label": "Alias", "placeholder": "Use plugin name as default", "tip": "Rename the command"},
    "command-keywords": {"label": "Keywords", "placeholder": "Keywords are separated by commas", "tip": "Add search keywords, separated by commas"},

    "[comment]": "********** About **********",
    "about": {"title": "Yami RPG Editor"},
    "about-credits": {"content": "Credits"},

    "[comment]": "********** Update Log **********",
    "update-log": {"title": "Update Log"},

    "[comment]": "********** File Selector **********",
    "selector": {"title": "Select File"},
    "selector-search": {"tip": "$Search\nEnter '.' to display all matching files"},

    "[comment]": "********** Color Picker **********",
    "color": {"title": "Color Picker"},
    "color-hex": {"tip": "$Hexadecimal\n6 or 8-digit color code"},
    "color-r": {"tip": "$Red\n0 ~ 255"},
    "color-g": {"tip": "$Green\n0 ~ 255"},
    "color-b": {"tip": "$Blue\n0 ~ 255"},
    "color-a": {"tip": "$Opacity\n0 ~ 255"},

    "[comment]": "********** Tag - Font **********",
    "font": {"title": "Set Font"},
    "font-font": {"label": "Font Family", "tip": "Enter the font name. If multiple fonts are specified, separate them with commas and list them in order of priority from left to right"},

    "[comment]": "********** Tag - Size **********",
    "fontSize": {"title": "Set Font Size"},
    "fontSize-size": {"label": "Size", "tip": "Change the text size (10 ~ 400)"},

    "[comment]": "********** Tag - Position **********",
    "textPosition": {"title": "Set Text Position"},
    "textPosition-axis": {"label": "Axis", "tip": "Choose the coordinate you want to change", "options": {
      "x": {"name": "X", "tip": "Set the horizontal position"},
      "y": {"name": "Y", "tip": "Set the vertical position"}
    }},
    "textPosition-operation": {"label": "Operation", "tip": "Choose the operation for the coordinate", "options": {
      "set": {"name": "Set", "tip": "Set to absolute position"},
      "add": {"name": "Add", "tip": "Offset by a certain distance"}
    }},
    "textPosition-value": {"label": "Value", "tip": "The position of the coordinate"},

    "[comment]": "********** Tag - Effect **********",
    "textEffect": {"title": "Set Text Effect"},
    "textEffect-type": {"label": "Effect", "tip": "Choose a text effect", "options": {
      "shadow": {"name": "Shadow", "tip": "Render the text as a shadow at the specified offset position"},
      "stroke": {"name": "Stroke", "tip": "Render the text outline with the specified width, half of which is covered by the text"},
      "outline": {"name": "Outline", "tip": "Render the text outline by offsetting in four directions by 1 pixel"}
    }},
    "textEffect-shadowOffsetX": {"label": "Shadow X", "tip": "The horizontal offset of the text shadow"},
    "textEffect-shadowOffsetY": {"label": "Shadow Y", "tip": "The vertical offset of the text shadow"},
    "textEffect-strokeWidth": {"label": "Stroke Width", "tip": "The width of the text stroke"},
    "textEffect-color": {"label": "Effect Color", "tip": "The color of the background text"},

    "[comment]": "********** Tag - Image **********",
    "insertImage": {"title": "Insert Image"},
    "insertImage-mode": {"label": "Mode", "tip": "Choose the image parameter to use", "options": {
      "image": {"name": "Image", "tip": "Insert an image and stretch it to the current font size"},
      "image-size": {"name": "Image - Size", "tip": "Insert an image and specify its size"},
      "image-clip": {"name": "Image - Clip", "tip": "Insert an image and specify the clipping area"},
      "image-clip-size": {"name": "Image - Clip - Size", "tip": "Insert an image and specify the clipping area and size"}
    }},
    "insertImage-image": {"label": "Image", "tip": "Select the image file to insert"},
    "insertImage-clip": {"label": "Clip", "tip": "The clipping area of the image"},
    "insertImage-width": {"label": "Width", "tip": "The display width of the image"},
    "insertImage-height": {"label": "Height", "tip": "The display height of the image"},

    "[comment]": "********** Tag - Local Variable **********",
    "localVariable": {"title": "Set Local Variable"},
    "localVariable-key": {"label": "Local Variable", "tip": "Enter the name of a local variable in the current event"},

    "[comment]": "********** Zoom **********",
    "zoom": {"title": "Zoom"},
    "zoom-factor": {"label": "Zoom Factor", "tip": "Enter the zoom factor for the editor interface (0.6666 ~ 2)"},

    "[comment]": "********** Rename **********",
    "rename": {"title": "Rename"},
    "rename-name": {"label": "Name", "tip": "Enter a new name"},

    "[comment]": "********** Language **********",
    "language": {"title": "Language"},
    "language-name": {"label": "Name", "tip": "Choose a language"},
    "language-font": {"label": "Font", "tip": "The preferred font for this language"},
    "language-scale": {"label": "Font Scaling Factor", "tip": "Scale the size of all text"},

    "[comment]": "********** Export Language Pack **********",
    "exportLanguage": {"title": "Export Language Pack"},
    "exportLanguage-first": {"label": "First Lang", "tip": "Prioritize exporting text from this language pack"},
    "exportLanguage-second": {"label": "Second Lang", "tip": "Use the second language to fill in missing content from the first language"},

    "[comment]": "********** Import Language Pack **********",
    "importLanguage": {"title": "Import Language Pack"},
    "importLanguage-language": {"label": "Import to", "tip": "Choose the language pack to overwrite"},

    "[comment]": "********** Choice **********",
    "choice": {"title": "Choice"},
    "choice-content": {"label": "Content", "tip": "The content of the option, which can be read via \"Set String\""},

    "[comment]": "********** Set Key **********",
    "setKey": {"title": "Set Key"},
    "setKey-key": {"label": "Key", "tip": "Set the key for the transition curve, for access via Javascript"},

    "[comment]": "********** Set Quantity **********",
    "setQuantity": {"title": "Set Quantity"},
    "setQuantity-quantity": {"label": "Quantity", "tip": "Enter the item quantity"},

    "[comment]": "********** Event **********",
    "[comment]": "~~~~~~~~",
    "event": {"title": "Event"},
    "event-open-list": {"label": "Event"},
    "event-commands-gutter-background": {"label": "Content"},
    "event-type": {"tip": "$Type\nCertain specific actions will automatically trigger related types of events"},

    "[comment]": "********** Variable Getter **********",
    "variableGetter": {"title": "Variable"},
    "variableGetter-type": {"label": "Type", "tip": "How to access the variable", "options": {
      "local": {"name": "Local", "tip": "Temporary variable stored in the event, destroyed when the event ends"},
      "global": {"name": "Global", "tip": "User-defined variable, permanently stored in the game save file"},
      "self": {"name": "Self Variable", "tip": "Property owned only by preset objects in the scene, permanently stored in the game save file"},
      "actor": {"name": "Actor Attribute", "tip": "Customizable actor properties, editable in the 'Object Attribute' Manager [F6]"},
      "skill": {"name": "Skill Attribute", "tip": "Customizable skill properties, editable in the 'Object Attribute' Manager [F6]"},
      "state": {"name": "State Attribute", "tip": "Customizable state properties, editable in the 'Object Attribute' Manager [F6]"},
      "equipment": {"name": "Equipment Attribute", "tip": "Customizable equipment properties, editable in the 'Object Attribute' Manager [F6]"},
      "item": {"name": "Item Attribute", "tip": "Customizable item properties, editable in the 'Object Attribute' Manager [F6]"},
      "element": {"name": "Element Attribute", "tip": "Customizable element properties, editable in the 'Object Attribute' Manager [F6], supports object types"}
    }},
    "variableGetter-actor": {"label": "Actor", "tip": "Access this actor's properties"},
    "variableGetter-skill": {"label": "Skill", "tip": "Access this skill's properties"},
    "variableGetter-state": {"label": "State", "tip": "Access this state's properties"},
    "variableGetter-equipment": {"label": "Equipment", "tip": "Access this equipment's properties"},
    "variableGetter-item": {"label": "Item", "tip": "Access this item's properties"},
    "variableGetter-element": {"label": "Element", "tip": "Access this element's properties"},
    "variableGetter-common-key": {"label": "Key", "tip": "Local variable"},
    "variableGetter-preset-key": {"label": "Key", "tip": "Object property"},
    "variableGetter-global-key": {"label": "Key", "tip": "Global variable"},

    "[comment]": "********** Variable Getter 2 **********",
    "variableGetter2": {"title": "Variable"},
    "variableGetter2-type": {"label": "Type", "tip": "How to access the variable"},
    "variableGetter2-element": {"label": "Element", "tip": "Access this element's properties"},
    "variableGetter2-common-key": {"label": "Key", "tip": "Local variable"},
    "variableGetter2-preset-key": {"label": "Key", "tip": "Object property"},
    "variableGetter2-global-key": {"label": "Key", "tip": "Global variable"},

    "[comment]": "********** Actor Getter **********",
    "actorGetter": {"title": "Actor"},
    "actorGetter-type": {"label": "Type", "tip": "如何获取角色", "options": {
      "trigger": {"name": "Event Trigger Actor", "tip": "The actor that triggered this event, it may be:\nThe actor who owns this event\nThe actor who used the item\nThe actor who added the equipment\nThe actor who cast the skill\nThe actor who got the state"},
      "caster": {"name": "Skill Caster", "tip": "Accessible in the 'Cast Skill' event, as well as in trigger and state events"},
      "latest": {"name": "Latest Actor", "tip": "Get the latest created actor, which refreshes when the 'Create Actor' or 'Create Global Actor' command is called"},
      "target": {"name": "Target Actor", "tip": "A temporary container for storing an actor.\nIn an actor 'Collision' event, it refers to the other actor that collided with the 'Trigger Actor'.\nWhen executing the 'Set Target' command, the specified actor is set as the target actor.\nWhen executing the 'Detect Targets' command, a qualifying actor is retrieved from the actor's target pool as the target actor, which may not always exist.\nWhen executing the 'Show Text' command, it is set to the actor obtained from the 'Actor Accessor' in the command, which may not always exist."},
      "player": {"name": "Player Actor", "tip": "Set the initial player actor via 'Project Settings -> Actor -> Player Actor'. Replace the current player actor via 'Set Player Actor' command"},
      "member": {"name": "Party Member", "tip": "Get the actor in the player's party"},
      "global": {"name": "Global Actor", "tip": "Get the existing global actor by actor file id"},
      "by-id": {"name": "By Actor ID", "tip": "Get a preset scene actor"},
      "variable": {"name": "Variable", "tip": "Get the actor from the specified variable"}
    }},
    "actorGetter-memberId": {"label": "Member ID", "tip": "0 = First member\n1 = Second member\n......"},
    "actorGetter-actorId": {"label": "Actor", "tip": "The actor file id"},
    "actorGetter-presetId": {"label": "Data ID", "tip": "The preset actor id in the scene"},
    "actorGetter-variable": {"label": "Variable", "tip": "The object variable that stores the actor"},

    "[comment]": "********** Skill Getter **********",
    "skillGetter": {"title": "Skill"},
    "skillGetter-type": {"label": "Type", "tip": "How to obtain the skill", "options": {
      "trigger": {"name": "Event Trigger Skill", "tip": "The skill that triggered this event"},
      "latest": {"name": "Latest Skill", "tip": "Get the most recently created skill, which refreshes when the 'Change Actor Skill' command is called"},
      "by-key": {"name": "By Shortcut Key", "tip": "Get the skill associated with the actor and the shortcut key"},
      "by-id": {"name": "By Skill ID", "tip": "Get the skill associated with the actor and the skill file ID"},
      "variable": {"name": "Variable", "tip": "Get the skill from the specified variable"}
    }},
    "skillGetter-actor": {"label": "Actor", "tip": "Get the skill from this actor"},
    "skillGetter-key": {"label": "Shortcut Key", "tip": "Get the skill assigned to this shortcut key"},
    "skillGetter-skillId": {"label": "Skill", "tip": "Get the skill associated with this skill file ID"},
    "skillGetter-variable": {"label": "Variable", "tip": "Get the skill object from the variable"},

    "[comment]": "********** State Getter **********",
    "stateGetter": {"title": "State"},
    "stateGetter-type": {"label": "Type", "tip": "How to obtain the state", "options": {
      "trigger": {"name": "Event Trigger State", "tip": "The state that triggered this event"},
      "latest": {"name": "Latest State", "tip": "Get the most recently created state, which refreshes when the 'Change Actor State' command is called"},
      "by-id": {"name": "By State ID", "tip": "Get the state associated with the actor and the state file ID"},
      "variable": {"name": "Variable", "tip": "Get the state from the specified variable"}
    }},
    "stateGetter-actor": {"label": "Actor", "tip": "Get the state from this actor"},
    "stateGetter-stateId": {"label": "State", "tip": "Get the state associated with this state file ID"},
    "stateGetter-variable": {"label": "Variable", "tip": "Get the state object from the variable"},

    "[comment]": "********** Equipment Getter **********",
    "equipmentGetter": {"title": "Equipment"},
    "equipmentGetter-type": {"label": "Type", "tip": "How to obtain the equipment", "options": {
      "trigger": {"name": "Event Trigger Equipment", "tip": "The equipment that triggered this event"},
      "latest": {"name": "Latest Equipment", "tip": "Get the most recently created equipment, which refreshes when the 'Change Actor Equipment' command is called"},
      "by-slot": {"name": "By Equipment Slot", "tip": "Get the equipment from the specified actor's equipment slot"},
      "by-id-equipped": {"name": "By Equipment ID (Equipped)", "tip": "Get the equipment in the slot associated with the actor and the equipment file ID"},
      "by-id-inventory": {"name": "By Equipment ID (Inventory)", "tip": "Get the equipment in the inventory associated with the actor and the equipment file ID"},
      "variable": {"name": "Variable", "tip": "Get the equipment from the specified variable"}
    }},
    "equipmentGetter-actor": {"label": "Actor", "tip": "Get the equipment from this actor"},
    "equipmentGetter-slot": {"label": "Equipment Slot", "tip": "Get the equipment from this equipment slot"},
    "equipmentGetter-equipmentId": {"label": "Equipment", "tip": "Get the equipment associated with this equipment file ID"},
    "equipmentGetter-variable": {"label": "Variable", "tip": "Get the equipment object from the variable"},

    "[comment]": "********** Item Getter **********",
    "itemGetter": {"title": "Item"},
    "itemGetter-type": {"label": "Type", "tip": "How to obtain the item", "options": {
      "trigger": {"name": "Event Trigger Item", "tip": "The item that triggered this event"},
      "latest": {"name": "Latest Item", "tip": "Get the most recently acquired item, which refreshes when the 'Set Inventory' command is called to add items"},
      "by-key": {"name": "By Shortcut Key", "tip": "Get the item in the shortcut bar of the specified actor"},
      "by-id": {"name": "By Item ID", "tip": "Get the item associated with the item file ID of the specified actor"},
      "variable": {"name": "Variable", "tip": "Get the item from the specified variable"}
    }},
    "itemGetter-actor": {"label": "Actor", "tip": "Get the item from this actor"},
    "itemGetter-key": {"label": "Shortcut Key", "tip": "Get the item assigned to this shortcut key"},
    "itemGetter-itemId": {"label": "Item", "tip": "Get the item corresponding to the specified actor and item file ID"},
    "itemGetter-variable": {"label": "Variable", "tip": "Get the item object from the variable"},

    "[comment]": "********** Position Getter **********",
    "positionGetter": {"title": "Position"},
    "positionGetter-type": {"label": "Type", "tip": "How to obtain the position", "options": {
      "absolute": {"name": "Absolute Coordinates", "tip": "Specify the scene coordinates (X, Y)"},
      "relative": {"name": "Relative Coordinates", "tip": "Specify the relative coordinates (X, Y) of the current object position, valid only in some cases"},
      "actor": {"name": "Position of Actor", "tip": "Get the position of the actor"},
      "trigger": {"name": "Position of Trigger", "tip": "Get the position of the trigger"},
      "light": {"name": "Position of Light", "tip": "Get the position of the light"},
      "region": {"name": "Position of Region", "tip": "Get the position of the region"},
      "object": {"name": "Position of Object", "tip": "Get the position of a preset scene object"},
      "mouse": {"name": "Position of Mouse", "tip": "Get the position of the mouse pointer"}
    }},
    "positionGetter-common-x": {"label": "X", "tip": "Horizontal position in the scene"},
    "positionGetter-common-y": {"label": "Y", "tip": "Vertical position in the scene"},
    "positionGetter-actor": {"label": "Actor", "tip": "Get the current position of this actor"},
    "positionGetter-trigger": {"label": "Trigger", "tip": "Get the current position of this trigger"},
    "positionGetter-light": {"label": "Light", "tip": "Get the current position of this light"},
    "positionGetter-region": {"label": "Region", "tip": "Get a position within this region"},
    "positionGetter-region-mode": {"label": "Mode", "tip": "Which position to get within this region", "options": {
      "center": {"name": "Center", "tip": "Get the center point of the region"},
      "random": {"name": "Random", "tip": "Get a random position within the region"},
      "random-land": {"name": "Random - Land", "tip": "Get a random ground position within the region"},
      "random-water": {"name": "Random - Water", "tip": "Get a random water surface position within the region"},
      "random-wall": {"name": "Random - Wall", "tip": "Get a random wall position within the region"}
    }},
    "positionGetter-objectId": {"label": "Object", "tip": "Get the current position of a preset scene object"},

    "[comment]": "********** Angle Getter **********",
    "angleGetter": {"title": "Angle"},
    "angleGetter-type": {"label": "Type", "tip": "How to get the angle", "options": {
      "position": {"name": "Towards Position", "tip": "Calculate the angle of the actor towards the target position"},
      "absolute": {"name": "Absolute Angle", "tip": "Specify the angle, 0 degrees = right, clockwise rotation"},
      "relative": {"name": "Relative Angle", "tip": "The relative angle to the actor's current angle, -180 degrees = opposite direction"},
      "direction": {"name": "Relative to Direction", "tip": "The relative angle of the actor's current animation direction, affected by the number of animation directions"},
      "random": {"name": "Random Angle", "tip": "Randomly generated between 0 ~ 360 degrees"}
    }},
    "angleGetter-position-position": {"label": "Position", "tip": "Calculate the angle towards this position"},
    "angleGetter-common-degrees": {"label": "Degrees", "tip": "360 degrees = a full circle, clockwise rotation"},

    "[comment]": "********** Trigger Getter **********",
    "triggerGetter": {"title": "Trigger"},
    "triggerGetter-type": {"label": "Type", "tip": "How to get a trigger", "options": {
      "trigger": {"name": "Event Trigger", "tip": "The trigger that triggered this event"},
      "latest": {"name": "Latest Trigger", "tip": "Get the latest created trigger, which refreshes when the 'Create Trigger' command is called"},
      "variable": {"name": "Variable", "tip": "Get the trigger from the specified variable"}
    }},
    "triggerGetter-variable": {"label": "Variable", "tip": "Get the trigger object from the variable"},

    "[comment]": "********** Light Getter **********",
    "lightGetter": {"title": "Light"},
    "lightGetter-type": {"label": "Type", "tip": "How to get a light source", "options": {
      "trigger": {"name": "Event Trigger Light", "tip": "The light that triggered this event"},
      "latest": {"name": "Latest Light", "tip": "Get the latest created light, which refreshes when the 'Create Light' command is called"},
      "by-id": {"name": "By Light ID", "tip": "Get a preset scene light"},
      "variable": {"name": "Variable", "tip": "Get the light from the specified variable"}
    }},
    "lightGetter-presetId": {"label": "Data ID", "tip": "Select a light source from the scene object list"},
    "lightGetter-variable": {"label": "Variable", "tip": "Get the light object from the variable"},

    "[comment]": "********** Region Getter **********",
    "regionGetter": {"title": "Region"},
    "regionGetter-type": {"label": "Type", "tip": "How to get a region", "options": {
      "trigger": {"name": "Event Trigger Region", "tip": "The region that triggered this event"},
      "by-id": {"name": "By Region ID", "tip": "Get a preset region in the current scene"}
    }},
    "regionGetter-presetId": {"label": "Data ID", "tip": "Get the preset region in the scene"},

    "[comment]": "********** Tilemap Getter **********",
    "tilemapGetter": {"title": "Tilemap"},
    "tilemapGetter-type": {"label": "Type", "tip": "How to get a tilemap", "options": {
      "trigger": {"name": "Event Trigger Tilemap", "tip": "The tilemap that triggered this event"},
      "by-id": {"name": "By Tilemap ID", "tip": "Get a preset scene tilemap"}
    }},
    "tilemapGetter-presetId": {"label": "Data ID", "tip": "Get the preset tilemap in the scene"},

    "[comment]": "********** Scene Object Accessor **********",
    "objectGetter": {"title": "Scene Object"},
    "objectGetter-type": {"label": "Type", "tip": "How to get the scene object", "options": {
      "trigger": {"name": "Event Trigger Object", "tip": "The scene object that triggered this event"},
      "latest": {"name": "Latest Created Object", "tip": "Gets the most recently created scene object, refreshed when the 'Create Object' command is called"},
      "by-id": {"name": "Specified Object ID", "tip": "Gets a predefined object in the scene"},
      "variable": {"name": "Object Variable", "tip": "Gets a scene object stored in a variable"}
    }},
    "objectGetter-presetId": {"label": "Data ID", "tip": "Gets a predefined object in the scene"},
    "objectGetter-variable": {"label": "Variable", "tip": "Gets a scene object stored in a variable"},

    "[comment]": "********** Element Getter **********",
    "elementGetter": {"title": "Element"},
    "elementGetter-type": {"label": "Type", "tip": "How to get an element", "options": {
      "trigger": {"name": "Event Trigger Element", "tip": "The element that triggered this event"},
      "latest": {"name": "Latest Element", "tip": "Get the latest created element, which refreshes when the 'Create Element' command is called"},
      "by-id": {"name": "By Element ID", "tip": "Get the latest created element with the specified ID"},
      "by-ancestor-and-id": {"name": "By Ancestor And ID", "tip": "Get the first element with the specified ID among the descendant elements of the specified element"},
      "by-index": {"name": "By Parent And Index", "tip": "Get a child element of the specified element"},
      "by-button-index": {"name": "By Focus And Button Index", "tip": "Get a button in the button list of the specified focus element"},
      "selected-button": {"name": "Get Selected Button In Focus", "tip": "Get the selected button in the currently focused element"},
      "focus": {"name": "Get The Latest Focus Element", "tip": "Get the latest focused element"},
      "parent": {"name": "Get Parent Element", "tip": "Get the parent element of the variable element"},
      "variable": {"name": "Variable", "tip": "Read the element from the specified variable"}
    }},
    "elementGetter-ancestor": {"label": "Ancestor", "tip": "Choose the ancestor element of the target"},
    "elementGetter-presetId": {"label": "Data ID", "tip": "Get the preset element"},
    "elementGetter-index": {"label": "Index", "tip": "The position of the target element in the child element list\nIndex 0 = First child element\nIndex 1 = Second child element\n......"},
    "elementGetter-variable": {"label": "Variable", "tip": "Get the element object from the variable"},

    "[comment]": "********** Ancestor Getter **********",
    "ancestorGetter": {"title": "Ancestor Element"},
    "ancestorGetter-type": {"label": "Type", "tip": "How to get an element", "options": {}},
    "ancestorGetter-presetId": {"label": "Data ID", "tip": "Get the preset element"},
    "ancestorGetter-variable": {"label": "Variable", "tip": "Get the element object from the variable"},

    "[comment]": "********** Command - Show Text **********",
    "showText": {"title": "Show Text"},
    "showText-target": {"tip": "Target Actor\nThis actor will be set as the target actor"},
    "showText-parameters": {"placeholder": "Parameters", "tip": "Parameter Format\nbool1, bool2: true, num: 0, str: hello world, ...\nRead parameters by 'Set Boolean', 'Set Number' and 'Set String' commands"},

    "[comment]": "********** Command - Show Choices **********",
    "showChoices": {"title": "Show Choices"},
    "showChoices-choices": {"label": "Choices", "tip": "Read choice contents with the 'Set String' command"},
    "showChoices-parameters": {"label": "Parameters", "tip": "Parameter Format\nbool1, bool2: true, num: 0, str: hello world, ...\nRead parameters by 'Set Boolean', 'Set Number' and 'Set String' commands"},

    "[comment]": "********** Command - Comment **********",
    "comment": {"title": "Comment"},

    "[comment]": "********** Command - Set Boolean **********",
    "setBoolean": {"title": "Set Boolean"},
    "setBoolean-variable": {"label": "Variable", "tip": "The target variable to be written"},
    "setBoolean-operation": {"label": "Operation", "options": {
      "set": {"name": "Set", "tip": "Set to the operand"},
      "not": {"name": "Not", "tip": "Set to the opposite value of the operand"},
      "and": {"name": "And", "tip": "Set to 'True' when both the target variable and the operand are 'True', otherwise set to 'False'"},
      "or": {"name": "Or", "tip": "When at least one of the target variable and the operand is 'True', set to 'True', otherwise set to 'False'"},
      "xor": {"name": "Xor", "tip": "Set to 'True' when the target variable is not the same as the operand, otherwise set to 'False'"}
    }},
    "setBoolean-operand-type": {"label": "Type", "tip": "Select the method to get the boolean value", "options": {
      "constant": {"name": "Constant", "tip": "Constant value"},
      "variable": {"name": "Variable", "tip": "Read value from the variable"},
      "list": {"name": "List Item", "tip": "Read the list from the variable, and then read the value from the list at the specified position"},
      "parameter": {"name": "Parameter", "tip": "Parameters entered in the 'Show Text' or 'Show Choices' command"},
      "script": {"name": "Script", "tip": "Javascript return value"}
    }},
    "setBoolean-constant-value": {"label": "Constant", "tip": "Fixed value"},
    "setBoolean-common-variable": {"label": "Variable", "tip": "Read data from the variable"},
    "setBoolean-list-index": {"label": "Index", "tip": "Read the value from the Nth (0, 1, 2, ...) position in the list"},
    "setBoolean-parameter-key": {"label": "Param Name", "tip": "Get the value of this parameter"},
    "setBoolean-script": {"label": "Script", "tip": "Execute Javascript and get the return value"},

    "[comment]": "********** Command - Set Number **********",
    "setNumber": {"title": "Set Number"},
    "setNumber-variable": {"label": "Variable", "tip": "The target variable to be written"},
    "setNumber-operands": {"label": "Expression"},
    "setNumber-operand": {"title": "Number Operand"},
    "setNumber-operation": {"label": "Operation", "tip": "Expression operation", "options": {
      "set": {"name": "Set", "tip": "The value of the target variable equals the value of the expression"},
      "add": {"name": "Add", "tip": "Add the value of the expression to the target variable's value"},
      "sub": {"name": "Sub", "tip": "Subtract the value of the expression from the target variable's value"},
      "mul": {"name": "Mul", "tip": "Multiply the target variable's value by the value of the expression"},
      "div": {"name": "Div", "tip": "Divide the target variable's value by the value of the expression"},
      "mod": {"name": "Mod", "tip": "Get the remainder when the target variable's value is divided by the value of the expression"}
    }},
    "setNumber-operand-operation": {"tip": "$ Operation\nNumeric operation", "options": {
      "add": {"name": "Add", "tip": "Add operands"},
      "sub": {"name": "Sub", "tip": "Subtract operands"},
      "mul": {"name": "Mul", "tip": "Multiply operands"},
      "div": {"name": "Div", "tip": "Divide operands"},
      "mod": {"name": "Mod", "tip": "Get the remainder when operands are divided"},
      "add()": {"name": "(Add)", "tip": "Add operands (higher priority)"},
      "sub()": {"name": "(Sub)", "tip": "Subtract operands (higher priority)"},
      "mul()": {"name": "(Mul)", "tip": "Multiply operands (higher priority)"},
      "div()": {"name": "(Div)", "tip": "Divide operands (higher priority)"},
      "mod()": {"name": "(Mod)", "tip": "Get remainder when operands are divided (higher priority)"}
    }},
    "setNumber-operand-type": {"label": "Type", "tip": "Select the method to obtain the value", "options": {
      "constant": {"name": "Constant", "tip": "Fixed value"},
      "variable": {"name": "Variable", "tip": "Read data from a variable"},
      "math": {"name": "Math", "tip": "Mathematical methods"},
      "string": {"name": "String", "tip": "String methods"},
      "object": {"name": "Object", "tip": "Object methods"},
      "element": {"name": "Element", "tip": "Element methods"},
      "list": {"name": "List Item", "tip": "Read the list from a variable, then read the value at a specified position in the list"},
      "parameter": {"name": "Parameter", "tip": "Parameters entered in 'Show Text' or 'Show Choices' commands"},
      "script": {"name": "Script", "tip": "Execute Javascript and get the return value"},
      "other": {"name": "Other", "tip": "Other methods"}
    }},
    "setNumber-operand-constant-value": {"label": "Constant", "tip": "Fixed value"},
    "setNumber-operand-math-method": {"label": "Math Method", "tip": "Select a mathematical method to retrieve a value", "options": {
      "round": {"name": "Round", "tip": "Reads the variable value and returns the nearest integer after rounding"},
      "floor": {"name": "Floor", "tip": "Reads the variable value and returns the largest integer less than or equal to this number"},
      "ceil": {"name": "Ceil", "tip": "Reads the variable value and returns the smallest integer greater than or equal to this number"},
      "sqrt": {"name": "Sqrt", "tip": "Reads the variable value and returns the square root of this number"},
      "abs": {"name": "Abs", "tip": "Reads the variable value and returns the absolute value of this number"},
      "cos": {"name": "Cos", "tip": "Reads the variable value and returns the cosine of this angle"},
      "sin": {"name": "Sin", "tip": "Reads the variable value and returns the sine of this angle"},
      "tan": {"name": "Tan", "tip": "Reads the variable value and returns the tangent of this angle"},
      "random": {"name": "Random[0,1)", "tip": "Returns a random number between 0 and less than 1"},
      "random-int": {"name": "Random Int", "tip": "Returns a random integer between the specified minimum and maximum values"},
      "distance": {"name": "Distance", "tip": "Returns the distance between two positions"},
      "distance-x": {"name": "Horizontal Distance", "tip": "Returns the horizontal distance between two positions"},
      "distance-y": {"name": "Vertical Distance", "tip": "Returns the vertical distance between two positions"},
      "relative-angle": {"name": "Relative Angle", "tip": "Returns the relative angle between two positions"}
    }},
    "setNumber-operand-string-method": {"label": "String Method", "tip": "Select a string method to retrieve a value", "options": {
      "length": {"name": "Get Length", "tip": "Get the number of characters in the string.\nFor example: \"abcd\" returns 4"},
      "parse": {"name": "Parse Number", "tip": "Parse a string to a number.\nFor example: \"12.34\" returns 12.34"},
      "search": {"name": "Get Index of Search String", "tip": "Search for the position of the substring in the string.\nFor example: in \"abcdefg\"\nSearch for \"abc\" and the result is 0\nSearch for \"cdef\" and the result is 2.\nSearch for \"h\" and the result is -1, meaning it does not exist."}
    }},
    "setNumber-operand-object-property": {"label": "Property", "tip": "Retrieve object property value", "options": {
      "actor-x": {"name": "Actor - X", "tip": "Horizontal position of the actor in the scene"},
      "actor-y": {"name": "Actor - Y", "tip": "Vertical position of the actor in the scene"},
      "actor-ui-x": {"name": "Actor - UI X", "tip": "Convert the actor's scene X to UI X in pixels\nActor UI X = Actor Screen X / UI Scale"},
      "actor-ui-y": {"name": "Actor - UI Y", "tip": "Convert the actor's scene Y to UI Y in pixels\nActor UI Y = Actor Screen Y / UI Scale"},
      "actor-screen-x": {"name": "Actor - Screen X", "tip": "Convert the actor's scene X to screen X in pixels"},
      "actor-screen-y": {"name": "Actor - Screen Y", "tip": "Convert the actor's scene Y to screen Y in pixels"},
      "actor-angle": {"name": "Actor - Angle", "tip": "The angle of the actor"},
      "actor-direction": {"name": "Actor - Direction Angle", "tip": "The angle corresponding to the direction of the actor animation.\nSingle direction is always 0\nTwo directions may be 0/180\nFour directions may be 0/90/180/270"},
      "actor-movement-speed": {"name": "Actor - Movement Speed", "tip": "The movement speed of the actor"},
      "actor-collision-size": {"name": "Actor - Collision Size", "tip": "The collision size of the actor"},
      "actor-collision-weight": {"name": "Actor - Collision Weight", "tip": "The collision weight of the actor"},
      "actor-scaling-factor": {"name": "Actor - Scaling Factor", "tip": "The scaling factor of the actor"},
      "actor-inventory-item-quantity": {"name": "Actor - Item Quantity", "tip": "The number of items in inventory"},
      "actor-inventory-equipment-quantity": {"name": "Actor - Equipment Quantity", "tip": "The number of equipment items in inventory"},
      "actor-inventory-money": {"name": "Actor - Inventory Money", "tip": "The amount of money in inventory"},
      "actor-inventory-used-space": {"name": "Actor - Inventory Used Space", "tip": "Space occupied by items and equipment in the actor's inventory"},
      "actor-inventory-version": {"name": "Actor - Inventory Version", "tip": "Increments when the actor's inventory adds or removes items or equipment"},
      "actor-skill-version": {"name": "Actor - Skill Version", "tip": "Increments when the actor adds or removes skills"},
      "actor-state-version": {"name": "Actor - State Version", "tip": "Increments when the actor adds or removes states"},
      "actor-equipment-version": {"name": "Actor - Equipment Version", "tip": "Increments when the actor equips or unequips equipment"},
      "actor-shortcut-version": {"name": "Actor - Shortcut Version", "tip": "Increments when the actor's shortcut bar is changed"},
      "actor-animation-current-time": {"name": "Actor - Anim Current Time", "tip": "The elapsed time of the actor animation"},
      "actor-animation-duration": {"name": "Actor - Anim Duration", "tip": "The duration of the actor animation"},
      "actor-animation-progress": {"name": "Actor - Anim Progress", "tip": "Anim Current Time / Anim Duration"},
      "actor-cooldown-time": {"name": "Actor - Cooldown Time", "tip": "Get the current cooldown time by the specified key"},
      "actor-cooldown-duration": {"name": "Actor - Cooldown Duration", "tip": "Get the cooldown duration by the specified key"},
      "actor-cooldown-progress": {"name": "Actor - Cooldown Progress", "tip": "Cooldown Time / Cooldown Duration"},
      "skill-cooldown-time": {"name": "Skill - Cooldown Time", "tip": "The cooldown time of the skill"},
      "skill-cooldown-duration": {"name": "Skill - Cooldown Duration", "tip": "The cooldown duration of the skill"},
      "skill-cooldown-progress": {"name": "Skill - Cooldown Progress", "tip": "Cooldown Time / Cooldown Duration"},
      "state-current-time": {"name": "State - Current Time", "tip": "The current time of the state"},
      "state-duration": {"name": "State - Duration", "tip": "The duration of the state"},
      "state-progress": {"name": "State - Progress", "tip": "Current Time / Duration"},
      "equipment-order": {"name": "Equipment - Order in Inventory", "tip": "Get the order of the equipment in Inventory"},
      "item-order": {"name": "Item - Order in Inventory", "tip": "Get the order of the item in Inventory"},
      "item-quantity": {"name": "Item - Quantity", "tip": "Get the quantity of the items in Inventory"},
      "trigger-speed": {"name": "Trigger - Speed", "tip": "Get the speed of the trigger"},
      "trigger-angle": {"name": "Trigger - Angle", "tip": "Get the angle of the trigger"},
      "tilemap-width": {"name": "Tilemap - Width", "tip": "Get the width of the tilemap"},
      "tilemap-height": {"name": "Tilemap - Height", "tip": "Get the height of the tilemap"},
      "list-length": {"name": "List - Length", "tip": "Get the number of data in the list"}
    }},
    "setNumber-operand-element-property": {"label": "Property", "tip": "Retrieve element property value", "options": {
      "element-x": {"name": "Element - X", "tip": "The horizontal position of the element (calculated value)"},
      "element-y": {"name": "Element - Y", "tip": "The vertical position of the element (calculated value)"},
      "element-width": {"name": "Element - Width", "tip": "The width of the element (calculated value)"},
      "element-height": {"name": "Element - Height", "tip": "The height of the element (calculated value)"},
      "element-children-count": {"name": "Element - Number of Children", "tip": "Get the number of child elements of this element"},
      "element-index-of-selected-button": {"name": "Element - Index of the Selected Button", "tip": "Get the position of the selected button of the focused element\n-1 = does not exist\n0 = first button\n1 = second button\n......"},
      "transform-anchorX": {"name": "Transform - Anchor X", "tip": "The horizontal position of the anchor point in the element relative to the container"},
      "transform-anchorY": {"name": "Transform - Anchor Y", "tip": "The vertical position of the anchor point in the element relative to the container"},
      "transform-x": {"name": "Transform - X", "tip": "The horizontal position of the element within the container (pixel value)"},
      "transform-x2": {"name": "Transform - X2", "tip": "The horizontal position of the element within the container (container width ratio)"},
      "transform-y": {"name": "Transform - Y", "tip": "The vertical position of the element within the container (pixel value)"},
      "transform-y2": {"name": "Transform - Y2", "tip": "The vertical position of the element within the container (container height ratio)"},
      "transform-width": {"name": "Transform - Width", "tip": "The width of the element within the container (pixel value)"},
      "transform-width2": {"name": "Transform - Width2", "tip": "The width of the element within the container (container width ratio)"},
      "transform-height": {"name": "Transform - Height", "tip": "The height of the element within the container (pixel value)"},
      "transform-height2": {"name": "Transform - Height2", "tip": "The height of the element within the container (container height ratio)"},
      "transform-rotation": {"name": "Transform - Rotation", "tip": "The rotation angle of the element around its anchor point, 0 degrees = right, clockwise rotation"},
      "transform-scaleX": {"name": "Transform - Scale X", "tip": "The horizontal scaling factor of the element"},
      "transform-scaleY": {"name": "Transform - Scale Y", "tip": "The vertical scaling factor of the element"},
      "transform-skewX": {"name": "Transform - Skew X", "tip": "The horizontal skewing factor of the element"},
      "transform-skewY": {"name": "Transform - Skew Y", "tip": "The vertical skewing factor of the element"},
      "transform-opacity": {"name": "Transform - Opacity", "tip": "Adjust the opacity of the element"},
      "window-visibleGridColumns": {"name": "Window - Visible Grid Columns", "tip": "The number of unhidden grid columns"},
      "window-visibleGridRows": {"name": "Window - Visible Grid Rows", "tip": "The number of unhidden grid rows"},
      "text-textWidth": {"name": "Text - Text Width", "tip": "The real width of the rendered text"},
      "text-textHeight": {"name": "Text - Text Height", "tip": "The real height of the rendered text"},
      "textBox-number": {"name": "Text Box - Number", "tip": "Read the numeric content of the text box"},
      "dialogBox-printEndX": {"name": "Dialog Box - Print End X", "tip": "The horizontal position of the text at the end of printing"},
      "dialogBox-printEndY": {"name": "Dialog Box - Print End Y", "tip": "The vertical position of the text at the end of printing"}
    }},
    "setNumber-operand-element-element": {"label": "Element", "tip": "Retrieve relevant data of this element"},
    "setNumber-operand-common-variable": {"label": "Variable", "tip": "Read data from a variable"},
    "setNumber-operand-common-actor": {"label": "Actor", "tip": "Retrieve relevant data of this actor"},
    "setNumber-operand-common-skill": {"label": "Skill", "tip": "Retrieve relevant data of this skill"},
    "setNumber-operand-common-state": {"label": "State", "tip": "Retrieve relevant data of this state"},
    "setNumber-operand-common-equipment": {"label": "Equipment", "tip": "Retrieve relevant data of this equipment"},
    "setNumber-operand-common-item": {"label": "Item", "tip": "Retrieve relevant data of this item"},
    "setNumber-operand-common-trigger": {"label": "Trigger", "tip": "Retrieve relevant data of this trigger"},
    "setNumber-operand-common-tilemap": {"label": "Tilemap", "tip": "Retrieve relevant data of this tilemap"},
    "setNumber-operand-object-itemId": {"label": "Item", "tip": "Input the item file ID"},
    "setNumber-operand-object-equipmentId": {"label": "Equipment", "tip": "Input the equipment file ID"},
    "setNumber-operand-string-search": {"label": "Search String", "tip": "Target string for search location"},
    "setNumber-operand-math-decimals": {"label": "Decimal Places", "tip": "If 0, round to integer, otherwise round to the specified number of decimal places"},
    "setNumber-operand-math-min": {"label": "Min", "tip": "The generated random integer must be greater than or equal to this value"},
    "setNumber-operand-math-max": {"label": "Max", "tip": "The generated random integer must be less than or equal to this value"},
    "setNumber-operand-math-startPosition": {"label": "Start Position", "tip": "Get the starting position"},
    "setNumber-operand-math-endPosition": {"label": "End Position", "tip": "Get the end position"},
    "setNumber-operand-cooldown-key": {"label": "Cooldown Key", "tip": "Select a cooldown key"},
    "setNumber-operand-list-index": {"label": "Index", "tip": "Read the value at position N (0, 1, 2, ...) in the list"},
    "setNumber-operand-parameter-key": {"label": "Param Name", "tip": "Get the value of this parameter"},
    "setNumber-operand-script": {"label": "Script", "tip": "Execute JavaScript and get the return value"},
    "setNumber-operand-other-data": {"label": "Data", "tip": "Retrieve other numeric data", "options": {
      "trigger-button": {"name": "Event Mouse Button", "tip": "Get the button code of the currently triggered \"mouse event\"\n0: Left button\n1: Middle button\n2: Right button\n3: Back button\n4: Forward button"},
      "trigger-wheel-y": {"name": "Event Wheel Delta Y", "tip": "Get the DeltaY of the currently triggered \"wheel event\"\nLess than 0: Slide up\nGreater than 0: Slide down"},
      "trigger-gamepad-button": {"name": "Event Gamepad Button", "tip": "Get the button code of the currently triggered \"gamepad event\"\nValid values: 0/1/2/3...\nInvalid value: -1"},
      "gamepad-left-stick-angle": {"name": "Gamepad Left Stick Angle", "tip": "Get the left stick angle of the currently triggered \"gamepad event\"\n0 degrees = right, rotates clockwise\nValid values: [0, 360)\nInvalid value: -1"},
      "gamepad-right-stick-angle": {"name": "Gamepad Right Stick Angle", "tip": "Get the right stick angle of the currently triggered \"gamepad event\"\n0 degrees = right, rotates clockwise\nValid values: [0, 360)\nInvalid value: -1"},
      "mouse-screen-x": {"name": "Mouse Screen X", "tip": "Horizontal position of the mouse in the screen in pixels"},
      "mouse-screen-y": {"name": "Mouse Screen Y", "tip": "Vertical position of the mouse in the screen in pixels"},
      "mouse-ui-x": {"name": "Mouse UI X", "tip": "Horizontal position of the mouse within the root element in pixels\nMouse UI X = Mouse Screen X / UI Scale"},
      "mouse-ui-y": {"name": "Mouse UI Y", "tip": "Vertical position of the mouse within the root element in pixels\nMouse UI Y = Mouse Screen Y / UI Scale"},
      "mouse-scene-x": {"name": "Mouse Scene X", "tip": "Horizontal position of the mouse in the scene"},
      "mouse-scene-y": {"name": "Mouse Scene Y", "tip": "Vertical position of the mouse in the scene"},
      "touch-screen-x": {"name": "Touch Screen X", "tip": "Horizontal position of the touch in the screen in pixels"},
      "touch-screen-y": {"name": "Touch Screen Y", "tip": "Vertical position of the touch in the screen in pixels"},
      "touch-ui-x": {"name": "Touch UI X", "tip": "Horizontal position of the touch within the root element in pixels\nTouch UI X = Touch Screen X / UI Scale"},
      "touch-ui-y": {"name": "Touch UI Y", "tip": "Vertical position of the touch within the root element in pixels\nTouch UI Y = Touch Screen Y / UI Scale"},
      "touch-scene-x": {"name": "Touch Scene X", "tip": "Horizontal position of the touch in the scene"},
      "touch-scene-y": {"name": "Touch Scene Y", "tip": "Vertical position of the touch in the scene"},
      "virtual-axis-x": {"name": "Virtual Axis X", "tip": "The horizontal distance from a point to the center of a circle with radius 1\nAffected by the left and right arrow keys\nRange: [-1, 1]"},
      "virtual-axis-y": {"name": "Virtual Axis Y", "tip": "The vertical distance from a point to the center of a circle with radius 1\nAffected by the up and down arrow keys\nRange: [-1, 1]"},
      "virtual-axis-angle": {"name": "Virtual Axis Angle", "tip": "The angle from the center to the virtual axis (X, Y)\nSet to an invalid value after entering the dead zone\n0 degrees = right, rotates clockwise\nValid range: [0, 360)\nInvalid value: -1"},
      "start-position-x": {"name": "Start Position X", "tip": "Set via \"Scene Stage -> Context Menu -> Set Initial Position\""},
      "start-position-y": {"name": "Start Position Y", "tip": "Set via \"Scene Stage -> Context Menu -> Set Initial Position\""},
      "camera-x": {"name": "Camera X", "tip": "Horizontal position of the center of the camera"},
      "camera-y": {"name": "Camera Y", "tip": "Vertical position of the center of the camera"},
      "camera-zoom": {"name": "Camera Zoom", "tip": "The final zoom ratio of the camera (raw zoom ratio * scene scale)"},
      "raw-camera-zoom": {"name": "Raw Camera Zoom", "tip": "The camera's own zoom ratio, not affected by the scene scale"},
      "screen-width": {"name": "Screen Width", "tip": "The width of the game resolution"},
      "screen-height": {"name": "Screen Height", "tip": "The height of the game resolution"},
      "scene-width": {"name": "Scene Width", "tip": "The number of horizontal grids in the scene"},
      "scene-height": {"name": "Scene Height", "tip": "The number of vertical grids in the scene"},
      "scene-scale": {"name": "Scene Scale", "tip": "The current scene scale"},
      "ui-scale": {"name": "UI Scale", "tip": "The current UI scale"},
      "play-time": {"name": "Play Time", "tip": "The player's total play time, will be saved, and cleared when the game is reset."},
      "elapsed-time": {"name": "Elapsed Time", "tip": "The running time from starting the game to now, it will be cleared after exiting the game"},
      "delta-time": {"name": "Delta Time", "tip": "The elapsed time from the end of the previous frame to the beginning of the current frame in milliseconds,\nmay be 16.66 at 60FPS. If the game speed is 2, the delta time is scaled to 2 times, which is 33.33ms"},
      "raw-delta-time": {"name": "Raw Delta Time", "tip": "Delta time without scaling"},
      "timestamp": {"name": "Get Timestamp", "tip": "Generate a number for recording the current date in this computer"},
      "party-version": {"name": "Party Version", "tip": "It is incremented when party members change"},
      "party-member-count": {"name": "Number of Party Members", "tip": "The number of members of the player's party"},
      "actor-count": {"name": "Number of Actors in the Scene", "tip": "The number of actors in the specified team in the current scene"},
      "latest-item-increment": {"name": "Latest Item Increment", "tip": "Refreshed when any actor gains items, used to read the number of items gained"},
      "latest-money-increment": {"name": "Latest Money Increment", "tip": "Refreshed when any actor gains money, used to read the number of money gained"},
      "loader-loaded-bytes": {"name": "Loader - Loaded Bytes", "tip": "Counts the loaded bytes of all files being loaded in the background"},
      "loader-total-bytes": {"name": "Loader - Total Bytes", "tip": "Counts the total bytes of all files being loaded in the background"},
      "loader-completion-progress": {"name": "Loader - Completion Progress", "tip": "Completion progress = Loaded Bytes / Total Bytes"}
    }},
    "setNumber-operand-other-touchId": {"label": "Touch Id", "tip": "Input touch point id"},
    "setNumber-operand-other-teamId": {"label": "Team", "tip": "Input Team Id"},

    "[comment]": "********** Command - Set String **********",
    "setString": {"title": "Set String"},
    "setString-variable": {"label": "Variable"},
    "setString-operation": {"label": "Operation", "tip": "String operation", "options": {
      "set": {"name": "Set", "tip": "Set to operation value"},
      "add": {"name": "Add", "tip": "Add operation value to the end"}
    }},
    "setString-operand-type": {"label": "Type", "tip": "Select method to get the string", "options": {
      "constant": {"name": "Constant", "tip": "Fixed value"},
      "variable": {"name": "Variable", "tip": "Read data from a variable"},
      "template": {"name": "Template String", "tip": "Can insert variable tags"},
      "string": {"name": "String Method", "tip": "String method"},
      "attribute": {"name": "Attribute Key", "tip": "Get the key of a specified attribute"},
      "enum": {"name": "Enumeration", "tip": "Get the value of a specified enum"},
      "object": {"name": "Object", "tip": "Object method"},
      "element": {"name": "Element", "tip": "Element method"},
      "list": {"name": "List Item", "tip": "Read list from a variable and fetch the boolean value at the specified position in the list"},
      "parameter": {"name": "Parameter", "tip": "Parameters input in 'Display Text' and 'Display Options' commands"},
      "script": {"name": "Script", "tip": "Execute Javascript and get the return value"},
      "other": {"name": "Other", "tip": "Other methods"}
    }},
    "setString-operand-common-value": {"label": "String"},
    "setString-operand-string-method": {"label": "String Method", "tip": "Choose a string method to get the value", "options": {
      "char": {"name": "Char", "tip": "Get the character at the specified position from the string (the first character is at position 0)"},
      "slice": {"name": "Slice", "tip": "Get the substring from the string at the specified position"},
      "pad-start": {"name": "Pad Start", "tip": "Pad a number or string to a specified length, e.g., pad the number 1 with '0' to length 2, and return '01'"},
      "replace": {"name": "Replace", "tip": "Replace the first matching string content\n'ab' in 'abcdabcd' with '1' to return '1cdabcd'"},
      "replace-all": {"name": "Replace All", "tip": "Replace all matching string contents\n'ab' in 'abcdabcd' with '1' to return '1cd1cd'"}
    }},
    "setString-operand-common-variable": {"label": "Variable", "tip": "Read data from a variable"},
    "setString-operand-string-char-index": {"label": "Index", "tip": "Position of the target character"},
    "setString-operand-string-slice-begin": {"label": "Begin Index", "tip": "Starting position of the substring"},
    "setString-operand-string-slice-end": {"label": "End Index", "tip": "Ending position of the substring"},
    "setString-operand-string-pad-start-length": {"label": "Target Length", "tip": "Length of the padded string"},
    "setString-operand-string-pad-start-pad": {"label": "Pad String", "tip": "Character to pad on the left side of the string with insufficient length"},
    "setString-operand-string-replace-pattern": {"label": "Substring", "tip": "Content of the substring to search for"},
    "setString-operand-string-replace-replacement": {"label": "Replacement", "tip": "Content to replace the found substring"},
    "setString-operand-attribute-attributeId": {"label": "Attribute Key", "tip": "Get the key of this attribute"},
    "setString-operand-enum-stringId": {"label": "Enum String", "tip": "Get the value of this enum"},
    "setString-operand-object-property": {"label": "Property", "tip": "Get data related to the object", "options": {
      "actor-team-id": {"name": "Actor - Team ID", "tip": "The ID of the team the actor is in, 16 characters"},
      "actor-file-id": {"name": "Actor - File ID", "tip": "Actor file ID, 16 characters"},
      "actor-animation-motion-name": {"name": "Actor - Anim Motion Name", "tip": "Enumeration value of the current motion of the actor animation"},
      "skill-file-id": {"name": "Skill - File ID", "tip": "Skill file ID, 16 characters"},
      "trigger-file-id": {"name": "Trigger - File ID", "tip": "Trigger file ID, 16 characters"},
      "state-file-id": {"name": "State - File ID", "tip": "State file ID, 16 characters"},
      "equipment-file-id": {"name": "Equipment - File ID", "tip": "Equipment file ID, 16 characters"},
      "equipment-slot": {"name": "Equipment - Slot", "tip": "Enumeration value of equipment slot"},
      "item-file-id": {"name": "Item - File ID", "tip": "Item file ID, 16 characters"},
      "file-id": {"name": "File - ID", "tip": "ID of any specified file, 16 characters"}
    }},
    "setString-operand-element-property": {"label": "Property", "tip": "Get the attributes of the element", "options": {
      "text-content": {"name": "Text - Content", "tip": "Content of the text element"},
      "textBox-text": {"name": "Text Box - Text", "tip": "Text content of the text box element"},
      "dialogBox-content": {"name": "Dialog Box - Content", "tip": "Content of the dialog box element"}
    }},
    "setString-operand-element-element": {"label": "Element", "tip": "Get data related to this element"},
    "setString-operand-common-actor": {"label": "Actor", "tip": "Get data related to this actor"},
    "setString-operand-common-skill": {"label": "Skill", "tip": "Get data related to this skill"},
    "setString-operand-common-trigger": {"label": "Trigger", "tip": "Get data related to this trigger"},
    "setString-operand-common-state": {"label": "State", "tip": "Get data related to this state"},
    "setString-operand-common-equipment": {"label": "Equipment", "tip": "Get data related to this equipment"},
    "setString-operand-common-item": {"label": "Item", "tip": "Get data related to this item"},
    "setString-operand-object-fileId": {"label": "File", "tip": "Get the ID of this file"},
    "setString-operand-list-index": {"label": "Index", "tip": "Read the value at the Nth position in the list (0, 1, 2, ...)"},
    "setString-operand-parameter-key": {"label": "Param Name"},
    "setString-operand-script": {"label": "Script", "tip": "Execute Javascript and get the return value"},
    "setString-operand-other-data": {"label": "Data", "tip": "Other game data", "options": {
      "trigger-key": {"name": "Event Trigger Key", "tip": "Get the key code of the currently triggered 'keyboard event'"},
      "start-position-scene-id": {"name": "Start Position - Scene ID", "tip": "The ID of the initial scene file, 16 characters\nScene Stage -> Context Menu -> Set Initial Position"},
      "showText-content": {"name": "Show Text - Content", "tip": "After calling the <Show Text> command, you can read the content of the command"},
      "showChoices-content": {"name": "Show Choices - Content", "tip": "After calling the <Show Choices> command, you can read the content of the command"},
      "parse-timestamp": {"name": "Parse Timestamp", "tip": "Parse the timestamp obtained from <Set Number> into a date string in the specified format"},
      "screenshot": {"name": "Screenshot(Base64)", "tip": "Capture the current game screen, convert it to Base64 string format.\nLoad it into the image element by calling <Load Image> command"},
      "game-language": {"name": "GameLanguage", "tip": "Get the current game language"}
    }},
    "setString-operand-showChoices-content-choiceIndex": {"label": "Choice Index", "tip": "Read the content of the Nth (0, 1, 2, ...) option"},
    "setString-operand-parse-timestamp-variable": {"label": "Timestamp", "tip": "Read timestamp from variable"},
    "setString-operand-parse-timestamp-format": {"label": "Date Format", "tip": "{Y}: Year\n{M}: Month\n{D}: Day\n{h}: Hour\n{m}: Minute\n{s}: Second"},
    "setString-operand-screenshot-width": {"label": "Image Width", "tip": "Width of the screenshot"},
    "setString-operand-screenshot-height": {"label": "Image Height", "tip": "Height of the screenshot"},

    "[comment]": "********** Command - Set Object **********",
    "setObject": {"title": "Set Object"},
    "setObject-variable": {"label": "Variable", "tip": "Target variable to write to"},
    "setObject-operand-type": {"label": "Type", "tip": "Choose which object to retrieve", "options": {
      "none": {"name": "Null", "tip": "Nonexistent object"},
      "actor": {"name": "Actor", "tip": "Get an actor"},
      "skill": {"name": "Skill", "tip": "Get a skill"},
      "state": {"name": "State", "tip": "Get a state"},
      "equipment": {"name": "Equipment", "tip": "Get an equipment"},
      "item": {"name": "Item", "tip": "Get an item"},
      "trigger": {"name": "Trigger", "tip": "Get a trigger"},
      "light": {"name": "Light", "tip": "Get a light source"},
      "object": {"name": "Object", "tip": "Get a scene object of any type"},
      "element": {"name": "Element", "tip": "Get an element"},
      "variable": {"name": "Variable", "tip": "Read an object from a variable"},
      "list": {"name": "List Item", "tip": "Read a list from a variable and fetch the object at a specified position"}
    }},
    "setObject-operand-actor": {"label": "Actor", "tip": "Get this actor object"},
    "setObject-operand-skill": {"label": "Skill", "tip": "Get this skill object"},
    "setObject-operand-state": {"label": "State", "tip": "Get this state object"},
    "setObject-operand-equipment": {"label": "Equipment", "tip": "Get this equipment object"},
    "setObject-operand-item": {"label": "Item", "tip": "Get this item object"},
    "setObject-operand-trigger": {"label": "Trigger", "tip": "Get this trigger object"},
    "setObject-operand-light": {"label": "Light", "tip": "Get this light source object"},
    "setObject-operand-object": {"label": "Object", "tip": "Get any scene object"},
    "setObject-operand-element": {"label": "Element", "tip": "Get this element object"},
    "setObject-operand-variable": {"label": "Variable", "tip": "Read an object from a variable"},
    "setObject-operand-list-index": {"label": "Index", "tip": "Read the Nth (0, 1, 2, ...) object in the list"},

    "[comment]": "********** Command - Set List **********",
    "setList": {"title": "Set List"},
    "setList-variable": {"label": "Variable", "tip": "Target variable to write to"},
    "setList-operation": {"label": "Operation", "tip": "How to write data to the list", "options": {
      "set-empty": {"name": "Set to Empty", "tip": "Initialize a list with no values"},
      "set-numbers": {"name": "Set Number List", "tip": "Initialize a list with numbers"},
      "set-strings": {"name": "Set String List", "tip": "Initialize a list with strings"},
      "set-boolean": {"name": "Set Boolean", "tip": "Set the list item at the specified index to a boolean"},
      "set-number": {"name": "Set Number", "tip": "Set the list item at the specified index to a number"},
      "set-string": {"name": "Set String", "tip": "Set the list item at the specified index to a string"},
      "set-variable": {"name": "Set Variable", "tip": "Set the list item at the specified index to the value read from a variable"},
      "split-string": {"name": "Split String", "tip": "Split a string by the specified delimiter to generate a list"},
      "push": {"name": "Add Item", "tip": "Add the value read from the variable to the end of the list"},
      "remove": {"name": "Remove Item", "tip": "Remove the value read from the variable from the list"},
      "get-attribute-names": {"name": "Get Attribute Names", "tip": "Get all names in the attribute group and generate a list"},
      "get-attribute-keys": {"name": "Get Attribute Keys", "tip": "Get all keys in the attribute group and generate a list"},
      "get-enum-names": {"name": "Get Enum Names", "tip": "Get all names in the enumeration group and generate a list"},
      "get-enum-values": {"name": "Get Enum Values", "tip": "Get all values in the enumeration group and generate a list"},
      "get-actor-targets": {"name": "Get Actor Targets", "tip": "Get all target actors in the actor target pool and generate a list"}
    }},
    "setList-numbers": {"label": "Numbers", "tip": "Initialize a number list"},
    "setList-strings": {"label": "Strings", "tip": "Initialize a string list"},
    "setList-index": {"label": "Index", "tip": "Read a list from the target variable and write data at this position"},
    "setList-boolean": {"label": "Boolean", "tip": "Write a boolean value to the list"},
    "setList-number": {"label": "Number", "tip": "Write a number to the list"},
    "setList-string": {"label": "String", "tip": "Write a string to the list"},
    "setList-operand": {"label": "Variable", "tip": "Read data from a variable"},
    "setList-separator": {"label": "Separator", "tip": "Split the read string by a specified delimiter to generate a list"},
    "setList-attribute-groupId": {"label": "Attribute Group", "tip": "Select an attribute group"},
    "setList-enum-groupId": {"label": "Enum Group", "tip": "Select an enum group"},
    "setList-actor": {"label": "Actor", "tip": "Select an actor object"},

    "[comment]": "********** Command - Delete Variable **********",
    "deleteVariable": {"title": "Delete Variable"},
    "deleteVariable-variable": {"label": "Variable", "tip": "Delete this variable"},

    "[comment]": "********** Command - If **********",
    "if": {"title": "If"},
    "if-branches": {"label": "Branches"},
    "if-else-label": {"content": "Else", "tip": "If none of the branch conditions are satisfied, enter the 'Else Branch'"},
    "if-branch": {"title": "Branch"},
    "if-branch-mode": {"label": "Mode", "tip": "Condition Mode", "options": {"all": "Meet All", "any": "Meet Any"}},
    "if-branch-conditions": {"label": "Conditions"},
    "if-condition": {"title": "Condition"},
    "if-condition-type": {"label": "Condition Type", "tip": "Select the related condition type", "options": {
      "boolean": "Boolean",
      "number": "Number",
      "string": "String",
      "object": "Object",
      "actor": "Actor",
      "element": "Element",
      "keyboard": "Keyboard",
      "gamepad": "Gamepad",
      "mouse": "Mouse",
      "list": "List",
      "other": "Other"
    }},
    "if-condition-common-variable": {"label": "Variable", "tip": "Read data from a variable"},
    "if-condition-boolean-operation": {"label": "Operation", "tip": "Boolean operation", "options": {
      "equal": {"name": "==", "tip": "Equal"},
      "unequal": {"name": "!=", "tip": "Not Equal"}
    }},
    "if-condition-boolean-operand-type": {"label": "Operand Type", "tip": "Boolean operation target", "options": {
      "none": {"name": "Null", "tip": "No valid value exists"},
      "constant": {"name": "Constant", "tip": "Fixed value"},
      "variable": {"name": "Variable", "tip": "Read boolean value from variable"}
    }},
    "if-condition-boolean-constant-value": {"label": "Constant"},
    "if-condition-number-operation": {"label": "Operation", "tip": "Number operation", "options": {
      "equal": {"name": "==", "tip": "Equal"},
      "unequal": {"name": "!=", "tip": "Not Equal"},
      "greater-or-equal": {"name": ">=", "tip": "Greater than or Equal"},
      "less-or-equal": {"name": "<=", "tip": "Less than or Equal"},
      "greater": {"name": ">", "tip": "Greater than"},
      "less": {"name": "<", "tip": "Less than"}
    }},
    "if-condition-number-operand-type": {"label": "Operand Type", "tip": "Number operation target", "options": {
      "none": {"name": "Null", "tip": "No valid value exists"},
      "constant": {"name": "Constant", "tip": "Fixed value"},
      "variable": {"name": "Variable", "tip": "Read number value from variable"}
    }},
    "if-condition-number-constant-value": {"label": "Constant", "tip": "Fixed value"},
    "if-condition-string-operation": {"label": "Operation", "tip": "String operation", "options": {
      "equal": {"name": "==", "tip": "Equal"},
      "unequal": {"name": "!=", "tip": "Not Equal"},
      "include": {"name": "Include", "tip": "Includes specified string"},
      "exclude": {"name": "Exclude", "tip": "Does not include specified string"}
    }},
    "if-condition-string-operand-type": {"label": "Operand Type", "tip": "String operation target", "options": {
      "none": {"name": "Null", "tip": "No valid value exists"},
      "constant": "Constant",
      "variable": "Variable",
      "enum": "Enumeration"
    }},
    "if-condition-string-constant-value": {"label": "Constant", "tip": "Fixed value"},
    "if-condition-string-enum-stringId": {"label": "Enum String", "tip": "Get the value of this enum"},
    "if-condition-object-operation": {"label": "Operation", "tip": "Object operation", "options": {
      "is-actor": "Is Actor",
      "is-skill": "Is Skill",
      "is-state": "Is State",
      "is-equipment": "Is Equipment",
      "is-item": "Is Item",
      "is-trigger": "Is Trigger",
      "is-light": "Is Light",
      "is-element": "Is Element"
    }},
    "if-condition-object-operand-type": {"label": "Operand Type", "tip": "Object operation target", "options": {
      "none": {"name": "Null", "tip": "No valid value exists"},
      "actor": "Actor",
      "skill": "Skill",
      "state": "State",
      "equipment": "Equipment",
      "item": "Item",
      "trigger": "Trigger",
      "light": "Light",
      "element": "Element",
      "variable": "Variable"
    }},
    "if-condition-list-operation": {"label": "Operation", "tip": "List operation", "options": {
      "include": "Include",
      "exclude": "Exclude"
    }},
    "if-condition-operand-variable": {"label": "Variable", "tip": "Read data from variable"},
    "if-condition-common-actor": {"label": "Actor", "tip": "Actor accessor"},
    "if-condition-common-skill": {"label": "Skill", "tip": "Skill accessor"},
    "if-condition-common-state": {"label": "State", "tip": "State accessor"},
    "if-condition-common-equipment": {"label": "Equipment", "tip": "Equipment accessor"},
    "if-condition-common-item": {"label": "Item", "tip": "Item accessor"},
    "if-condition-common-trigger": {"label": "Trigger", "tip": "Trigger accessor"},
    "if-condition-common-light": {"label": "Light", "tip": "Light accessor"},
    "if-condition-common-element": {"label": "Element", "tip": "Element accessor"},
    "if-condition-actor-operation": {"label": "Operation", "tip": "Actor operation", "options": {
      "present-active": "Present and Active",
      "present": "Present",
      "absent": "Absent",
      "active": "Active",
      "inactive": "Inactive",
      "has-targets": "Has Targets",
      "has-no-targets": "Has No Targets",
      "in-screen": "In Screen",
      "is-player": "Is Player Actor",
      "is-member": "Is Party Member",
      "has-skill": "Has Skill",
      "has-state": "Has State",
      "has-items": "Has Items",
      "has-equipments": "Has Equipments",
      "has-skill-shortcut": "Has Skill Shortcut",
      "has-item-shortcut": "Has Item Shortcut",
      "equipped": "Equipped",
      "is-teammate": "Is a Teammate of Actor ...",
      "is-friend": "Is a Friend of Actor ...",
      "is-enemy": "Is an Enemy of Actor ...",
      "is-team-member": "Is a Member of Team ...",
      "is-team-friend": "Is a Friend of Team ...",
      "is-team-enemy": "Is an Enemy of Team ..."
    }},
    "if-condition-actor-skillId": {"label": "Skill", "tip": "Specify the skill file ID"},
    "if-condition-actor-stateId": {"label": "State", "tip": "Specify the state file ID"},
    "if-condition-actor-itemId": {"label": "Item", "tip": "Specify the item file ID"},
    "if-condition-actor-equipmentId": {"label": "Equipment", "tip": "Specify the equipment file ID"},
    "if-condition-actor-quantity": {"label": "Quantity", "tip": "Quantity of the item"},
    "if-condition-actor-shortcutKey": {"label": "Shortcut Key", "tip": "Shortcut key enumeration"},
    "if-condition-actor-target": {"label": "Target", "tip": "Get the actor object"},
    "if-condition-actor-teamId": {"label": "Team", "tip": "Specify the team file ID"},
    "if-condition-element-operation": {"label": "Operation", "tip": "Element operation", "options": {
      "present": "Present",
      "absent": "Absent",
      "visible": "Visible",
      "invisible": "Invisible",
      "is-focus": "Is Focus Element",
      "dialogbox-is-paused": "Dialog Box - is Paused",
      "dialogbox-is-updating": "Dialog Box - is Updating",
      "dialogbox-is-waiting": "Dialog Box - is Waiting",
      "dialogbox-is-complete": "Dialog Box - is Complete"
    }},
    "if-condition-keyboard-keycode": {"label": "Key Code", "tip": "Input keyboard key"},
    "if-condition-keyboard-state": {"label": "State", "tip": "Key state", "options": {
      "just-pressed": "Just Pressed",
      "just-released": "Just Released",
      "pressed": "Pressed",
      "released": "Released"
    }},
    "if-condition-gamepad-button": {"label": "Button", "tip": "Input gamepad button"},
    "if-condition-gamepad-state": {"label": "State", "tip": "Button state", "options": {
      "just-pressed": "Just Pressed",
      "just-released": "Just Released",
      "pressed": "Pressed",
      "released": "Released"
    }},
    "if-condition-mouse-button": {"label": "Button", "tip": "Select mouse button", "options": {
      "0": "Left Button",
      "1": "Middle Button",
      "2": "Right Button",
      "3": "Back Button",
      "4": "Forward Button"
    }},
    "if-condition-mouse-state": {"label": "State", "tip": "Button state", "options": {
      "just-pressed": "Just Pressed",
      "just-released": "Just Released",
      "pressed": "Pressed",
      "released": "Released"
    }},
    "if-condition-other-key": {"label": "Other", "tip": "Other condition options", "options": {
      "mouse-entered": "Mouse has entered the window",
      "mouse-left": "Mouse has left the window",
      "game-is-paused": "Game is paused",
      "game-is-not-paused": "Game is not paused",
      "scene-input-is-prevented": "Scene input is prevented",
      "scene-input-is-not-prevented": "Scene input is not prevented",
      "status-debugging": "In debugging mode",
      "status-deployed": "In deployed mode",
      "platform-windows": "Running on Windows platform",
      "platform-macos": "Running on macOS platform",
      "platform-mobile": "Running on a mobile platform"
    }},

    "[comment]": "********** Command - Switch **********",
    "switch": {"title": "Switch"},
    "switch-variable": {"label": "Variable", "tip": "Target variable for comparison"},
    "switch-branches": {"label": "Branches"},
    "switch-default-label": {"content": "Default", "tip": "If no conditions are met, it enters the 'default branch'"},
    "switch-branch": {"title": "Branch"},
    "switch-branch-conditions": {"label": "Cases"},
    "switch-condition": {"title": "Condition"},
    "switch-condition-type": {"label": "Condition Type", "tip": "Select the related condition by category", "options": {
      "none": {"name": "Null", "tip": "No valid value exists"},
      "boolean": "Boolean",
      "number": "Number",
      "string": "String",
      "attribute": "Attribute Key",
      "enum": "Enumeration",
      "keyboard": "Keyboard",
      "gamepad": "Gamepad",
      "mouse": "Mouse",
      "variable": "Variable"
    }},
    "switch-condition-boolean-value": {"label": "Boolean", "tip": "Fixed value"},
    "switch-condition-number-value": {"label": "Number", "tip": "Fixed value"},
    "switch-condition-string-value": {"label": "String", "tip": "Fixed value"},
    "switch-condition-attribute-attributeId": {"label": "Attribute Key", "tip": "Get the key of this attribute"},
    "switch-condition-enum-stringId": {"label": "Enum String", "tip": "Get the value of this enum"},
    "switch-condition-keyboard-keycode": {"label": "Key", "tip": "Input keyboard key"},
    "switch-condition-gamepad-button": {"label": "Button", "tip": "Input gamepad button"},
    "switch-condition-mouse-button": {"label": "Button", "tip": "Select mouse button", "options": {
      "0": "Left Button",
      "1": "Middle Button",
      "2": "Right Button",
      "3": "Back Button",
      "4": "Forward Button"
    }},
    "switch-condition-variable-variable": {"label": "Variable", "tip": "Read data from a variable"},

    "[comment]": "********** Command - Loop **********",
    "loop": {"title": "Loop"},
    "loop-mode": {"label": "Mode", "tip": "Condition mode", "options": {"all": "Meet All", "any": "Meet Any"}},
    "loop-conditions": {"label": "Conditions"},

    "[comment]": "********** Command - For Each **********",
    "forEach": {"title": "For Each"},
    "forEach-data": {"label": "Data", "tip": "Which data to get one by one", "options": {
      "list": {"name": "List Item", "tip": "Read the value in the list one by one"},
      "skill": {"name": "Skill", "tip": "Read all skills of the actor"},
      "state": {"name": "State", "tip": "Read all states of the actor"},
      "equipment": {"name": "Equipment Slot", "tip": "Read all equipments in the actor's slots"},
      "inventory": {"name": "Inventory", "tip": "Read all items and equipments in the actor's inventory"},
      "element": {"name": "Element", "tip": "Read all child elements of the specified element"},
      "member": {"name": "Party Member", "tip": "Read all members of the player party"},
      "attribute": {"name": "Attribute Key", "tip": "Read all attribute keys in the attribute group"},
      "enum": {"name": "Enumeration Value", "tip": "Read all enumeration values in the enumeration group"},
      "save": {"name": "Save Data", "tip": "Read indexes (0, 1, 2, ...) and read local variables from save data"},
      "touch": {"name": "Touch Point", "tip": "Read all existing touch point IDs (excluding ended touch points) from the touch event"},
      "changed-touch": {"name": "Changed Touch Point", "tip": "Read all touch point IDs that triggered the event from the touch event"}
    }},
    "forEach-list": {"label": "List Variable", "tip": "Get data from this list one by one"},
    "forEach-actor": {"label": "Actor", "tip": "Actor accessor"},
    "forEach-element": {"label": "Parent Element", "tip": "Get the child elements of this element one by one"},
    "forEach-attribute-groupId": {"label": "Attribute Group", "tip": "Get data from this attribute group one by one"},
    "forEach-enum-groupId": {"label": "Enum Group", "tip": "Get data from this enum group one by one"},
    "forEach-variable": {"label": "Write to Variable", "tip": "Write the read data to the specified variable"},
    "forEach-saveIndex": {"label": "Write Save Index", "tip": "Write the save index to the specified variable"},
    "forEach-touchId": {"label": "Write Touch Id", "tip": "Write the touch id to the specified variable"},

    "[comment]": "********** Command - Call Event **********",
    "callEvent": {"title": "Call Event"},
    "callEvent-type": {"label": "Type", "tip": "Which event do you want to call", "options": {
      "global": {"name": "Global", "tip": "Synchronously call the specified global event\nExecution will wait for the called event to finish before proceeding\nParameters can be passed and return values can be received"},
      "inherited": {"name": "Inherited", "tip": "Synchronously call the same type of event of the object being overridden during execution of this event.\nIf A inherits B, B inherits C, and they all have the same 'XX' event, only A's event is triggered.\nExecuting 'Call Inherited Event' in A will call B's event,\nexecuting in B will call C's event,\nif B lacks the event, A will directly call C's event.\nInheritance chain:\nA's registered event > A's scene event > A's event > B's event > C's event..."},
      "scene": {"name": "Scene", "tip": "Asynchronously call an event for the current scene"},
      "actor": {"name": "Actor", "tip": "Asynchronously call an event for the specified actor"},
      "skill": {"name": "Skill", "tip": "Asynchronously call an event for the specified skill"},
      "state": {"name": "State", "tip": "Asynchronously call an event for the specified state"},
      "equipment": {"name": "Equipment", "tip": "Asynchronously call an event for the specified equipment"},
      "item": {"name": "Item", "tip": "Asynchronously call an event for the specified item"},
      "light": {"name": "Light Source", "tip": "Asynchronously call an event for the specified light source"},
      "element": {"name": "Element", "tip": "Asynchronously call an event for the specified element"}
    }},
    "callEvent-actor": {"label": "Actor", "tip": "Call an event for this actor"},
    "callEvent-skill": {"label": "Skill", "tip": "Call an event for this skill"},
    "callEvent-state": {"label": "State", "tip": "Call an event for this state"},
    "callEvent-equipment": {"label": "Equipment", "tip": "Call an event for this equipment"},
    "callEvent-item": {"label": "Item", "tip": "Call an event for this item"},
    "callEvent-light": {"label": "Light Source", "tip": "Call an event for this light source"},
    "callEvent-element": {"label": "Element", "tip": "Call an event for this element"},
    "callEvent-eventId": {"label": "Event", "tip": "Specify event file ID"},
    "callEvent-eventType": {"label": "Event", "tip": "Choose the event type for the object"},

    "[comment]": "********** Command - Return **********",
    "return": {"title": "Return"},
    "return-type": {"label": "Return Type", "tip": "The type of value this event allows to return. It can be modified in the global event panel.", "options": {
      "none": {"name": "None", "tip": "Does not return any value"},
      "boolean": {"name": "Boolean", "tip": "Returns a boolean value"},
      "number": {"name": "Number", "tip": "Returns a numerical value"},
      "string": {"name": "String", "tip": "Returns a string"},
      "object": {"name": "Object", "tip": "Returns an object"},
      "actor": {"name": "Actor", "tip": "Returns an actor object"},
      "skill": {"name": "Skill", "tip": "Returns a skill object"},
      "state": {"name": "State", "tip": "Returns a state object"},
      "equipment": {"name": "Equipment", "tip": "Returns an equipment object"},
      "item": {"name": "Item", "tip": "Returns an item object"},
      "trigger": {"name": "Trigger", "tip": "Returns a trigger object"},
      "light": {"name": "Light", "tip": "Returns a light object"},
      "element": {"name": "Element", "tip": "Returns an element object"}
    }},
    "return-boolean": {"label": "Boolean", "tip": "Return this boolean value"},
    "return-number": {"label": "Number", "tip": "Return this number or variable"},
    "return-string": {"label": "String", "tip": "Return this string or variable"},
    "return-object": {"label": "Object", "tip": "Return the object read from this variable"},
    "return-actor": {"label": "Actor", "tip": "Return this actor"},
    "return-skill": {"label": "Skill", "tip": "Return this skill"},
    "return-state": {"label": "State", "tip": "Return this state"},
    "return-equipment": {"label": "Equipment", "tip": "Return this equipment"},
    "return-item": {"label": "Item", "tip": "Return this item"},
    "return-trigger": {"label": "Trigger", "tip": "Return this trigger"},
    "return-light": {"label": "Light", "tip": "Return this light"},
    "return-element": {"label": "Element", "tip": "Return this element"},

    "[comment]": "********** Command - Stop Event **********",
    "stopEvent": {"title": "Stop Event"},
    "stopEvent-type": {"label": "Type", "tip": "Which event to stop", "options": {
      "current": {"name": "Current Event", "tip": "Stop the currently executing event and its parent events that called it"},
      "global": {"name": "Global", "tip": "Stop all instances of the specified global event"},
      "scene": {"name": "Scene", "tip": "Stop all instances of the specified scene event type"},
      "actor": {"name": "Actor", "tip": "Stop all instances of the specified actor event type"},
      "skill": {"name": "Skill", "tip": "Stop all instances of the specified skill event type"},
      "state": {"name": "State", "tip": "Stop all instances of the specified state event type"},
      "equipment": {"name": "Equipment", "tip": "Stop all instances of the specified equipment event type\nOperation is invalid when the equipment no longer belongs to the actor"},
      "item": {"name": "Item", "tip": "Stop all instances of the specified item event type\nOperation is invalid when the item no longer belongs to the actor"},
      "light": {"name": "Light", "tip": "Stop all instances of the specified light source event type"},
      "element": {"name": "Element", "tip": "Stop all instances of the specified element event type"}
    }},
    "stopEvent-actor": {"label": "Actor", "tip": "Stop events for this actor"},
    "stopEvent-skill": {"label": "Skill", "tip": "Stop events for this skill"},
    "stopEvent-state": {"label": "State", "tip": "Stop events for this state"},
    "stopEvent-equipment": {"label": "Equipment", "tip": "Stop events for this equipment"},
    "stopEvent-item": {"label": "Item", "tip": "Stop events for this item"},
    "stopEvent-light": {"label": "Light Source", "tip": "Stop events for this light source"},
    "stopEvent-element": {"label": "Element", "tip": "Stop events for this element"},
    "stopEvent-eventId": {"label": "Event", "tip": "Specify event file ID"},
    "stopEvent-eventType": {"label": "Event", "tip": "Choose the event type for the object"},

    "[comment]": "********** Command - Register Event **********",
    "registerEvent": {"title": "Register Event"},
    "registerEvent-target": {"label": "Target", "tip": "The target object for registering/unloading operations", "options": {
      "global": {"name": "Global Event", "tip": "The newly registered global event will be appended to the existing event list\nIt will overwrite any previously registered event with the same key and stop the currently running instance of that event"},
      "actor": {"name": "Actor Event", "tip": "The newly registered actor event will overwrite the existing event of the same type\nIt will also stop the currently running instance of that event\nOverridden events can still be triggered using the 'Call Event' command"},
      "element": {"name": "Element Event", "tip": "The newly registered element event will overwrite the existing event of the same type\nIt will also stop the currently running instance of that event\nOverridden events can still be triggered using the 'Call Event' command"}
    }},
    "registerEvent-actor": {"label": "Actor", "tip": "The actor for registering/unloading the event"},
    "registerEvent-element": {"label": "Element", "tip": "The element for registering/unloading the event"},
    "registerEvent-operation": {"label": "Operation", "tip": "Choose whether to register or unload the event", "options": {
      "register": {"name": "Register", "tip": "Package the commands in the block below into a temporary event and add it to the object"},
      "unregister": {"name": "Unregister", "tip": "After unloading the registered event, it will no longer trigger and will stop execution"},
      "reset": {"name": "Reset", "tip": "Unload all registered events and stop any currently executing tasks"}
    }},
    "registerEvent-type": {"label": "Event", "tip": "Choose the event type for the object"},
    "registerEvent-priority": {"label": "Priority", "tip": "Trigger before element events, unaffected by \"Pause Game\" and \"Prevent Scene Input\" commands"},
    "registerEvent-tag": {"label": "Tag", "tip": "A label for unloading this event later"},

    "[comment]": "********** Command - Set Event **********",
    "setEvent": {"title": "Set Event"},
    "setEvent-operation": {"label": "Operation", "tip": "Event Operation", "options": {
      "stop-propagation": {"name": "Stop Propagation", "tip": "Generally used in element events, when the user clicks on an element, it will first trigger the click event on the element, and then trigger the click event of the parent element, passing up the layer, and when this operation is performed, it will stop passing."},
      "pause": {"name": "Pause and Save to Variable", "tip": "Executing this action pauses the currently executing event and saves the event to an object variable."},
      "continue": {"name": "Continue and Reset Variable", "tip": "Continue the paused event and set the variable to a \"none\" value."},
      "enable": {"name": "Enable Global Event", "tip": "Automatic triggering of the event will return to normal."},
      "disable": {"name": "Disable Global Event", "tip": "Will no longer automatically trigger the event (Key Down, Mouse Down, etc.)."},
      "highest-priority": {"name": "Set to Highest Priority", "tip": "Once the event is set to the highest priority, it can be triggered even when the game is paused."},
      "goto-choice-branch": {"name": "Go to Choice Branch", "tip": "You can enter the specified choice branch after calling the \"Show Choices\" command."}
    }},
    "setEvent-variable": {"label": "Variable", "tip": "Variable storing the event object"},
    "setEvent-eventId": {"label": "Event", "tip": "Specify the event file ID"},
    "setEvent-choiceIndex": {"label": "Choice Index", "tip": "Jump to the Nth (0, 1, 2, ...) choice branch"},

    "[comment]": "********** Command - Transition **********",
    "transition": {"title": "Transition"},
    "transition-variable": {"label": "Write to Variable", "tip": "Write the transition interpolation to this variable"},
    "transition-start": {"label": "Start Value", "tip": "The starting value for interpolation calculation"},
    "transition-end": {"label": "End Value", "tip": "The ending value for interpolation calculation"},

    "[comment]": "********** Command - Block **********",
    "block": {"title": "Block"},
    "block-note": {"placeholder": "Note", "tip": "Describe the purpose of this command block"},
    "block-asynchronous-label": {"content": "Asynchronous", "tip": "Enabled: Creates a new execution branch without blocking subsequent commands. It stops when the current event ends.\nDisabled: Executes the commands in the block synchronously without any additional operations."},

    "[comment]": "********** Command - Label **********",
    "label": {"title": "Label"},
    "label-name": {"label": "Label Name", "tip": "Create a label for jumping"},

    "[comment]": "********** Command - Jump to **********",
    "jumpTo": {"title": "Jump to"},
    "jumpTo-operation": {"label": "Operation", "tip": "Jump operation", "options": {
      "jump": {"name": "Jump to Label", "tip": "Jump to the specified label to continue execution"},
      "save-jump": {"name": "Save and Jump to Label", "tip": "Save the current position and jump to the specified label"},
      "return": {"name": "Return to the Saved Location", "tip": "Jump to the last saved location"}
    }},
    "jumpTo-label": {"label": "Label Name", "tip": "Jump to this label"},

    "[comment]": "********** Command - Wait **********",
    "wait": {"title": "Wait"},
    "wait-duration": {"label": "Duration", "tip": "The waiting time will be automatically converted to the number of frames.\nAnd the time less than 1 frame will become 1 frame."},

    "[comment]": "********** Command - Create Element **********",
    "createElement": {"title": "Create Element"},
    "createElement-operation": {"label": "Operation", "tip": "How to create elements and whether to specify a parent element", "options": {
      "append-all-to-root": {"name": "Append All to Root", "tip": "Create all elements in the UI file (except those that are disabled) and add them to the root container"},
      "append-one-to-root": {"name": "Append One to Root", "tip": "Create a specified element in the UI file (whether it is disabled or not) and add it to the root container"},
      "append-all-to-element": {"name": "Append All to Element", "tip": "Create all elements in the UI file (except those that are disabled) as children of the specified element"},
      "append-one-to-element": {"name": "Append One to Element", "tip": "Create a specified element in the UI file (whether it is disabled or not) as a child of the specified element"}
    }},
    "createElement-parent": {"label": "Parent", "tip": "Add the newly created element as a child of this element"},
    "createElement-uiId": {"label": "UI Elements", "tip": "Create all non-disabled elements in this UI file"},
    "createElement-presetId": {"label": "UI Element", "tip": "Create the specified element"},

    "[comment]": "********** Command - Set Image **********",
    "setImage": {"title": "Set Image"},
    "setImage-element": {"label": "Element"},
    "setImage-properties": {"label": "Properties"},
    "setImage-property": {"title": "Image Property"},
    "setImage-property-key": {"label": "Property", "options": {
      "image": "Image",
      "display": "Display",
      "flip": "Flip",
      "blend": "Blend",
      "shiftX": "Shift X",
      "shiftY": "Shift Y",
      "clip-0": "Clip - X",
      "clip-1": "Clip - Y",
      "clip-2": "Clip - Width",
      "clip-3": "Clip - Height"
    }},
    "setImage-property-image": {"label": "Image"},
    "setImage-property-display": {"label": "Display"},
    "setImage-property-flip": {"label": "Flip"},
    "setImage-property-blend": {"label": "Blend"},
    "setImage-property-shiftX": {"label": "Shift X"},
    "setImage-property-shiftY": {"label": "Shift Y"},
    "setImage-property-clip-0": {"label": "Clip - X"},
    "setImage-property-clip-1": {"label": "Clip - Y"},
    "setImage-property-clip-2": {"label": "Clip - Width"},
    "setImage-property-clip-3": {"label": "Clip - Height"},

    "[comment]": "********** Command - Load Image **********",
    "loadImage": {"title": "Load Image"},
    "loadImage-element": {"label": "Element", "tip": "Specify an image element"},
    "loadImage-type": {"label": "Type", "tip": "How to load the image", "options": {
      "actor-portrait": {"name": "Actor Portrait", "tip": "Load the actor's portrait into the element"},
      "skill-icon": {"name": "Skill Icon", "tip": "Load the skill's icon into the element"},
      "state-icon": {"name": "State Icon", "tip": "Load the state icon into the element"},
      "equipment-icon": {"name": "Equipment Icon", "tip": "Load the equipment's icon into the element"},
      "item-icon": {"name": "Item Icon", "tip": "Load the item's icon into the element"},
      "shortcut-icon": {"name": "Shortcut Icon", "tip": "Load the shortcut's icon into the element"},
      "base64": {"name": "Base64 Image", "tip": "Decode Base64 string to generate and load the image into the element"}
    }},
    "loadImage-actor": {"label": "Actor", "tip": "Load this actor's portrait"},
    "loadImage-skill": {"label": "Skill", "tip": "Load this skill's icon"},
    "loadImage-state": {"label": "State", "tip": "Load this state's icon"},
    "loadImage-equipment": {"label": "Equipment", "tip": "Load this equipment's icon"},
    "loadImage-item": {"label": "Item", "tip": "Load this item's icon"},
    "loadImage-key": {"label": "Shortcut Key", "tip": "Load this shortcut's icon"},
    "loadImage-variable": {"label": "Base64 Coding", "tip": "Decode Base64 image and load it"},

    "[comment]": "********** Command - Tint Image **********",
    "tintImage": {"title": "Tint Image"},
    "tintImage-element": {"label": "Element", "tip": "Specify an image element"},
    "tintImage-mode": {"label": "Mode", "tip": "Which parameters to change", "options": {
      "full": {"name": "Full Mode", "tip": "Change both RGB and grayscale"},
      "rgb": {"name": "RGB Mode", "tip": "Change RGB, keep grayscale"},
      "gray": {"name": "Grayscale Mode", "tip": "Change grayscale, keep RGB"}
    }},
    "tintImage-tint-0": {"label": "Tint - Red", "tip": "Input color (Red) + Hue (Red) = Output color (Red)"},
    "tintImage-tint-1": {"label": "Tint - Green", "tip": "Input color (Green) + Hue (Green) = Output color (Green)"},
    "tintImage-tint-2": {"label": "Tint - Blue", "tip": "Input color (Blue) + Hue (Blue) = Output color (Blue)"},
    "tintImage-tint-3": {"label": "Tint - Grayscale", "tip": "Grayscale is opposite to saturation; the higher the grayscale, the lower the saturation"},

    "[comment]": "********** Command - Set Text **********",
    "setText": {"title": "Set Text"},
    "setText-element": {"label": "Element", "tip": "Specify a text element"},
    "setText-properties": {"label": "Properties"},
    "setText-property": {"title": "Text Property"},
    "setText-property-key": {"label": "Property", "tip": "Text element's property", "options": {
      "content": "Content",
      "size": "Size",
      "lineSpacing": "Line Spacing",
      "letterSpacing": "Letter Spacing",
      "color": "Color",
      "font": "Font",
      "effect": "Effect",
      "blend": "Blend"
    }},
    "setText-property-content": {"label": "Content"},
    "setText-property-size": {"label": "Size"},
    "setText-property-lineSpacing": {"label": "Line Spacing"},
    "setText-property-letterSpacing": {"label": "Letter Spacing"},
    "setText-property-color": {"label": "Color"},
    "setText-property-font": {"label": "Font"},
    "setText-property-effect-type": {"label": "Effect"},
    "setText-property-effect-shadowOffsetX": {"label": "Shadow X"},
    "setText-property-effect-shadowOffsetY": {"label": "Shadow Y"},
    "setText-property-effect-strokeWidth": {"label": "Stroke Width"},
    "setText-property-effect-color": {"label": "Effect Color"},
    "setText-property-blend": {"label": "Blend"},

    "[comment]": "********** Command - Set Text Box **********",
    "setTextBox": {"title": "Set Text Box"},
    "setTextBox-element": {"label": "Element", "tip": "Specify a text box element"},
    "setTextBox-properties": {"label": "Properties"},
    "setTextBox-property": {"title": "Text Box Property"},
    "setTextBox-property-key": {"label": "Property", "tip": "Text box element's property", "options": {
      "type": "Type",
      "text": "Text",
      "number": "Number",
      "min": "Min",
      "max": "Max",
      "decimals": "Decimal Places",
      "color": "Color"
    }},
    "setTextBox-property-type": {"label": "Type"},
    "setTextBox-property-text": {"label": "Text"},
    "setTextBox-property-number": {"label": "Number"},
    "setTextBox-property-min": {"label": "Min"},
    "setTextBox-property-max": {"label": "Max"},
    "setTextBox-property-decimals": {"label": "Decimal Places"},
    "setTextBox-property-color": {"label": "Color"},

    "[comment]": "********** Command - Set Dialog Box **********",
    "setDialogBox": {"title": "Set Dialog Box"},
    "setDialogBox-element": {"label": "Element", "tip": "Specify a dialog box element"},
    "setDialogBox-properties": {"label": "Properties"},
    "setDialogBox-property": {"title": "Dialog Box Property"},
    "setDialogBox-property-key": {"label": "Property", "tip": "Dialog box element's property", "options": {
      "content": "Content",
      "interval": "Print Interval",
      "size": "Size",
      "lineSpacing": "Line Spacing",
      "letterSpacing": "Letter Spacing",
      "color": "Color",
      "font": "Font",
      "effect": "Effect",
      "blend": "Blend"
    }},
    "setDialogBox-property-content": {"label": "Content"},
    "setDialogBox-property-interval": {"label": "Print Interval"},
    "setDialogBox-property-size": {"label": "Size"},
    "setDialogBox-property-lineSpacing": {"label": "Line Spacing"},
    "setDialogBox-property-letterSpacing": {"label": "Letter Spacing"},
    "setDialogBox-property-color": {"label": "Color"},
    "setDialogBox-property-font": {"label": "Font"},
    "setDialogBox-property-effect-type": {"label": "Effect"},
    "setDialogBox-property-effect-shadowOffsetX": {"label": "Shadow X"},
    "setDialogBox-property-effect-shadowOffsetY": {"label": "Shadow Y"},
    "setDialogBox-property-effect-strokeWidth": {"label": "Stroke Width"},
    "setDialogBox-property-effect-color": {"label": "Effect Color"},
    "setDialogBox-property-blend": {"label": "Blend"},

    "[comment]": "********** Command - Control Dialog **********",
    "controlDialog": {"title": "Control Dialog"},
    "controlDialog-element": {"label": "Element", "tip": "Specify a dialog element"},
    "controlDialog-operation": {"label": "Operation", "tip": "Perform a dialog operation", "options": {
      "pause": {"name": "Pause Printing", "tip": "Pause if printing is in progress"},
      "continue": {"name": "Continue Printing", "tip": "Continue if printing is paused"},
      "print-immediately": {"name": "Print Immediately", "tip": "Print text until the current page is filled, or all characters are printed"},
      "print-next-page": {"name": "Print Next Page", "tip": "Erase the text on the current page and start printing the text on the next page"}
    }},

    "[comment]": "********** Command - Set Progress Bar **********",
    "setProgressBar": {"title": "Set Progress Bar"},
    "setProgressBar-element": {"label": "Element", "tip": "Specify a progress bar element"},
    "setProgressBar-properties": {"label": "Properties"},
    "setProgressBar-property": {"title": "Progress Bar Property"},
    "setProgressBar-property-key": {"label": "Property", "tip": "Property of the progress bar element", "options": {
      "image": "Image",
      "display": "Display",
      "blend": "Blend",
      "progress": "Progress",
      "clip-0": "Clip - X",
      "clip-1": "Clip - Y",
      "clip-2": "Clip - Width",
      "clip-3": "Clip - Height",
      "color-0": "Color - Red",
      "color-1": "Color - Green",
      "color-2": "Color - Blue",
      "color-3": "Color - Alpha"
    }},
    "setProgressBar-property-image": {"label": "Image"},
    "setProgressBar-property-display": {"label": "Display"},
    "setProgressBar-property-blend": {"label": "Blend"},
    "setProgressBar-property-progress": {"label": "Progress"},
    "setProgressBar-property-clip-0": {"label": "Clip - X"},
    "setProgressBar-property-clip-1": {"label": "Clip - Y"},
    "setProgressBar-property-clip-2": {"label": "Clip - Width"},
    "setProgressBar-property-clip-3": {"label": "Clip - Height"},
    "setProgressBar-property-color-0": {"label": "Color - Red"},
    "setProgressBar-property-color-1": {"label": "Color - Green"},
    "setProgressBar-property-color-2": {"label": "Color - Blue"},
    "setProgressBar-property-color-3": {"label": "Color - Alpha"},

    "[comment]": "********** Command - Set Button **********",
    "setButton": {"title": "Set Button"},
    "setButton-element": {"label": "Element", "tip": "Specify a button element"},
    "setButton-properties": {"label": "Properties"},
    "setButton-property": {"title": "Button Property"},
    "setButton-property-key": {"label": "Property", "tip": "Property of the button element", "options": {
      "normalImage": "NormalImage",
      "hoverImage": "HoverImage",
      "activeImage": "ActiveImage",
      "normalClip": "NormalClip",
      "hoverClip": "HoverClip",
      "activeClip": "ActiveClip",
      "normalTint": "NormalTint",
      "hoverTint": "HoverTint",
      "activeTint": "ActiveTint",
      "imageOpacity": "ImageOpacity",
      "content": "Content",
      "size": "Size",
      "letterSpacing": "Letter Spacing"
    }},
    "setButton-property-image": {"label": "Image"},
    "setButton-property-clip-box": {"label": "Clip"},
    "setButton-property-tint-box": {"label": "Tint"},
    "setButton-property-imageOpacity": {"label": "Opacity"},
    "setButton-property-content": {"label": "Content"},
    "setButton-property-size": {"label": "Size"},
    "setButton-property-letterSpacing": {"label": "Letter Spacing"},

    "[comment]": "********** Command - Control Button **********",
    "controlButton": {"title": "Control Button"},
    "controlButton-operation": {"label": "Operation", "tip": "Perform a button operation", "options": {
      "select-default": {"name": "Select Default Button", "tip": "Select the first button element among the descendant elements of the currently focused element"},
      "select": {"name": "Select Button", "tip": "Select the specified button element"},
      "hover-mode": {"name": "Display Hover Mode", "tip": "Set this button element to \"hover\" mode"},
      "active-mode": {"name": "Display Active Mode", "tip": "Set this button element to \"active\" mode"},
      "normal-mode": {"name": "Restore Display Mode", "tip": "Set this button element to \"normal\" mode"}
    }},
    "controlButton-element": {"label": "Element", "tip": "Specify a button element"},

    "[comment]": "********** Command - Set Animation **********",
    "setAnimation": {"title": "Set Animation"},
    "setAnimation-element": {"label": "Element", "tip": "Specify an animation element"},
    "setAnimation-properties": {"label": "Properties"},
    "setAnimation-property": {"title": "Animation Property"},
    "setAnimation-property-key": {"label": "Property", "tip": "Property of the animation element", "options": {
      "animation": "Animation",
      "animation-from-actor": "Animation(from actor)",
      "motion": "Motion",
      "angle": "Angle",
      "frame": "Frame"
    }},
    "setAnimation-property-animation": {"label": "Animation"},
    "setAnimation-property-actor": {"label": "Actor"},
    "setAnimation-property-motion": {"label": "Motion"},
    "setAnimation-property-angle": {"label": "Angle"},
    "setAnimation-property-frame": {"label": "Frame"},

    "[comment]": "********** Command - Set Video **********",
    "setVideo": {"title": "Set Video"},
    "setVideo-element": {"label": "Element", "tip": "Specify a video element"},
    "setVideo-properties": {"label": "Properties"},
    "setVideo-property": {"title": "Video Property"},
    "setVideo-property-key": {"label": "Property", "tip": "Property of the video element", "options": {
      "video": "Video",
      "playbackRate": "Playback Rate",
      "loop": "Loop",
      "flip": "Flip",
      "blend": "Blend"
    }},
    "setVideo-property-video": {"label": "Video"},
    "setVideo-property-playbackRate": {"label": "Playback Rate"},
    "setVideo-property-loop": {"label": "Loop"},
    "setVideo-property-flip": {"label": "Flip"},
    "setVideo-property-blend": {"label": "Blend"},

    "[comment]": "********** Command - Set Window **********",
    "setWindow": {"title": "Set Window"},
    "setWindow-element": {"label": "Element", "tip": "Specify a window element"},
    "setWindow-properties": {"label": "Properties"},
    "setWindow-property": {"title": "Window Property"},
    "setWindow-property-key": {"label": "Property", "tip": "Property of the window element", "options": {
      "scrollX": "Scroll X",
      "scrollY": "Scroll Y",
      "gridWidth": "Grid Width",
      "gridHeight": "Grid Height",
      "gridGapX": "Grid Gap X",
      "gridGapY": "Grid Gap Y",
      "paddingX": "Padding X",
      "paddingY": "Padding Y"
    }},
    "setWindow-property-scrollX": {"label": "Scroll X"},
    "setWindow-property-scrollY": {"label": "Scroll Y"},
    "setWindow-property-gridWidth": {"label": "Grid Width"},
    "setWindow-property-gridHeight": {"label": "Grid Height"},
    "setWindow-property-gridGapX": {"label": "Grid Gap X"},
    "setWindow-property-gridGapY": {"label": "Grid Gap Y"},
    "setWindow-property-paddingX": {"label": "Padding X"},
    "setWindow-property-paddingY": {"label": "Padding Y"},

    "[comment]": "********** Command - Wait For Video **********",
    "waitForVideo": {"title": "Wait For Video"},
    "waitForVideo-element": {"label": "Element", "tip": "Specify a video element"},

    "[comment]": "********** Command - Set Element **********",
    "setElement": {"title": "Set Element"},
    "setElement-element": {"label": "Element", "tip": "Specify any type of element"},
    "setElement-operation": {"label": "Operation", "tip": "Perform an element operation", "options": {
      "hide": {"name": "Hide", "tip": "When an element is hidden, it and its descendant elements (which actually still exist) will no longer be rendered."},
      "show": {"name": "Show", "tip": "Unhide the element."},
      "disable-pointer-events": {"name": "Disable Pointer Events", "tip": "Disable automatic triggering of all pointer events (including mouse-down events) for this element and its descendant elements."},
      "enable-pointer-events": {"name": "Enable Pointer Events", "tip": "Restore automatic triggering of element pointer events."},
      "skip-pointer-events": {"name": "Skip Pointer Events", "tip": "Disable automatic triggering of all pointer events for this element, but not for its descendant elements."},
      "move-to-first": {"name": "Move to First", "tip": "Move the element to the first position in the list of its parent's child elements (always obscured by other child elements, equivalent to being placed at the bottom)."},
      "move-to-last": {"name": "Move to Last", "tip": "Move the element to the last position in the list of its parent's child elements (always obscuring other children, equivalent to being placed on top)."}
    }},

    "[comment]": "********** Command - Nest Element **********",
    "nestElement": {"title": "Nest Element"},
    "nestElement-parent": {"label": "Parent Element", "tip": "Specify an element as the parent element"},
    "nestElement-child": {"label": "Child Element", "tip": "Add this element to the parent element as a child element"},

    "[comment]": "********** Command - Move Element **********",
    "moveElement": {"title": "Move Element"},
    "moveElement-element": {"label": "Element", "tip": "Specify any type of element"},
    "moveElement-properties": {"label": "Properties"},
    "moveElement-property": {"title": "Transform Property"},
    "moveElement-property-key": {"label": "Property", "options": {
      "anchorX": "Anchor X",
      "anchorY": "Anchor Y",
      "x": "X",
      "x2": "X2",
      "y": "Y",
      "y2": "Y2",
      "width": "Width",
      "width2": "Width2",
      "height": "Height",
      "height2": "Height2",
      "rotation": "Rotation",
      "scaleX": "Scale X",
      "scaleY": "Scale Y",
      "skewX": "Skew X",
      "skewY": "Skew Y",
      "opacity": "Opacity"
    }},
    "moveElement-property-anchorX": {"label": "Anchor X"},
    "moveElement-property-anchorY": {"label": "Anchor Y"},
    "moveElement-property-x": {"label": "X"},
    "moveElement-property-x2": {"label": "X2"},
    "moveElement-property-y": {"label": "Y"},
    "moveElement-property-y2": {"label": "Y2"},
    "moveElement-property-width": {"label": "Width"},
    "moveElement-property-width2": {"label": "Width2"},
    "moveElement-property-height": {"label": "Height"},
    "moveElement-property-height2": {"label": "Height2"},
    "moveElement-property-rotation": {"label": "Rotation"},
    "moveElement-property-scaleX": {"label": "Scale X"},
    "moveElement-property-scaleY": {"label": "Scale Y"},
    "moveElement-property-skewX": {"label": "Skew X"},
    "moveElement-property-skewY": {"label": "Skew Y"},
    "moveElement-property-opacity": {"label": "Opacity"},

    "[comment]": "********** Command - Delete Element **********",
    "deleteElement": {"title": "Delete Element"},
    "deleteElement-operation": {"label": "Operation", "tip": "Perform a delete operation", "options": {
      "delete-element": {"name": "Delete Element", "tip": "Delete the specified element"},
      "delete-children": {"name": "Delete Children", "tip": "Delete all child elements of the specified element"},
      "delete-all": {"name": "Delete All", "tip": "Delete all elements (reset UI)"}
    }},
    "deleteElement-element": {"label": "Element", "tip": "Perform operation on this element"},

    "[comment]": "********** Command - Set Pointer Event Root **********",
    "setPointerEventRoot": {"title": "Set Pointer Event Root"},
    "setPointerEventRoot-operation": {"label": "Operation", "tip": "Operations related to root element", "options": {
      "add": {"name": "Add Root Element", "tip": "Set an element as the root, only it and its descendant elements can trigger pointer events"},
      "remove": {"name": "Remove Root Element", "tip": "Remove the specified pointer event root element"},
      "remove-latest": {"name": "Remove The Latest Root Element", "tip": "Remove the latest pointer event root element"},
      "reset": {"name": "Reset", "tip": "Remove all pointer event root elements"}
    }},
    "setPointerEventRoot-element": {"label": "Element", "tip": "Perform operation on this element"},

    "[comment]": "********** Command - Set Focus **********",
    "setFocus": {"title": "Set Focus"},
    "setFocus-operation": {"label": "Operation", "tip": "Operations related to focus element", "options": {
      "add": {"name": "Add Focus", "tip": "Set an element as the focus element, and its descendant button elements can be switched with the arrow keys and confirmed with the Enter key."},
      "remove": {"name": "Remove Focus", "tip": "Remove the specified focus element"},
      "remove-latest": {"name": "Remove The Latest Focus", "tip": "Remove the latest focus element"},
      "reset": {"name": "Reset", "tip": "Remove all focus elements"}
    }},
    "setFocus-element": {"label": "Element", "tip": "Perform operation on this element"},
    "setFocus-mode": {"label": "Mode", "tip": "How to create the button list", "options": {
      "control-child-buttons": {"name": "Control Child Buttons", "tip": "Use shortcut keys to control buttons in child elements"},
      "control-descendant-buttons": {"name": "Control Descendant Buttons", "tip": "Use shortcut keys to control buttons in descendant elements"}
    }},
    "setFocus-cancelable": {"label": "Cancelable", "tip": "Press the Esc key to remove the current focus"},

    "[comment]": "********** Command - Set Ambient Light **********",
    "setAmbientLight": {"title": "Set Ambient Light"},
    "setAmbientLight-red": {"label": "Red", "tip": "Input color (Red) * Ambient Light (Red) / 255 = Output color (Red)"},
    "setAmbientLight-green": {"label": "Green", "tip": "Input color (Green) * Ambient Light (Green) / 255 = Output color (Green)"},
    "setAmbientLight-blue": {"label": "Blue", "tip": "Input color (Blue) * Ambient Light (Blue) / 255 = Output color (Blue)"},

    "[comment]": "********** Command - Tint Screen **********",
    "tintScreen": {"title": "Tint Screen"},
    "tintScreen-tint-0": {"label": "Tint - Red", "tip": "Input color (Red) + Hue (Red) = Output color (Red)"},
    "tintScreen-tint-1": {"label": "Tint - Green", "tip": "Input color (Green) + Hue (Green) = Output color (Green)"},
    "tintScreen-tint-2": {"label": "Tint - Blue", "tip": "Input color (Blue) + Hue (Blue) = Output color (Blue)"},
    "tintScreen-tint-3": {"label": "Tint - Grayscale", "tip": "Grayscale is opposite to saturation, the higher the grayscale, the lower the saturation"},

    "[comment]": "********** Command - Shake Screen **********",
    "shakeScreen": {"title": "Shake Screen"},
    "shakeScreen-mode": {"label": "Shake Mode", "options": {
      "random": "Random",
      "horizontal": "Horizontal",
      "vertical": "Vertical"
    }},
    "shakeScreen-power": {"label": "Power", "tip": "Amplitude of the shake"},
    "shakeScreen-speed": {"label": "Speed", "tip": "Speed of the shake"},

    "[comment]": "********** Command - Set Tile **********",
    "setTile": {"title": "Set Tile"},
    "setTile-tilemap": {"label": "Tilemap", "tip": "The tilemap whose tile is to be replaced"},
    "setTile-tilemapX": {"label": "Tilemap X", "tip": "The horizontal position of the tile to be replaced"},
    "setTile-tilemapY": {"label": "Tilemap Y", "tip": "The vertical position of the tile to be replaced"},
    "setTile-tilesetId": {"label": "Tileset", "tip": "Get tiles from this file"},
    "setTile-tilesetX": {"label": "Tileset X", "tip": "The horizontal position of the new tile"},
    "setTile-tilesetY": {"label": "Tileset Y", "tip": "The vertical position of the new tile"},

    "[comment]": "********** Command - Delete Tile **********",
    "deleteTile": {"title": "Delete Tile"},
    "deleteTile-tilemap": {"label": "Tilemap", "tip": "The tilemap from which to delete the tile"},
    "deleteTile-tilemapX": {"label": "Tilemap X", "tip": "The horizontal position of the tile to be deleted"},
    "deleteTile-tilemapY": {"label": "Tilemap Y", "tip": "The vertical position of the tile to be deleted"},

    "[comment]": "********** Command - Set Terrain **********",
    "setTerrain": {"title": "Set Terrain"},
    "setTerrain-position": {"label": "Position", "tip": "Select a position in the scene"},
    "setTerrain-terrain": {"label": "Terrain", "tip": "Which type of terrain to replace with", "options": {
      "land": {"name": "Land", "tip": "Replace with ground (actual terrain is influenced by the tile at this position)"},
      "water": {"name": "Water", "tip": "Replace with water surface"},
      "wall": {"name": "Wall", "tip": "Replace with wall block"}
    }},

    "[comment]": "********** Command - Create Object **********",
    "createObject": {"title": "Create Object"},
    "createObject-presetId": {"label": "Object"},
    "createObject-position": {"label": "Position"},

    "[comment]": "********** Command - Move Light **********",
    "moveLight": {"title": "Move Light"},
    "moveLight-light": {"label": "Light"},
    "moveLight-properties": {"label": "Properties"},
    "moveLight-property": {"title": "Light Property"},
    "moveLight-property-key": {"label": "Property", "options": {
      "x": "X",
      "y": "Y",
      "range": "Range",
      "intensity": "Intensity",
      "anchorX": "Anchor X",
      "anchorY": "Anchor Y",
      "width": "Width",
      "height": "Height",
      "angle": "Angle",
      "red": "Red",
      "green": "Green",
      "blue": "Blue"
    }},
    "moveLight-property-x": {"label": "X"},
    "moveLight-property-y": {"label": "Y"},
    "moveLight-property-range": {"label": "Range"},
    "moveLight-property-intensity": {"label": "Intensity"},
    "moveLight-property-anchorX": {"label": "Anchor X"},
    "moveLight-property-anchorY": {"label": "Anchor Y"},
    "moveLight-property-width": {"label": "Width"},
    "moveLight-property-height": {"label": "Height"},
    "moveLight-property-angle": {"label": "Angle"},
    "moveLight-property-red": {"label": "Red"},
    "moveLight-property-green": {"label": "Green"},
    "moveLight-property-blue": {"label": "Blue"},

    "[comment]": "********** Command - Delete Object **********",
    "deleteObject": {"title": "Delete Object"},
    "deleteObject-object": {"label": "Object"},

    "[comment]": "********** Command - Set State **********",
    "setState": {"title": "Set State"},
    "setState-state": {"label": "State", "tip": "Specify a state object"},
    "setState-operation": {"label": "Operation", "tip": "Perform a state operation", "options": {
      "set-time": {"name": "Set Time", "tip": "Set both the current time and maximum time of the state"},
      "increase-time": {"name": "Increase Time", "tip": "Increase the current time of the state and update the maximum time"},
      "decrease-time": {"name": "Decrease Time", "tip": "Decrease the current time of the state"}
    }},
    "setState-time": {"label": "Time", "tip": "The time of the state"},

    "[comment]": "********** Command - Play Animation **********",
    "playAnimation": {"title": "Play Animation"},
    "playAnimation-mode": {"label": "Mode", "tip": "Choose the reference point for the animation's position", "options": {
      "position": {"name": "Specify Position", "tip": "The animation is placed at a fixed position"},
      "actor": {"name": "Bind Actor", "tip": "The animation moves with the actor"}
    }},
    "playAnimation-position": {"label": "Position", "tip": "The position where the animation appears"},
    "playAnimation-actor": {"label": "Actor", "tip": "The actor that the animation follows"},
    "playAnimation-animationId": {"label": "Animation", "tip": "Specify the animation file ID"},
    "playAnimation-motion": {"label": "Motion", "tip": "Play this animation motion"},
    "playAnimation-rotatable": {"label": "Rotatable", "tip": "Whether the animation automatically updates its rotation angle", "options": {
      "true": {"name": "Yes", "tip": "The animation rotates based on the angle"},
      "false": {"name": "No", "tip": "The animation never rotates"}
    }},
    "playAnimation-priority": {"label": "Priority", "tip": "The render priority of the animation\nAnimations below will always obscure those above\nPriority = -1: Moves the render position up by one tile\nPriority = 1: Moves the render position down by one tile"},
    "playAnimation-offsetY": {"label": "Offset Y", "tip": "Vertical offset for the animation render position (in pixels)"},
    "playAnimation-angle": {"label": "Angle", "tip": "The angle influences the direction change of the motion"},
    "playAnimation-speed": {"label": "Speed", "tip": "Playback speed ratio\n0: Pause\n1: 100% playback speed\n10: 1000% playback speed"},

    "[comment]": "********** Command - Set Object Animation **********",
    "setObjectAnimation": {"title": "Set Object Animation"},
    "setObjectAnimation-sort": {"label": "Sort", "tip": "Which animation's property would you like to modify?", "options": {
      "actor": {"name": "Actor Animation", "tip": "Change the properties of this actor's main animation"},
      "components": {"name": "Animation Components", "tip": "Change the properties of all animation components of this actor, including actor animation\nHowever, some operations conflict with the 'Set Animation Component' command"},
      "trigger": {"name": "Trigger Animation", "tip": "Change the properties of this trigger's animation"},
      "animation": {"name": "Scene Animation", "tip": "Change the properties of this scene animation"}
    }},
    "setObjectAnimation-actor": {"label": "Actor", "tip": "Specify an actor object"},
    "setObjectAnimation-trigger": {"label": "Trigger", "tip": "Specify a trigger object"},
    "setObjectAnimation-animation": {"label": "Animation", "tip": "Specify a scene animation object"},
    "setObjectAnimation-operation": {"label": "Operation", "tip": "Modify which properties", "options": {
      "set-tint": {"name": "Set Tint", "tip": "Modify both RGB and grayscale"},
      "set-rgb": {"name": "Set RGB", "tip": "Modify RGB while keeping grayscale unchanged"},
      "set-gray": {"name": "Set Grayscale", "tip": "Modify grayscale while keeping RGB unchanged"},
      "set-opacity": {"name": "Set Opacity", "tip": "Adjust the visibility of the animation"},
      "set-offsetY": {"name": "Set OffsetY", "tip": "Vertical distance of the animation relative to the anchor point"},
      "set-rotation": {"name": "Set Rotation", "tip": "Rotation angle of the animation around the anchor point\nNot effective for triggers with animation rotation enabled"}
    }},
    "setObjectAnimation-tint-0": {"label": "Tint - Red", "tip": "Input color (Red) + Hue (Red) = Output color (Red)"},
    "setObjectAnimation-tint-1": {"label": "Tint - Green", "tip": "Input color (Green) + Hue (Green) = Output color (Green)"},
    "setObjectAnimation-tint-2": {"label": "Tint - Blue", "tip": "Input color (Blue) + Hue (Blue) = Output color (Blue)"},
    "setObjectAnimation-tint-3": {"label": "Tint - Grayscale", "tip": "Grayscale is opposite to saturation; the higher the grayscale, the lower the saturation"},
    "setObjectAnimation-opacity": {"label": "Opacity", "tip": "Adjust the visibility of the animation"},
    "setObjectAnimation-offsetY": {"label": "OffsetY", "tip": "Vertical distance of the animation relative to the anchor point"},
    "setObjectAnimation-rotation": {"label": "Rotation", "tip": "Rotation angle of the animation around the anchor point"},

    "[comment]": "********** Command - Play Audio **********",
    "playAudio": {"title": "Play Audio"},
    "playAudio-type": {"label": "Type", "tip": "Which channel to play on", "options": {
      "bgm": {"name": "BGM", "tip": "Stop the playing BGM and play the new audio"},
      "bgs": {"name": "BGS", "tip": "Stop the playing BGS and play the new audio"},
      "cv": {"name": "CV", "tip": "Stop the playing CV and play the new audio"},
      "se": {"name": "SE", "tip": "Multiple sound effects can be played at the same time"},
      "se-attenuated": {"name": "SE - Attenuated", "tip": "Play the sound effect at the specified position and automatically adjust the volume\nThe farther the sound position is from the center of the camera, the more attenuated it will be\nThe relevant settings can be modified in <Project Settings>"}
    }},
    "playAudio-audio": {"label": "Audio", "tip": "The audio file ID to play"},
    "playAudio-volume": {"label": "Volume", "tip": "Volume level (0 ~ 1)"},
    "playAudio-location": {"label": "Sound Position", "tip": "Play the sound effect at a specified position, attenuating the volume as it moves away from the center"},

    "[comment]": "********** Command - Stop Audio **********",
    "stopAudio": {"title": "Stop Audio"},
    "stopAudio-type": {"label": "Type", "tip": "Immediately stop playing this type of sound"},

    "[comment]": "********** Command - Set Volume **********",
    "setVolume": {"title": "Set Volume"},
    "setVolume-type": {"label": "Type", "tip": "Perform operation on this type of sound"},
    "setVolume-volume": {"label": "Volume", "tip": "Volume level (0 ~ 1)"},

    "[comment]": "********** Command - Set Pan **********",
    "setPan": {"title": "Set Pan"},
    "setPan-type": {"label": "Type", "tip": "Perform operation on this type of sound"},
    "setPan-pan": {"label": "Pan", "tip": "Affects volume placement from Left/Right channels (-1 ~ 1)\n0: Balance\n-1: Only left channel\n1: Only right channel"},

    "[comment]": "********** Command - Set Reverb **********",
    "setReverb": {"title": "Set Reverb"},
    "setReverb-type": {"label": "Type", "tip": "Perform operation on this type of sound"},
    "setReverb-dry": {"label": "Dry", "tip": "The volume of the original sound. The smaller it is, the farther it is from the sound source."},
    "setReverb-wet": {"label": "Wet", "tip": "The volume of the reflected sound. The larger it is, the larger the enclosed space."},

    "[comment]": "********** Command - Set Loop **********",
    "setLoop": {"title": "Set Loop"},
    "setLoop-type": {"label": "Type", "tip": "Perform operation on this type of sound"},
    "setLoop-loop": {"label": "Loop", "tip": "Whether the sound should loop", "options": {
      "false": {"name": "Once", "tip": "Stop playback when finished"},
      "true": {"name": "Loop", "tip": "Replay when finished"}
    }},

    "[comment]": "********** Command - Save Audio **********",
    "saveAudio": {"title": "Save Audio"},
    "saveAudio-type": {"label": "Type", "tip": "Perform operation on this type of sound"},

    "[comment]": "********** Command - Restore Audio **********",
    "restoreAudio": {"title": "Restore Audio"},
    "restoreAudio-type": {"label": "Type", "tip": "Perform operation on this type of sound"},

    "[comment]": "********** Command - Create Actor **********",
    "createActor": {"title": "Create Actor"},
    "createActor-actorId": {"label": "Actor", "tip": "Create this actor in the scene"},
    "createActor-teamId": {"label": "Team", "tip": "Initial team of the actor"},
    "createActor-position": {"label": "Position", "tip": "Initial position of the actor"},
    "createActor-angle": {"label": "Angle", "tip": "Initial angle of the actor"},

    "[comment]": "********** Command - Move Actor **********",
    "moveActor": {"title": "Move Actor"},
    "moveActor-actor": {"label": "Actor", "tip": "Move this actor"},
    "moveActor-mode": {"label": "Mode", "tip": "Movement operation for the actor", "options": {
      "stop": {"name": "Stop", "tip": "Stop actor movement, including the following behavior"},
      "keep": {"name": "Keep", "tip": "Keep moving towards an angle"},
      "straight": {"name": "Straight", "tip": "Move straight to the target location"},
      "navigate": {"name": "Navigate", "tip": "Auto pathfinding"},
      "navigate-bypass": {"name": "Navigate - Bypass Actors", "tip": "Navigate to the target location and bypass other actors"},
      "teleport": {"name": "Teleport", "tip": "Move immediately to the target location"}
    }},
    "moveActor-angle": {"label": "Angle", "tip": "Move the actor towards this angle"},
    "moveActor-destination": {"label": "Destination", "tip": "Move the actor to this position"},

    "[comment]": "********** Command - Follow Actor **********",
    "followActor": {"title": "Follow Actor"},
    "followActor-actor": {"label": "Actor", "tip": "Make this actor follow the target actor"},
    "followActor-target": {"label": "Target", "tip": "The actor being followed"},
    "followActor-mode": {"label": "Mode", "tip": "Shape of the target area", "options": {
      "circle": {"name": "Circle", "tip": "Actor A follows Actor B within a circle"},
      "rectangle": {"name": "Rectangle", "tip": "Actor A follows Actor B within a rectangle"}
    }},
    "followActor-minDist": {"label": "Min Distance", "tip": "Circle mode: When the distance is less than the minimum distance, actor A will move away from actor B\nRectangle mode: When the horizontal distance is less than the minimum distance, actor A will move away from actor B"},
    "followActor-maxDist": {"label": "Max Distance", "tip": "Circle mode: When the distance is greater than the maximum distance, actor A will approach actor B\nRectangle mode: When the horizontal distance is greater than the maximum distance, actor A will approach actor B"},
    "followActor-offset": {"label": "Offset Ratio", "tip": "If there are multiple actors following the same actor and the following distance is the same, you can set different offset ratios separately to avoid overlap\nValid range: [-0.8, 0.8]"},
    "followActor-vertDist": {"label": "Vert Distance", "tip": "When the Y-axis distance between actors is greater than the \"vertical distance\", actor A will approach actor B on the Y-axis"},
    "followActor-bufferDist": {"label": "Buffer Distance", "tip": "When the actor approaches the target, it moves slightly closer.\nWhen the actor moves away from the target, it moves slightly farther.\nThis helps reduce frequent start-stop actions."},
    "followActor-navigate": {"label": "Navigate", "tip": "Auto pathfinding to target location", "options": {
      "true": {"name": "Yes", "tip": "Recalculate the latest path every interval"},
      "false": {"name": "No", "tip": "Move directly to the target location"}
    }},
    "followActor-bypass": {"label": "Bypass Actors", "tip": "Bypass other actors", "options": {
      "true": {"name": "Yes", "tip": "Bypass scene grid cells occupied by other actors with non-zero weight"},
      "false": {"name": "No", "tip": "Ignore other actors"}
    }},
    "followActor-once": {"label": "Once", "tip": "Stop following upon reaching destination", "options": {
      "true": {"name": "Yes", "tip": "Stop following when entering the target area"},
      "false": {"name": "No", "tip": "Continue following the target actor"}
    }},

    "[comment]": "********** Command - Translate Actor **********",
    "translateActor": {"title": "Translate Actor"},
    "translateActor-actor": {"label": "Actor", "tip": "Translate this actor"},
    "translateActor-angle": {"label": "Angle", "tip": "Translate towards this angle"},
    "translateActor-distance": {"label": "Distance", "tip": "Distance to translate"},

    "[comment]": "********** Command - Change Threat **********",
    "changeThreat": {"title": "Change Threat"},
    "changeThreat-actor": {"label": "Actor", "tip": "Change this actor's threat level to the target actor"},
    "changeThreat-target": {"label": "Target", "tip": "Target actor"},
    "changeThreat-operation": {"label": "Operation", "tip": "Threat value adjustment", "options": {
      "increase": {"name": "Increase", "tip": "Increase the threat value to the target actor, while automatically adding the target actor to the target pool"},
      "decrease": {"name": "Decrease", "tip": "Decrease the threat value to the target actor"}
    }},
    "changeThreat-threat": {"label": "Threat", "tip": "You can get the \"Max Threat\" actor with the \"Get Target\" command"},

    "[comment]": "********** Command - Set Movement Speed **********",
    "setMovementSpeed": {"title": "Set Movement Speed"},
    "setMovementSpeed-actor": {"label": "Actor", "tip": "Change the movement speed of this actor"},
    "setMovementSpeed-property": {"label": "Property", "tip": "Base Speed * Speed Factor * Speed Factor (Temp) = Final movement speed", "options": {
      "base": {"name": "Base Speed", "tip": "The distance the actor moves per second"},
      "factor": {"name": "Speed Factor", "tip": "Set the actor's movement speed proportionally"},
      "factor-temp": {"name": "Speed Factor (Temp)", "tip": "Set the actor's movement speed proportionally, and it will not be written to the save data"}
    }},
    "setMovementSpeed-base": {"label": "Base Speed", "tip": "The distance the actor moves per second"},
    "setMovementSpeed-factor": {"label": "Speed Factor", "tip": "Set the actor's movement speed proportionally"},

    "[comment]": "********** Command - Set Angle **********",
    "setAngle": {"title": "Set Angle"},
    "setAngle-actor": {"label": "Actor", "tip": "Change the angle of this actor"},
    "setAngle-angle": {"label": "Angle", "tip": "The angle of the actor"},

    "[comment]": "********** Command - Fix Angle **********",
    "fixAngle": {"title": "Fix Angle"},
    "fixAngle-actor": {"label": "Actor", "tip": "Perform operation on this actor"},
    "fixAngle-fixed": {"label": "State", "tip": "Toggle the angle lock state", "options": {
      "true": {"name": "Fixed", "tip": "Lock the actor's angle"},
      "false": {"name": "Unfixed", "tip": "Unlock the actor's angle"}
    }},

    "[comment]": "********** Command - Set Weight **********",
    "setWeight": {"title": "Set Weight"},
    "setWeight-actor": {"label": "Actor", "tip": "Change the weight of this actor"},
    "setWeight-weight": {"label": "Weight", "tip": "It affects the push force during collision\nWhen weight = 0, the actor will not collide with other actors\nWhen the weight of actor A : the weight of actor B = 1 : 1, the movement speed of A pushing B is 50%\nWhen the weight of actor A : the weight of actor B = 1 : 2, the movement speed of A pushing B is 0%, unable to push\nWhen the weight of actor A : the weight of actor B = 2 : 1, the movement speed of A pushing B is 100%, there is no resistance at all\n$Related command\nSet Weight"},

    "[comment]": "********** Command - Set Active **********",
    "setActive": {"title": "Set Active"},
    "setActive-actor": {"label": "Actor", "tip": "Change the activation state of this actor"},
    "setActive-active": {"label": "State", "tip": "Activation operation", "options": {
      "true": {"name": "Active", "tip": "Return to normal"},
      "false": {"name": "Inactive", "tip": "Stop executing the actor's events\nThe actor can no longer be detected\nReset the actor's target pool\nRemove this actor from the target pools of related actors"}
    }},

    "[comment]": "********** Command - Get Actor **********",
    "getActor": {"title": "Get Actor"},
    "getActor-variable": {"label": "Write to Variable", "tip": "Write the obtained actor to this variable"},
    "getActor-position": {"label": "Position", "tip": "Find an actor at this location"},
    "getActor-area": {"label": "Select Area", "tip": "Search for actors in this shaped area", "options": {
      "square": {"name": "Square", "tip": "Find an actor within a square area centered at the specified position"},
      "circle": {"name": "Circle", "tip": "Find an actor within a circular area centered at the specified position"}
    }},
    "getActor-size": {"label": "Size", "tip": "Side length of the square area"},
    "getActor-radius": {"label": "Radius", "tip": "Radius of the circular area"},
    "getActor-selector": {"label": "Selector", "tip": "First filter for selecting an actor", "options": {
      "enemy": {"name": "Enemy", "tip": "Select hostile actors from the specified team"},
      "friend": {"name": "Friend", "tip": "Select friendly actors from the specified team"},
      "team": {"name": "Team Member", "tip": "Select members of the specified team"},
      "any": {"name": "Any", "tip": "Select any actor"}
    }},
    "getActor-teamId": {"label": "Team", "tip": "The team of the actor"},
    "getActor-condition": {"label": "Condition", "tip": "Second filter for selecting an actor", "options": {
      "nearest": {"name": "Nearest", "tip": "Select the actor closest to the area center"},
      "farthest": {"name": "Farthest", "tip": "Select the actor furthest from the area center"},
      "min-attribute-value": {"name": "Min Attribute Value", "tip": "Select the actor with the smallest specified attribute"},
      "max-attribute-value": {"name": "Max Attribute Value", "tip": "Select the actor with the largest specified attribute"},
      "min-attribute-ratio": {"name": "Min Attribute Ratio", "tip": "Select the actor with the smallest ratio between the two specified attributes"},
      "max-attribute-ratio": {"name": "Max Attribute Ratio", "tip": "Select the actor with the largest ratio between the two specified attributes"},
      "random": {"name": "Random", "tip": "Select an actor randomly"}
    }},
    "getActor-attribute": {"label": "Attribute", "tip": "The attribute of the target actor"},
    "getActor-divisor": {"label": "Attribute 2", "tip": "The second attribute of the target actor"},
    "getActor-activation": {"label": "Activation", "tip": "The activation state of the target actor", "options": {
      "active": {"name": "Active", "tip": "The actor must be activated"},
      "inactive": {"name": "Inactive", "tip": "The actor must be deactivated"},
      "either": {"name": "Either", "tip": "No activation state check"}
    }},
    "getActor-exclusion": {"label": "Exclusion", "tip": "Exclude actors that meet the condition", "options": {
      "none": {"name": "None", "tip": "Can be any actor"},
      "actor": {"name": "Exclude Actor", "tip": "Cannot be the specified actor"},
      "team": {"name": "Exclude Team", "tip": "Cannot be from the specified team"}
    }},
    "getActor-exclusionActor": {"label": "Exclusion Actor", "tip": "The target cannot be this actor"},
    "getActor-exclusionTeamId": {"label": "Exclusion Team", "tip": "The target cannot be from this team"},

    "[comment]": "********** Command - Get Multiple Actors **********",
    "getMultipleActors": {"title": "Get Multiple Actors"},
    "getMultipleActors-variable": {"label": "Write to List", "tip": "Write the generated actor list to this variable"},
    "getMultipleActors-position": {"label": "Position", "tip": "Find actors at this location"},
    "getMultipleActors-area": {"label": "Select Area", "tip": "Search for actors within this shaped area", "options": {
      "rectangle": {"name": "Rectangle", "tip": "Find actors within a rectangular area centered at the specified position"},
      "circle": {"name": "Circle", "tip": "Find actors within a circular area centered at the specified position"}
    }},
    "getMultipleActors-width": {"label": "Width", "tip": "Width of the rectangular area"},
    "getMultipleActors-height": {"label": "Height", "tip": "Height of the rectangular area"},
    "getMultipleActors-radius": {"label": "Radius", "tip": "Radius of the circular area"},
    "getMultipleActors-selector": {"label": "Selector", "tip": "First filter of actors", "options": {
      "enemy": {"name": "Team Enemy", "tip": "Select hostile actors from the specified team"},
      "friend": {"name": "Team Friend", "tip": "Select friendly actors from the specified team"},
      "team": {"name": "Team Member", "tip": "Select members from the specified team"},
      "any": {"name": "Any", "tip": "Select any actor"}
    }},
    "getMultipleActors-teamId": {"label": "Team", "tip": "Actor's team"},
    "getMultipleActors-activation": {"label": "Activation", "tip": "Target actor's activation status", "options": {
      "active": {"name": "Active", "tip": "Require the actor to be active"},
      "inactive": {"name": "Inactive", "tip": "Require the actor to be inactive"},
      "either": {"name": "Either", "tip": "Do not check activation status"}
    }},

    "[comment]": "********** Command - Delete Actor **********",
    "deleteActor": {"title": "Delete Actor"},
    "deleteActor-actor": {"label": "Actor", "tip": "Delete an actor from the scene, if it is a global actor, it will be removed and put into the background"},

    "[comment]": "********** Command - Set Player Actor **********",
    "setPlayerActor": {"title": "Set Player Actor"},
    "setPlayerActor-actor": {"label": "Global Actor", "tip": "Set a global actor as the player actor, then you can access the actor through \"Actor Getter -> Player Actor\""},

    "[comment]": "********** Command - Set Party Member **********",
    "setPartyMember": {"title": "Set Party Member"},
    "setPartyMember-operation": {"label": "Operation", "tip": "Player party operation", "options": {
      "add": {"name": "Add", "tip": "Add a global actor to the player's party"},
      "remove": {"name": "Remove", "tip": "Remove a global actor from the player's party"}
    }},
    "setPartyMember-actor": {"label": "Global Actor", "tip": "Perform operation on this actor"},

    "[comment]": "********** Command - Change Passable Terrain **********",
    "changePassableTerrain": {"title": "Change Passable Terrain"},
    "changePassableTerrain-actor": {"label": "Actor", "tip": "Change the passable area for this actor"},
    "changePassableTerrain-passage": {"label": "Passable Terrain", "tip": "Set a new passable area", "options": {
      "land": {"name": "Land", "tip": "The actor can only move on land"},
      "water": {"name": "Water", "tip": "The actor can only move in water"},
      "unrestricted": {"name": "Unrestricted", "tip": "The actor can move on land, in water, and through walls"}
    }},

    "[comment]": "********** Command - Change Actor Team **********",
    "changeActorTeam": {"title": "Change Actor Team"},
    "changeActorTeam-actor": {"label": "Actor", "tip": "Change the team of this actor"},
    "changeActorTeam-teamId": {"label": "Team", "tip": "Specify a new team for the actor"},

    "[comment]": "********** Command - Change Actor State **********",
    "changeActorState": {"title": "Change Actor State"},
    "changeActorState-actor": {"label": "Actor", "tip": "Change the state of this actor"},
    "changeActorState-operation": {"label": "Operation", "tip": "Actor state operation", "options": {
      "add": {"name": "Add", "tip": "Create a state with the specified ID and add it to the actor's state list (If the same state already exists, remove it first)"},
      "remove": {"name": "Remove", "tip": "Remove the state with the specified ID from the actor's state list"},
      "remove-instance": {"name": "Remove Instance", "tip": "Read a state from the state getter and remove it from the actor's state list"}
    }},
    "changeActorState-stateId": {"label": "State", "tip": "Specify the state file ID"},
    "changeActorState-state": {"label": "State", "tip": "State accessor"},

    "[comment]": "********** Command - Change Actor Equipment **********",
    "changeActorEquipment": {"title": "Change Actor Equipment"},
    "changeActorEquipment-actor": {"label": "Actor", "tip": "Change the equipment of this actor"},
    "changeActorEquipment-operation": {"label": "Operation", "tip": "Actor equipment operation", "options": {
      "add": {"name": "Add", "tip": "Create an equipment and add it to the actor's equipment slot (if an equipment exists in the slot, remove it first)"},
      "remove": {"name": "Remove", "tip": "Remove the equipment with the specified ID from the actor's equipment slots"},
      "add-instance": {"name": "Add Instance", "tip": "Read an equipment from the equipment getter and add it to the actor's equipment slot"},
      "remove-instance": {"name": "Remove Instance", "tip": "Read an equipment from the equipment getter and remove it from the actor's equipment slots"},
      "remove-slot": {"name": "Remove Slot", "tip": "Remove an equipment from the specified slot in the actor's equipment slots"}
    }},
    "changeActorEquipment-slot": {"label": "Slot", "tip": "Specify the equipment slot"},
    "changeActorEquipment-equipmentId": {"label": "EquipmentId", "tip": "Specify the equipment file ID"},
    "changeActorEquipment-equipment": {"label": "Equipment", "tip": "Equipment accessor"},

    "[comment]": "********** Command - Change Actor Skill **********",
    "changeActorSkill": {"title": "Change Actor Skill"},
    "changeActorSkill-actor": {"label": "Actor"},
    "changeActorSkill-operation": {"label": "Operation", "options": {
      "add": {"name": "Add", "tip": "Create a skill with the specified ID and add it to the actor's skill list (if the same skill already exists, skip)"},
      "remove": {"name": "Remove", "tip": "Remove the skill with the specified ID from the actor's skill list"},
      "remove-instance": {"name": "Remove Instance", "tip": "Read a skill from the skill getter and remove it from the actor's skill list"},
      "sort-by-order": {"name": "Sort by Filename", "tip": "Sort all skills of the actor by filename"}
    }},
    "changeActorSkill-skillId": {"label": "Skill"},
    "changeActorSkill-skill": {"label": "Skill"},

    "[comment]": "********** Command - Change Actor Portrait **********",
    "changeActorPortrait": {"title": "Change Actor Portrait"},
    "changeActorPortrait-actor": {"label": "Actor", "tip": "Change this actor's portrait"},
    "changeActorPortrait-mode": {"label": "Mode", "tip": "Change which parameters", "options": {
      "full": {"name": "Full Mode", "tip": "Change the image and the clip area"},
      "portrait": {"name": "Image Mode", "tip": "Only change the image"},
      "clip": {"name": "Clip Mode", "tip": "Only change the clip area"}
    }},
    "changeActorPortrait-portrait": {"label": "Portrait", "tip": "Specify the image file ID"},
    "changeActorPortrait-clip": {"label": "Clip", "tip": "Clip area of the portrait"},

    "[comment]": "********** Command - Change Actor Animation **********",
    "changeActorAnimation": {"title": "Change Actor Animation"},
    "changeActorAnimation-actor": {"label": "Actor", "tip": "Change this actor's animation"},
    "changeActorAnimation-animationId": {"label": "Animation", "tip": "Specify the animation file ID"},

    "[comment]": "********** Command - Change Actor Sprite **********",
    "changeActorSprite": {"title": "Change Actor Sprite"},
    "changeActorSprite-actor": {"label": "Actor", "tip": "Replace a sprite in this actor's animation"},
    "changeActorSprite-animationId": {"label": "Animation", "tip": "Select an animation file used to generate the sprite list"},
    "changeActorSprite-spriteId": {"label": "Sprite Name", "tip": "Select the sprite that needs to be changed"},
    "changeActorSprite-image": {"label": "Image", "tip": "Select a new sprite image"},

    "[comment]": "********** Command - Change Actor Motion **********",
    "changeActorMotion": {"title": "Change Actor Motion"},
    "changeActorMotion-actor": {"label": "Actor", "tip": "Replace this actor's specific motion"},
    "changeActorMotion-type": {"label": "Type", "tip": "Specific motion will be automatically switched", "options": {
      "idle": {"name": "Idle", "tip": "Replace the \"idle\" motion of the actor's animation with a new motion"},
      "move": {"name": "Move", "tip": "Replace the \"move\" motion of the actor's animation with a new motion"}
    }},
    "changeActorMotion-motion": {"label": "Motion", "tip": "New motion to replace"},

    "[comment]": "********** Command - Play Actor Animation **********",
    "playActorAnimation": {"title": "Play Actor Animation"},
    "playActorAnimation-actor": {"label": "Actor", "tip": "Play this actor's animation"},
    "playActorAnimation-motion": {"label": "Motion", "tip": "Select a valid motion included in the current actor's animation"},
    "playActorAnimation-speed": {"label": "Speed", "tip": "Set the animation playback speed\n1: Normal speed\n0.1: 10% playback speed\n10: 10 times playback speed\nValid range: [0.1, 10]"},

    "[comment]": "********** Command - Stop Actor Animation **********",
    "stopActorAnimation": {"title": "Stop Actor Animation"},
    "stopActorAnimation-actor": {"label": "Actor", "tip": "Stop playing the current animation of this actor"},

    "[comment]": "********** Command - Add Animation Component **********",
    "addAnimationComponent": {"title": "Add Animation Component"},
    "addAnimationComponent-actor": {"label": "Actor", "tip": "Add the animation component to this actor"},
    "addAnimationComponent-animationId": {"label": "Animation", "tip": "Select an animation file"},
    "addAnimationComponent-motion": {"label": "Motion", "tip": "Select a motion of the animation.\nThe animation ID plus the motion ID form the ID of the animation component.\nTherefore, components with the same animation and motion cannot be added repeatedly."},
    "addAnimationComponent-rotatable": {"label": "Rotatable", "tip": "Whether to automatically update the animation rotation angle", "options": {
      "true": {"name": "Yes", "tip": "The animation rotates due to its angle"},
      "false": {"name": "No", "tip": "The animation never rotates"}
    }},
    "addAnimationComponent-syncAngle": {"label": "Sync Angle", "tip": "Whether to synchronize the animation with the actor's angle", "options": {
      "true": {"name": "Yes", "tip": "The animation angle is always set to the current angle of the actor.\nAnd the animation angle will affect the switching of the motion direction."},
      "false": {"name": "No", "tip": "The animation angle does not change automatically."}
    }},
    "addAnimationComponent-priority": {"label": "Priority", "tip": "Sorting priority of the animation component\n - Less than 0: The animation component is displayed below actor animation\n - Greater than or equal to 0: The animation component is displayed above actor animation"},
    "addAnimationComponent-offsetY": {"label": "Offset Y", "tip": "Vertical offset distance of the animation rendering position (unit: pixel)"},

    "[comment]": "********** Command - Set Animation Component **********",
    "setAnimationComponent": {"title": "Set Animation Component"},
    "setAnimationComponent-actor": {"label": "Actor", "tip": "Set the animation component of this actor"},
    "setAnimationComponent-animationId": {"label": "Animation", "tip": "Select an animation file"},
    "setAnimationComponent-motion": {"label": "Motion", "tip": "Select a motion of the animation.\nThe animation ID plus the motion ID form the ID of the animation component.\nTherefore, components with the same animation and motion cannot be added repeatedly."},
    "setAnimationComponent-operation": {"label": "Operation", "tip": "Animation component operations", "options": {
      "set-angle": {"name": "Set Angle", "tip": "Angle affects the direction of the motion"},
      "set-scale": {"name": "Set Scale", "tip": "Animation scaling factor"},
      "set-speed": {"name": "Set Speed", "tip": "Playback speed ratio"},
      "set-opacity": {"name": "Set Opacity", "tip": "Opacity affects the visibility of the animation"},
      "set-priority": {"name": "Set Priority", "tip": "Sorting priority of the animation component"},
      "set-offsetY": {"name": "Set Offset Y", "tip": "Vertical offset distance of the animation rendering position"},
      "set-sprite": {"name": "Set Sprite", "tip": "Replace the sprite image"},
      "play-motion": {"name": "Play Motion", "tip": "Play a specified motion"},
      "stop-motion": {"name": "Stop Motion", "tip": "Stop playing the current motion"}
    }},
    "setAnimationComponent-angle": {"label": "Angle", "tip": "Angle affects the direction of the motion"},
    "setAnimationComponent-scale": {"label": "Scale", "tip": "Animation scaling factor (0 ~ 10)"},
    "setAnimationComponent-speed": {"label": "Speed", "tip": "Playback speed ratio (0 ~ 10)"},
    "setAnimationComponent-opacity": {"label": "Opacity", "tip": "Opacity affects the visibility of the animation (0 ~ 1)"},
    "setAnimationComponent-priority": {"label": "Priority", "tip": "Sorting priority of the animation component\n - Less than 0: The animation component is displayed below actor animation\n - Greater than or equal to 0: The animation component is displayed above actor animation"},
    "setAnimationComponent-offsetY": {"label": "Offset Y", "tip": "Vertical offset distance of the animation rendering position (unit: pixel)"},
    "setAnimationComponent-spriteId": {"label": "Sprite Name", "tip": "Select the sprite you want to change"},
    "setAnimationComponent-image": {"label": "Image", "tip": "Select a new image as the sprite image"},
    "setAnimationComponent-playMotion": {"label": "Play Motion", "tip": "Select a motion to play"},

    "[comment]": "********** Command - Remove Animation Component **********",
    "removeAnimationComponent": {"title": "Remove Animation Component"},
    "removeAnimationComponent-actor": {"label": "Actor", "tip": "Remove the animation component from this actor"},
    "removeAnimationComponent-animationId": {"label": "Animation", "tip": "Select an animation file"},
    "removeAnimationComponent-motion": {"label": "Motion", "tip": "Select a motion of the animation.\nThe animation ID plus the motion ID form the ID of the animation component.\nTherefore, components with the same animation and motion cannot be added repeatedly."},

    "[comment]": "********** Command - Create Global Actor **********",
    "createGlobalActor": {"title": "Create Global Actor"},
    "createGlobalActor-actorId": {"label": "Actor", "tip": "Select an actor file and create the corresponding global actor (the data of this actor will be saved)"},
    "createGlobalActor-teamId": {"label": "Team", "tip": "Select an initial team for this actor"},

    "[comment]": "********** Command - Transfer Global Actor **********",
    "transferGlobalActor": {"title": "Transfer Global Actor"},
    "transferGlobalActor-actor": {"label": "Actor", "tip": "Get this global actor from the background and transfer him to the scene"},
    "transferGlobalActor-position": {"label": "Position", "tip": "Set a location in the current scene where this actor will appear"},

    "[comment]": "********** Command - Delete Global Actor **********",
    "deleteGlobalActor": {"title": "Delete Global Actor"},
    "deleteGlobalActor-actorId": {"label": "Actor", "tip": "Completely delete the specified global actor from the background"},

    "[comment]": "********** Command - Set Target **********",
    "setTarget": {"title": "Set Target"},
    "setTarget-actor": {"label": "Actor", "tip": "Set the specified actor as the 'Target Actor' in the actor accessor"},

    "[comment]": "********** Command - Get Target **********",
    "getTarget": {"title": "Get Target"},
    "getTarget-actor": {"label": "Actor", "tip": "Gets a target actor from this actor's target pool"},
    "getTarget-selector": {"label": "Selector", "tip": "First actor screening", "options": {
      "enemy": {"name": "Enemy", "tip": "Select enemy actors from the target pool"},
      "friend": {"name": "Friend", "tip": "Select friendly actors from the target pool"},
      "team": {"name": "Team Member", "tip": "Select team members from the target pool"},
      "team-except-self": {"name": "Team Member Except Self", "tip": "Select team members except this actor from the target pool"},
      "any-except-self": {"name": "Any Except Self", "tip": "Select all actors except this actor from the target pool"},
      "any": {"name": "Any", "tip": "Select all actors from the target pool"}
    }},
    "getTarget-condition": {"label": "Condition", "tip": "Second actor screening", "options": {
      "max-threat": {"name": "Max Threat", "tip": "Select the actor with the greatest threat for this actor"},
      "nearest": {"name": "Nearest", "tip": "Select the actor closest to this actor"},
      "farthest": {"name": "Farthest", "tip": "Select the actor furthest from this actor"},
      "min-attribute-value": {"name": "Min Attribute Value", "tip": "Select the actor with the smallest specified attribute"},
      "max-attribute-value": {"name": "Max Attribute Value", "tip": "Select the actor with the largest specified attribute"},
      "min-attribute-ratio": {"name": "Min Attribute Ratio", "tip": "Select the actor with the smallest ratio between the two specified attributes"},
      "max-attribute-ratio": {"name": "Max Attribute Ratio", "tip": "Select the actor with the largest ratio between the two specified attributes"},
      "random": {"name": "Random", "tip": "Select an actor randomly"}
    }},
    "getTarget-attribute": {"label": "Attribute", "tip": "The attribute of the target actor"},
    "getTarget-divisor": {"label": "Attribute 2", "tip": "The attribute 2 of the target actor"},

    "[comment]": "********** Command - Append Target **********",
    "appendTarget": {"title": "Append Target"},
    "appendTarget-actor": {"label": "Actor", "tip": "Add an actor to this actor's target pool"},
    "appendTarget-target": {"label": "Target", "tip": "Specify a target actor and add him to the target pool"},

    "[comment]": "********** Command - Remove Target **********",
    "removeTarget": {"title": "Remove Target"},
    "removeTarget-actor": {"label": "Actor", "tip": "Remove an actor from this actor's target pool"},
    "removeTarget-target": {"label": "Target", "tip": "Specify a target actor and remove him from the target pool"},

    "[comment]": "********** Command - Detect Targets **********",
    "detectTargets": {"title": "Detect Targets"},
    "detectTargets-actor": {"label": "Actor", "tip": "Detect other actors near this actor's location and add them to the target pool"},
    "detectTargets-distance": {"label": "Distance", "tip": "Select actors within a circle with a specified radius"},
    "detectTargets-selector": {"label": "Selector", "tip": "Filter target actors from nearby actors", "options": {
      "enemy": {"name": "Enemy", "tip": "Select enemy actors from the target pool"},
      "friend": {"name": "Friend", "tip": "Select friendly actors from the target pool"},
      "team": {"name": "Team Member", "tip": "Select team members from the target pool"},
      "team-except-self": {"name": "Team Member Except Self", "tip": "Select team members except this actor from the target pool"},
      "any-except-self": {"name": "Any Except Self", "tip": "Select all actors except this actor from the target pool"},
      "any": {"name": "Any", "tip": "Select all actors from the target pool"}
    }},
    "detectTargets-inSight": {"label": "In Sight", "tip": "Whether the target actor needs to be visible", "options": {
      "true": {"name": "Enabled", "tip": "Exclude target actors that are blocked by walls and not in sight"},
      "false": {"name": "Disabled", "tip": "Select target actors even if they are not in sight"}
    }},

    "[comment]": "********** Command - Discard Targets **********",
    "discardTargets": {"title": "Discard Targets"},
    "discardTargets-actor": {"label": "Actor", "tip": "Remove some target actors from this actor's target pool"},
    "discardTargets-selector": {"label": "Selector", "tip": "Filter target actors that meet the criteria", "options": {
      "enemy": {"name": "Enemy", "tip": "Select enemy actors from the target pool"},
      "friend": {"name": "Friend", "tip": "Select friendly actors from the target pool"},
      "team": {"name": "Team Member", "tip": "Select team members from the target pool"},
      "team-except-self": {"name": "Team Member Except Self", "tip": "Select team members except this actor from the target pool"},
      "any-except-self": {"name": "Any Except Self", "tip": "Select all actors except this actor from the target pool"},
      "any": {"name": "Any", "tip": "Select all actors from the target pool"}
    }},
    "discardTargets-distance": {"label": "Distance", "tip": "Remove actors from the target pool that are greater than or equal to the specified distance"},

    "[comment]": "********** Command - Reset Targets **********",
    "resetTargets": {"title": "Reset Targets"},
    "resetTargets-actor": {"label": "Actor", "tip": "Clear this actor's target pool"},

    "[comment]": "********** Command - Render Outline **********",
    "renderOutline": {"title": "Render Outline"},
    "renderOutline-operation": {"label": "Operation", "tip": "Whether to render the outline of the actor animation sprite", "options": {
      "add": {"name": "Add", "tip": "Render the outline of the specified actor"},
      "remove": {"name": "Remove", "tip": "Cancel rendering the outline of the specified actor"},
      "reset": {"name": "Reset", "tip": "Do not render the outline of any actor"}
    }},
    "renderOutline-actor": {"label": "Actor", "tip": "Perform operation on this actor"},
    "renderOutline-color": {"label": "Color", "tip": "Color of the outline stroke"},

    "[comment]": "********** Command - Cast Skill **********",
    "castSkill": {"title": "Cast Skill"},
    "castSkill-actor": {"label": "Actor", "tip": "Cast a skill of this actor. The skill caster can be read in the skill event."},
    "castSkill-mode": {"label": "Mode", "tip": "How to acquire the skill", "options": {
      "by-key": {"name": "By Shortcut Key", "tip": "Get the actor's skill by a shortcut key"},
      "by-id": {"name": "By Skill ID", "tip": "Get the actor's skill by skill ID"},
      "by-skill": {"name": "By Skill Instance", "tip": "Get the skill object by the skill accessor (It must be in this actor's skill list to take effect)"}
    }},
    "castSkill-key": {"label": "Shortcut Key", "tip": "Get the skill registered with this shortcut key from the skill list"},
    "castSkill-skillId": {"label": "Skill", "tip": "Get the skill whose skill ID matches from the skill list"},
    "castSkill-skill": {"label": "Skill", "tip": "Get the skill from the skill accessor"},

    "[comment]": "********** Command - Set Skill **********",
    "setSkill": {"title": "Set Skill"},
    "setSkill-skill": {"label": "Skill", "tip": "Get a skill from the skill accessor and set it"},
    "setSkill-operation": {"label": "Operation", "tip": "Perform a skill operation", "options": {
      "set-cooldown": {"name": "Set Cooldown Time", "tip": "Set the cooldown time of this skill and start the cooldown timer"},
      "increase-cooldown": {"name": "Increase Cooldown Time", "tip": "Increase the cooldown time of this skill and start the cooldown timer"},
      "decrease-cooldown": {"name": "Decrease Cooldown Time", "tip": "Reduce the cooldown time of this skill (minimum is 0)"}
    }},
    "setSkill-cooldown": {"label": "Cooldown Time", "tip": "Skill cooldown time"},

    "[comment]": "********** Command - Create Trigger **********",
    "createTrigger": {"title": "Create Trigger"},
    "createTrigger-triggerId": {"label": "Trigger", "tip": "Create a trigger object corresponding to the file ID"},
    "createTrigger-caster": {"label": "Caster", "tip": "This actor can be accessed through \"Skill Caster\" in the trigger events"},
    "createTrigger-origin": {"label": "Origin", "tip": "The initial position of this trigger"},
    "createTrigger-angle": {"label": "Angle", "tip": "The initial angle of this trigger, 0 degrees = right, clockwise rotation"},
    "createTrigger-distance": {"label": "Distance", "tip": "The distance this trigger is offset from the initial position to the initial angle (actual position)"},
    "createTrigger-scale": {"label": "Scale", "tip": "The scaling factor for this trigger's shape and animation (can be used as attack range)"},
    "createTrigger-timeScale": {"label": "Global Speed", "tip": "The playback speed for this trigger and animation (can be used as attack speed)"},

    "[comment]": "********** Command - Set Trigger Speed **********",
    "setTriggerSpeed": {"title": "Set Trigger Speed"},
    "setTriggerSpeed-trigger": {"label": "Trigger", "tip": "Set this trigger"},
    "setTriggerSpeed-speed": {"label": "Speed", "tip": "Trigger movement speed (unit: tiles/second)"},

    "[comment]": "********** Command - Set Trigger Angle **********",
    "setTriggerAngle": {"title": "Set Trigger Angle"},
    "setTriggerAngle-trigger": {"label": "Trigger", "tip": "Set this trigger"},
    "setTriggerAngle-angle": {"label": "Angle", "tip": "Trigger angle, 0 degrees = right, clockwise rotation"},

    "[comment]": "********** Command - Set Trigger Duration **********",
    "setTriggerDuration": {"title": "Set Trigger Duration"},
    "setTriggerDuration-trigger": {"label": "Trigger", "tip": "Set this trigger"},
    "setTriggerDuration-operation": {"label": "Operation", "tip": "Perform a trigger operation", "options": {
      "set": {"name": "Set", "tip": "Set the duration of this trigger"},
      "increase": {"name": "Increase", "tip": "Increase the duration of this trigger"},
      "decrease": {"name": "Decrease", "tip": "Reduce the duration of this trigger (minimum is 0)"}
    }},
    "setTriggerDuration-duration": {"label": "Duration", "tip": "Trigger duration"},

    "[comment]": "********** Command - Set Trigger Motion **********",
    "setTriggerMotion": {"title": "Set Trigger Motion"},
    "setTriggerMotion-trigger": {"label": "Trigger", "tip": "Set this trigger"},
    "setTriggerMotion-motion": {"label": "Motion", "tip": "Let the trigger's animation switch to this motion"},

    "[comment]": "********** Command - Set Inventory **********",
    "setInventory": {"title": "Set Inventory"},
    "setInventory-actor": {"label": "Actor", "tip": "Set the inventory of this actor"},
    "setInventory-operation": {"label": "Operation", "tip": "Perform an inventory operation", "options": {
      "increase-money": {"name": "Increase Money", "tip": "Increase inventory money"},
      "decrease-money": {"name": "Decrease Money", "tip": "Reduce inventory money (minimum is 0)"},
      "increase-items": {"name": "Increase Items", "tip": "Create a specified number of items and add them to the inventory,\nmerge them if the same item already exists, otherwise insert them into the frontmost empty position"},
      "decrease-items": {"name": "Decrease Items", "tip": "Remove a specified number of items from the inventory"},
      "gain-equipment": {"name": "Gain Equipment", "tip": "Create an equipment and insert it into the frontmost empty slot of the inventory"},
      "lose-equipment": {"name": "Lose Equipment", "tip": "Remove an item from the inventory"},
      "gain-equipment-instance": {"name": "Gain Equipment Instance", "tip": "Get the equipment from the equipment accessor and insert it into the frontmost empty slot of the inventory"},
      "lose-equipment-instance": {"name": "Lose Equipment Instance", "tip": "Get the equipment from the equipment accessor and remove it from the inventory"},
      "swap": {"name": "Swap Order of Items", "tip": "Swap two item slots, or an item slot and an empty slot"},
      "sort": {"name": "Sort Simply", "tip": "Remove empty slots between items so that items are closely packed but do not change the order of items"},
      "sort-by-order": {"name": "Sort by Filename", "tip": "Remove empty slots between items so that items are closely packed and sort items in ascending order by file name"},
      "reference": {"name": "Use Global Actor's Inventory", "tip": "Set the specified global actor's inventory to this actor's inventory (shared)"},
      "dereference": {"name": "Restore Inventory", "tip": "Restore this actor's own inventory (unshared)"},
      "reset": {"name": "Reset", "tip": "Clear items and money from the inventory"}
    }},
    "setInventory-money": {"label": "Money", "tip": "Money in inventory"},
    "setInventory-itemId": {"label": "Item", "tip": "The file ID of the item"},
    "setInventory-quantity": {"label": "Quantity", "tip": "The quantity of this item"},
    "setInventory-equipmentId": {"label": "Equipment", "tip": "The file ID of the equipment"},
    "setInventory-equipment": {"label": "Equipment", "tip": "Get an existing equipment from the equipment accessor"},
    "setInventory-order1": {"label": "Order A", "tip": "The order of item A in the inventory (An empty slot is also available)"},
    "setInventory-order2": {"label": "Order B", "tip": "The order of item B in the inventory (An empty slot is also available)"},
    "setInventory-refActor": {"label": "Global Actor", "tip": "Get the inventory of this global actor for sharing"},

    "[comment]": "********** Command - Use Item **********",
    "useItem": {"title": "Use Item"},
    "useItem-actor": {"label": "Actor", "tip": "Use the item of this actor"},
    "useItem-mode": {"label": "Mode", "tip": "How to obtain the item", "options": {
      "by-key": {"name": "By Shortcut Key", "tip": "Get the item in the actor's inventory by a shortcut key"},
      "by-id": {"name": "By Item ID", "tip": "Get the item in the actor's inventory by item ID"},
      "by-item": {"name": "By Item Instance", "tip": "Get the item object by the item accessor (It must be in this actor's inventory to take effect)"}
    }},
    "useItem-key": {"label": "Shortcut Key", "tip": "Get the item registered with this shortcut key from the inventory"},
    "useItem-itemId": {"label": "Item", "tip": "Get the item whose item ID matches from the inventory"},
    "useItem-item": {"label": "Item", "tip": "Get the item from the item accessor"},

    "[comment]": "********** Command - Set Item **********",
    "setItem": {"title": "Set Item"},
    "setItem-item": {"label": "Item", "tip": "Set this item"},
    "setItem-operation": {"label": "Operation", "tip": "Perform an item operation", "options": {
      "increase": {"name": "Increase", "tip": "Increase the stack size of this item"},
      "decrease": {"name": "Decrease", "tip": "Reduce the stack size of this item (If the quantity of this item is insufficient, it will be deleted)"}
    }},
    "setItem-quantity": {"label": "Quantity", "tip": "The quantity of this item"},

    "[comment]": "********** Command - Set Cooldown **********",
    "setCooldown": {"title": "Set Cooldown"},
    "setCooldown-actor": {"label": "Actor", "tip": "Set a global cooldown for this actor"},
    "setCooldown-operation": {"label": "Operation", "tip": "Perform a global cooldown operation", "options": {
      "set": {"name": "Set", "tip": "Set the cooldown time of this cooldown key and start the cooldown timer"},
      "increase": {"name": "Increase", "tip": "Increase the cooldown time of this cooldown key and start the cooldown timer"},
      "decrease": {"name": "Decrease", "tip": "Reduce the cooldown time of this cooldown key (minimum is 0)"}
    }},
    "setCooldown-key": {"label": "Cooldown Key", "tip": "Get the actor's global cooldown object by this cooldown key"},
    "setCooldown-cooldown": {"label": "Cooldown Time", "tip": "Global cooldown time"},

    "[comment]": "********** Command - Set Shortcut **********",
    "setShortcut": {"title": "Set Shortcut"},
    "setShortcut-actor": {"label": "Actor", "tip": "Set the shortcut for this actor"},
    "setShortcut-operation": {"label": "Operation", "tip": "Perform a shortcut operation", "options": {
      "set-item-shortcut": {"name": "Set Item Shortcut", "tip": "Bind the item with the specified ID to the shortcut key"},
      "set-skill-shortcut": {"name": "Set Skill Shortcut", "tip": "Bind the skill with the specified ID to the shortcut key"},
      "delete-shortcut": {"name": "Delete Shortcut", "tip": "Unbind the shortcut key from the corresponding item or skill"},
      "swap-shortcuts": {"name": "Swap Shortcuts", "tip": "Swap the contents of the two shortcut key bindings (empty ones are also acceptable)"}
    }},
    "setShortcut-key": {"label": "Shortcut Key", "tip": "The shortcut key for an item or skill"},
    "setShortcut-key2": {"label": "Shortcut Key 2", "tip": "The shortcut key 2 for an item or skill"},
    "setShortcut-itemId": {"label": "Item", "tip": "Bind this item to the shortcut key"},
    "setShortcut-skillId": {"label": "Skill", "tip": "Bind this skill to the shortcut key"},

    "[comment]": "********** Command - Activate Scene **********",
    "activateScene": {"title": "Activate Scene"},
    "activateScene-pointer": {"label": "Scene", "tip": "Activate which scene container", "options": {
      "0": {"name": "Scene A", "tip": "Switch to the main scene container and pause the activities of the secondary scene container"},
      "1": {"name": "Scene B", "tip": "Switch to the secondary scene container and pause the activities of the main scene container"}
    }},

    "[comment]": "********** Command - Load Scene **********",
    "loadScene": {"title": "Load Scene"},
    "loadScene-sceneId": {"label": "Scene", "tip": "Reset the scene container and load the scene with this ID"},
    "loadScene-transfer": {"label": "Transfer Player", "tip": "Whether to transfer the player actor after the scene is loaded", "options": {
      "true": {"name": "Yes", "tip": "Transfer the player actor to the specified location"},
      "false": {"name": "No", "tip": "Does not transfer the player actor"}
    }},
    "loadScene-x": {"label": "X", "tip": "Move the player actor to this horizontal position"},
    "loadScene-y": {"label": "Y", "tip": "Move the player actor to this vertical position"},

    "[comment]": "********** Command - Load Subscene **********",
    "loadSubscene": {"title": "Load Subscene"},
    "loadSubscene-sceneId": {"label": "Scene", "tip": "Load all objects in the scene with this ID"},
    "loadSubscene-shiftX": {"label": "Shift X", "tip": "Horizontal position offset of all loaded objects"},
    "loadSubscene-shiftY": {"label": "Shift Y", "tip": "Vertical position offset of all loaded objects"},

    "[comment]": "********** Command - Unload Subscene **********",
    "unloadSubscene": {"title": "Unload Subscene"},
    "unloadSubscene-sceneId": {"label": "Scene", "tip": "Delete all objects related to the scene with this ID"},

    "[comment]": "********** Command - Clamp Camera **********",
    "clampCamera": {"title": "Clamp Camera"},
    "clampCamera-left": {"label": "Left", "tip": "Scene's horizontal position"},
    "clampCamera-top": {"label": "Top", "tip": "Scene's vertical position"},
    "clampCamera-right": {"label": "Right", "tip": "Scene's horizontal position"},
    "clampCamera-bottom": {"label": "Bottom", "tip": "Scene's vertical position"},

    "[comment]": "********** Command - Move Camera **********",
    "moveCamera": {"title": "Move Camera"},
    "moveCamera-mode": {"label": "Mode", "tip": "Choose the reference object for the camera position", "options": {
      "position": {"name": "Move to Position", "tip": "Move the camera to a specified position in the scene"},
      "actor": {"name": "Follow Actor", "tip": "Lock the camera to a specified actor's position"}
    }},
    "moveCamera-position": {"label": "Position", "tip": "Move the camera to this position"},
    "moveCamera-actor": {"label": "Actor", "tip": "Lock the camera to this actor's position"},

    "[comment]": "********** Command - Set Zoom Factor **********",
    "setZoomFactor": {"title": "Set Zoom Factor"},
    "setZoomFactor-zoom": {"label": "Zoom Factor", "tip": "The zoom factor of the scene"},

    "[comment]": "********** Command - Set Game Speed **********",
    "setGameSpeed": {"title": "Set Game Speed"},
    "setGameSpeed-speed": {"label": "Speed", "tip": "The ratio of game speed that affects the delta time of each frame"},

    "[comment]": "********** Command - Set Cursor **********",
    "setCursor": {"title": "Set Cursor"},
    "setCursor-image": {"label": "Image", "tip": "Set mouse pointer to this image"},

    "[comment]": "********** Command - Set Team Relation **********",
    "setTeamRelation": {"title": "Set Team Relation"},
    "setTeamRelation-teamId1": {"label": "Team A", "tip": "Specify the ID of team A"},
    "setTeamRelation-teamId2": {"label": "Team B", "tip": "Specify the ID of team B"},
    "setTeamRelation-relation": {"label": "Relation", "tip": "Set the relation between the two teams", "options": {
      "0": {"name": "Enemy", "tip": "Set two teams to be hostile"},
      "1": {"name": "Friend", "tip": "Set two teams to be friendly"}
    }},

    "[comment]": "********** Command - Switch Collision System **********",
    "switchCollisionSystem": {"title": "Switch Collision System"},
    "switchCollisionSystem-operation": {"label": "Operation", "tip": "Perform collision system operation", "options": {
      "enable-actor-collision": {"name": "Enable Actor Collision", "tip": "Enable the built-in actor-to-actor collision system"},
      "disable-actor-collision": {"name": "Disable Actor Collision", "tip": "Disable the built-in actor-to-actor collision system"},
      "enable-scene-collision": {"name": "Enable Scene Collision", "tip": "Enable the built-in actor-to-scene collision system"},
      "disable-scene-collision": {"name": "Disable Scene Collision", "tip": "Disable the built-in actor-to-scene collision system"}
    }},

    "[comment]": "********** Command - Game Data **********",
    "gameData": {"title": "Game Data"},
    "gameData-operation": {"label": "Operation", "tip": "Perform a save-related operation", "options": {
      "save": {"name": "Save", "tip": "Save the current game data to the save file at the specified index\nYou can also save some simple local variables (boolean, number, string) in the current event\nAutomatically read them when reading each save data by the \"For Each\" command into local variables of the same name"},
      "load": {"name": "Load", "tip": "Read game data from the save file at the specified index"},
      "delete": {"name": "Delete", "tip": "Delete the save file of the specified index"}
    }},
    "gameData-index": {"label": "Save Index", "tip": "The number of the save file, corresponding to the number in the file name"},
    "gameData-variables": {"label": "Save Variables", "placeholder": "Separated by Commas", "tip": "Save some simple local variables (boolean, number, string) in the current event\nAutomatically read them when reading each save data by the \"For Each\" command into local variables of the same name"},

    "[comment]": "********** Command - Simulate Key **********",
    "simulateKey": {"title": "Simulate Key"},
    "simulateKey-operation": {"label": "Operation", "tip": "Simulate a keyboard action", "options": {
      "click": {"name": "Click", "tip": "Simulate the press and release behavior of the specified key"},
      "press": {"name": "Press", "tip": "If the specified key is released, simulate the press behavior and trigger the \"Key Down\" event"},
      "release": {"name": "Release", "tip": "If the specified key is pressed, simulate the release behavior and trigger the \"Key Up\" event"}
    }},
    "simulateKey-keycode": {"label": "Key Code", "tip": "Press any key to enter the key code"},

    "[comment]": "********** Command - Set Language **********",
    "setLanguage": {"title": "Set Language"},
    "setLanguage-language": {"label": "Language", "tip": "Switch to this language and refresh localized content (after deployment, the language settings will be automatically saved when exiting the game)"},

    "[comment]": "********** Command - Set Resolution **********",
    "setResolution": {"title": "Set Resolution"},
    "setResolution-width": {"label": "Width", "tip": "The actual width of the game canvas, which is automatically scaled by the window size (automatically saved after deployment)"},
    "setResolution-height": {"label": "Height", "tip": "The actual height of the game canvas, which is automatically scaled by the window size (automatically saved after deployment)"},
    "setResolution-sceneScale": {"label": "Scene Scale", "tip": "Display scene objects proportionally (automatically saved after deployment)"},
    "setResolution-uiScale": {"label": "UI Scale", "tip": "Display UI elements proportionally (automatically saved after deployment)"},

    "[comment]": "********** Command - Script **********",
    "script": {"title": "Script"}
  }
}